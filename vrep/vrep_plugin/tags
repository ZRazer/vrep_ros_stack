!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CSubscriberData	include/vrep_plugin/vrepSubscriber.h	/^class CSubscriberData$/;"	c
CSubscriberData	src/vrepSubscriber.cpp	/^CSubscriberData::CSubscriberData(ros::NodeHandle* node,const char* _topicName,int queueSize,int _streamCmd,int _auxInt1,int _auxInt2,const char* _auxString,image_transport::ImageTransport* images_streamer[1],int& imgStreamerCnt)$/;"	f	class:CSubscriberData
FARPROC	include/v_repLib.h	43;"	d
FARPROC	include/v_repLib.h	50;"	d
LIBRARY	include/v_repLib.h	41;"	d
LIBRARY	include/v_repLib.h	47;"	d
LIBRARY	include/v_repLib.h	51;"	d
LUA_DISABLE_PUBLISHER	src/vrep_plugin.cpp	17;"	d	file:
LUA_DISABLE_PUBLISHER_CALLBACK	src/vrep_plugin.cpp	/^void LUA_DISABLE_PUBLISHER_CALLBACK(SLuaCallBack* p)$/;"	f
LUA_DISABLE_PUBLISHER_TIPS	src/vrep_plugin.cpp	18;"	d	file:
LUA_DISABLE_SUBSCRIBER	src/vrep_plugin.cpp	24;"	d	file:
LUA_DISABLE_SUBSCRIBER_CALLBACK	src/vrep_plugin.cpp	/^void LUA_DISABLE_SUBSCRIBER_CALLBACK(SLuaCallBack* p)$/;"	f
LUA_DISABLE_SUBSCRIBER_TIPS	src/vrep_plugin.cpp	25;"	d	file:
LUA_ENABLE_PUBLISHER	src/vrep_plugin.cpp	14;"	d	file:
LUA_ENABLE_PUBLISHER_CALLBACK	src/vrep_plugin.cpp	/^void LUA_ENABLE_PUBLISHER_CALLBACK(SLuaCallBack* p)$/;"	f
LUA_ENABLE_PUBLISHER_TIPS	src/vrep_plugin.cpp	15;"	d	file:
LUA_ENABLE_SUBSCRIBER	src/vrep_plugin.cpp	21;"	d	file:
LUA_ENABLE_SUBSCRIBER_CALLBACK	src/vrep_plugin.cpp	/^void LUA_ENABLE_SUBSCRIBER_CALLBACK(SLuaCallBack* p)$/;"	f
LUA_ENABLE_SUBSCRIBER_TIPS	src/vrep_plugin.cpp	22;"	d	file:
PLUGIN_VERSION	src/vrep_plugin.cpp	12;"	d	file:
ROS_SERVER_H	include/vrep_plugin/ROS_server.h	2;"	d
ROS_server	include/vrep_plugin/ROS_server.h	/^		ROS_server() {} $/;"	f	class:ROS_server
ROS_server	include/vrep_plugin/ROS_server.h	/^class ROS_server$/;"	c
SIMX_HEADER_SIZE	include/v_repConst.h	589;"	d
SIMX_SUBHEADER_SIZE	include/v_repConst.h	599;"	d
SIMX_VERSION	include/v_repConst.h	571;"	d
SLuaCallBack	include/v_repLib.h	/^struct SLuaCallBack$/;"	s
SPointCloudPublisherData	src/ROS_server.cpp	/^    SPointCloudPublisherData(const std::string & obj_name) {$/;"	f	struct:SPointCloudPublisherData
SPointCloudPublisherData	src/ROS_server.cpp	/^struct SPointCloudPublisherData : public SSpecificPublisherData {$/;"	s	file:
SPublisherData	include/vrep_plugin/ROS_server.h	/^struct SPublisherData$/;"	s
SSpecificPublisherData	include/vrep_plugin/ROS_server.h	/^        SSpecificPublisherData() {}$/;"	f	class:SSpecificPublisherData
SSpecificPublisherData	include/vrep_plugin/ROS_server.h	/^class SSpecificPublisherData {$/;"	c
VREP_DLLEXPORT	include/vrep_plugin/vrep_plugin.h	4;"	d
VREP_SUBSCRIBER_H	include/vrep_plugin/vrepSubscriber.h	2;"	d
V_REPCONST_INCLUDED_	include/v_repConst.h	2;"	d
V_REPEXTROS_H	include/vrep_plugin/vrep_plugin.h	2;"	d
V_REPLIB_INCLUDED_	include/v_repLib.h	4;"	d
__cdecl	include/v_repLib.h	42;"	d
__cdecl	include/v_repLib.h	49;"	d
_getProcAddress	src/v_repLib.cpp	/^FARPROC _getProcAddress(LIBRARY lib,const char* funcName)$/;"	f
_handleServiceErrors_end	src/ROS_server.cpp	/^void ROS_server::_handleServiceErrors_end(int errorReportMode)$/;"	f	class:ROS_server
_handleServiceErrors_start	src/ROS_server.cpp	/^int ROS_server::_handleServiceErrors_start()$/;"	f	class:ROS_server
_last50Errors	include/vrep_plugin/ROS_server.h	/^		static std::vector<std::string> _last50Errors;$/;"	m	class:ROS_server
_last50Errors	src/ROS_server.cpp	/^std::vector<std::string> ROS_server::_last50Errors;$/;"	m	class:ROS_server	file:
_simulationFrameID	include/vrep_plugin/ROS_server.h	/^		static int _simulationFrameID;$/;"	m	class:ROS_server
_simulationFrameID	src/ROS_server.cpp	/^int ROS_server::_simulationFrameID=-1;$/;"	m	class:ROS_server	file:
_waitForTrigger	include/vrep_plugin/ROS_server.h	/^		static bool _waitForTrigger;$/;"	m	class:ROS_server
_waitForTrigger	src/ROS_server.cpp	/^bool ROS_server::_waitForTrigger=true;$/;"	m	class:ROS_server	file:
_waitTriggerEnable	include/vrep_plugin/ROS_server.h	/^		static bool _waitTriggerEnable;$/;"	m	class:ROS_server
_waitTriggerEnable	src/ROS_server.cpp	/^bool ROS_server::_waitTriggerEnable=false;$/;"	m	class:ROS_server	file:
addPublisher	src/ROS_server.cpp	/^std::string ROS_server::addPublisher(const char* topicName,int queueSize,int streamCmd,int auxInt1,int auxInt2,const char* auxString)$/;"	f	class:ROS_server
addStatusbarMessageCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::addStatusbarMessageCallback(const std_msgs::String::ConstPtr& msg)$/;"	f	class:CSubscriberData
addSubscriber	src/ROS_server.cpp	/^int ROS_server::addSubscriber(const char* topicName,int queueSize,int streamCmd,int auxInt1,int auxInt2,const char* auxString)$/;"	f	class:ROS_server
auxInt1	include/vrep_plugin/ROS_server.h	/^	int auxInt1;$/;"	m	struct:SPublisherData
auxInt1	include/vrep_plugin/vrepSubscriber.h	/^	int auxInt1;$/;"	m	class:CSubscriberData
auxInt2	include/vrep_plugin/ROS_server.h	/^	int auxInt2;$/;"	m	struct:SPublisherData
auxInt2	include/vrep_plugin/vrepSubscriber.h	/^	int auxInt2;$/;"	m	class:CSubscriberData
auxStr	include/vrep_plugin/ROS_server.h	/^	std::string auxStr;$/;"	m	struct:SPublisherData
auxStr	include/vrep_plugin/vrepSubscriber.h	/^	std::string auxStr;$/;"	m	class:CSubscriberData
auxiliaryConsolePrintCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::auxiliaryConsolePrintCallback(const std_msgs::String::ConstPtr& txt)$/;"	f	class:CSubscriberData
clearFloatSignalCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::clearFloatSignalCallback(const std_msgs::UInt8::ConstPtr& options)$/;"	f	class:CSubscriberData
clearIntegerSignalCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::clearIntegerSignalCallback(const std_msgs::UInt8::ConstPtr& options)$/;"	f	class:CSubscriberData
clearStringSignalCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::clearStringSignalCallback(const std_msgs::UInt8::ConstPtr& options)$/;"	f	class:CSubscriberData
cmdID	include/vrep_plugin/ROS_server.h	/^	int cmdID;$/;"	m	struct:SPublisherData
cmdID	include/vrep_plugin/vrepSubscriber.h	/^	int cmdID;$/;"	m	class:CSubscriberData
dependencyCnt	include/vrep_plugin/ROS_server.h	/^	int dependencyCnt;$/;"	m	struct:SPublisherData
disableAPIServices	src/ROS_server.cpp	/^void ROS_server::disableAPIServices()$/;"	f	class:ROS_server
enableAPIServices	src/ROS_server.cpp	/^void ROS_server::enableAPIServices()$/;"	f	class:ROS_server
generalPublisher	include/vrep_plugin/ROS_server.h	/^	ros::Publisher generalPublisher;$/;"	m	struct:SPublisherData
generalSubscriber	include/vrep_plugin/vrepSubscriber.h	/^	ros::Subscriber generalSubscriber;$/;"	m	class:CSubscriberData
getIsValid	src/vrepSubscriber.cpp	/^bool CSubscriberData::getIsValid()$/;"	f	class:CSubscriberData
getPublisherIndexFromCmd	src/ROS_server.cpp	/^int ROS_server::getPublisherIndexFromCmd(int streamCmd,int auxInt1,int auxInt2,const char* auxString)$/;"	f	class:ROS_server
getPublisherIndexFromTopicName	src/ROS_server.cpp	/^int ROS_server::getPublisherIndexFromTopicName(const char* topicName)$/;"	f	class:ROS_server
getSubscriberID	src/vrepSubscriber.cpp	/^int CSubscriberData::getSubscriberID()$/;"	f	class:CSubscriberData
getVrepProcAddresses	src/v_repLib.cpp	/^int getVrepProcAddresses(LIBRARY lib)$/;"	f
imagePublisher	include/vrep_plugin/ROS_server.h	/^	image_transport::Publisher imagePublisher;$/;"	m	struct:SPublisherData
imageSubscriber	include/vrep_plugin/vrepSubscriber.h	/^	image_transport::Subscriber imageSubscriber;$/;"	m	class:CSubscriberData
images_streamer	include/vrep_plugin/ROS_server.h	/^		static image_transport::ImageTransport* images_streamer;$/;"	m	class:ROS_server
images_streamer	src/ROS_server.cpp	/^image_transport::ImageTransport* ROS_server::images_streamer=NULL;$/;"	m	class:ROS_server	file:
imgStreamerCnt	include/vrep_plugin/ROS_server.h	/^		static int imgStreamerCnt;$/;"	m	class:ROS_server
imgStreamerCnt	src/ROS_server.cpp	/^int ROS_server::imgStreamerCnt=0;$/;"	m	class:ROS_server	file:
infoPublisher	include/vrep_plugin/ROS_server.h	/^		static ros::Publisher infoPublisher; \/\/ special publisher that is active also when simulation is not running!$/;"	m	class:ROS_server
infoPublisher	src/ROS_server.cpp	/^ros::Publisher ROS_server::infoPublisher; \/\/ special publisher that is active also when simulation is not running!$/;"	m	class:ROS_server	file:
initialize	src/ROS_server.cpp	/^bool ROS_server::initialize()$/;"	f	class:ROS_server
inputArgCount	include/v_repLib.h	/^	simInt inputArgCount;$/;"	m	struct:SLuaCallBack
inputArgTypeAndSize	include/v_repLib.h	/^	simInt* inputArgTypeAndSize;$/;"	m	struct:SLuaCallBack
inputBool	include/v_repLib.h	/^	simBool* inputBool;$/;"	m	struct:SLuaCallBack
inputChar	include/v_repLib.h	/^	simChar* inputChar;$/;"	m	struct:SLuaCallBack
inputFloat	include/v_repLib.h	/^	simFloat* inputFloat;$/;"	m	struct:SLuaCallBack
inputInt	include/v_repLib.h	/^	simInt* inputInt;$/;"	m	struct:SLuaCallBack
instancePass	src/ROS_server.cpp	/^void ROS_server::instancePass()$/;"	f	class:ROS_server
isValid	include/vrep_plugin/vrepSubscriber.h	/^	bool isValid;$/;"	m	class:CSubscriberData
lastSubscriberID	include/vrep_plugin/ROS_server.h	/^		static int lastSubscriberID;$/;"	m	class:ROS_server
lastSubscriberID	src/ROS_server.cpp	/^int ROS_server::lastSubscriberID=-1;$/;"	m	class:ROS_server	file:
launchPublisher	src/ROS_server.cpp	/^bool ROS_server::launchPublisher(SPublisherData& pub,int queueSize)$/;"	f	class:ROS_server
loadVrepLibrary	src/v_repLib.cpp	/^LIBRARY loadVrepLibrary(const char* pathAndFilename)$/;"	f
mainScriptAboutToBeCalled	src/ROS_server.cpp	/^bool ROS_server::mainScriptAboutToBeCalled()$/;"	f	class:ROS_server
node	include/vrep_plugin/ROS_server.h	/^		static ros::NodeHandle* node;$/;"	m	class:ROS_server
node	src/ROS_server.cpp	/^ros::NodeHandle* ROS_server::node = NULL;$/;"	m	class:ROS_server	file:
objNameToFrameId	src/ROS_server.cpp	/^static std::string objNameToFrameId(const std::string & name) {$/;"	f	file:
objectID	include/v_repLib.h	/^	simInt objectID;$/;"	m	struct:SLuaCallBack
outputArgCount	include/v_repLib.h	/^	simInt outputArgCount;$/;"	m	struct:SLuaCallBack
outputArgTypeAndSize	include/v_repLib.h	/^	simInt* outputArgTypeAndSize;$/;"	m	struct:SLuaCallBack
outputBool	include/v_repLib.h	/^	simBool* outputBool;$/;"	m	struct:SLuaCallBack
outputChar	include/v_repLib.h	/^	simChar* outputChar;$/;"	m	struct:SLuaCallBack
outputFloat	include/v_repLib.h	/^	simFloat* outputFloat;$/;"	m	struct:SLuaCallBack
outputInt	include/v_repLib.h	/^	simInt* outputInt;$/;"	m	struct:SLuaCallBack
pointcloud	src/ROS_server.cpp	/^    sensor_msgs::PointCloud2 pointcloud;$/;"	m	struct:SPointCloudPublisherData	file:
ptrSimAddBanner	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddBanner)(const simChar* label,simFloat size,simInt options,const simFloat* positionAndEulerAngles,simInt parentObjectHandle,const simFloat* labelColors,const simFloat* backgroundColors);$/;"	t
ptrSimAddDrawingObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddDrawingObject)(simInt objectType,simFloat size,simFloat duplicateTolerance,simInt parentObjectHandle,simInt maxItemCount,simFloat* ambient,simFloat* diffuse,simFloat* specular,simFloat* emission);$/;"	t
ptrSimAddDrawingObjectItem	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddDrawingObjectItem)(simInt objectHandle,simFloat* itemData);$/;"	t
ptrSimAddForce	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddForce)(simInt shapeHandle,const simFloat* position,const simFloat* force);$/;"	t
ptrSimAddForceAndTorque	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddForceAndTorque)(simInt shapeHandle,const simFloat* force,const simFloat* torque);$/;"	t
ptrSimAddModuleMenuEntry	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddModuleMenuEntry)(const simChar* entryLabel,simInt itemCount,simInt* itemHandles);$/;"	t
ptrSimAddObjectCustomData	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddObjectCustomData)(simInt objectHandle,simInt header,const simChar* data,simInt dataLength);$/;"	t
ptrSimAddObjectToSelection	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddObjectToSelection)(simInt what,simInt objectHandle);$/;"	t
ptrSimAddParticleObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddParticleObject)(simInt objectType,simFloat size,simFloat density,simVoid* params,simFloat lifeTime,simInt maxItemCount,simFloat* ambient,simFloat* diffuse,simFloat* specular,simFloat* emission);$/;"	t
ptrSimAddParticleObjectItem	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddParticleObjectItem)(simInt objectHandle,simFloat* itemData);$/;"	t
ptrSimAddSceneCustomData	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddSceneCustomData)(simInt header,const simChar* data,simInt dataLength);$/;"	t
ptrSimAddScript	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddScript)(simInt scriptProperty);$/;"	t
ptrSimAddStatusbarMessage	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAddStatusbarMessage)(const simChar* message);$/;"	t
ptrSimAdjustRealTimeTimer	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAdjustRealTimeTimer)(simInt instanceIndex,simFloat deltaTime);$/;"	t
ptrSimAdjustView	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAdjustView)(simInt viewHandleOrIndex,simInt associatedViewableObjectHandle,simInt options,const simChar* viewLabel);$/;"	t
ptrSimAdvanceSimulationByOneStep	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAdvanceSimulationByOneStep)();$/;"	t
ptrSimAnnounceSceneContentChange	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAnnounceSceneContentChange)();$/;"	t
ptrSimApplyMilling	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimApplyMilling)(simInt objectHandle);$/;"	t
ptrSimAssociateScriptWithObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAssociateScriptWithObject)(simInt scriptHandle,simInt associatedObjectHandle);$/;"	t
ptrSimAuxiliaryConsoleClose	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAuxiliaryConsoleClose)(simInt consoleHandle);$/;"	t
ptrSimAuxiliaryConsoleOpen	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAuxiliaryConsoleOpen)(const simChar* title,simInt maxLines,simInt mode,simInt* position,simInt* size,simFloat* textColor,simFloat* backgroundColor);$/;"	t
ptrSimAuxiliaryConsolePrint	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAuxiliaryConsolePrint)(simInt consoleHandle,const simChar* text);$/;"	t
ptrSimAuxiliaryConsoleShow	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimAuxiliaryConsoleShow)(simInt consoleHandle,simBool showState);$/;"	t
ptrSimBreakForceSensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimBreakForceSensor)(simInt objectHandle);$/;"	t
ptrSimBroadcastMessage	include/v_repLib.h	/^typedef simVoid* (__cdecl *ptrSimBroadcastMessage)(simInt* auxiliaryData,simVoid* customData,simInt* replyData);$/;"	t
ptrSimBuildIdentityMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimBuildIdentityMatrix)(simFloat* matrix);$/;"	t
ptrSimBuildMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimBuildMatrix)(simFloat* position,simFloat* eulerAngles,simFloat* matrix);$/;"	t
ptrSimBuildMatrixQ	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimBuildMatrixQ)(simFloat* position,simFloat* quaternion,simFloat* matrix);$/;"	t
ptrSimCameraFitToView	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCameraFitToView)(simInt viewHandleOrIndex,simInt objectCount,const simInt* objectHandles,simInt options,simFloat scaling);$/;"	t
ptrSimCheckCollision	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCheckCollision)(simInt entity1Handle,simInt entity2Handle);$/;"	t
ptrSimCheckCollisionEx	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCheckCollisionEx)(simInt entity1Handle,simInt entity2Handle,simFloat** intersectionSegments);$/;"	t
ptrSimCheckDistance	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCheckDistance)(simInt entity1Handle,simInt entity2Handle,simFloat threshold,simFloat* distanceData);$/;"	t
ptrSimCheckProximitySensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCheckProximitySensor)(simInt sensorHandle,simInt entityHandle,simFloat* detectedPoint);$/;"	t
ptrSimCheckProximitySensorEx	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCheckProximitySensorEx)(simInt sensorHandle,simInt entityHandle,simInt detectionMode,simFloat detectionThreshold,simFloat maxAngle,simFloat* detectedPoint,simInt* detectedObjectHandle,simFloat* normalVector);$/;"	t
ptrSimCheckProximitySensorEx2	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCheckProximitySensorEx2)(simInt sensorHandle,simFloat* vertexPointer,simInt itemType,simInt itemCount,simInt detectionMode,simFloat detectionThreshold,simFloat maxAngle,simFloat* detectedPoint,simFloat* normalVector);$/;"	t
ptrSimCheckVisionSensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCheckVisionSensor)(simInt visionSensorHandle,simInt entityHandle,simFloat** auxValues,simInt** auxValuesCount);$/;"	t
ptrSimCheckVisionSensorEx	include/v_repLib.h	/^typedef simFloat* (__cdecl *ptrSimCheckVisionSensorEx)(simInt visionSensorHandle,simInt entityHandle,simBool returnImage);$/;"	t
ptrSimClearFloatSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimClearFloatSignal)(const simChar* signalName);$/;"	t
ptrSimClearIntegerSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimClearIntegerSignal)(const simChar* signalName);$/;"	t
ptrSimClearStringSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimClearStringSignal)(const simChar* signalName);$/;"	t
ptrSimCloseScene	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCloseScene)();$/;"	t
ptrSimCopyMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCopyMatrix)(simFloat* matrixIn,simFloat* matrixOut);$/;"	t
ptrSimCopyPasteSelectedObjects	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCopyPasteSelectedObjects)();$/;"	t
ptrSimCreateBuffer	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimCreateBuffer)(simInt size);$/;"	t
ptrSimCreateHeightfieldShape	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCreateHeightfieldShape)(simInt options,simFloat shadingAngle,simInt xPointCount,simInt yPointCount,simFloat xSize,const simFloat* heights);$/;"	t
ptrSimCreateJoint	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCreateJoint)(simInt jointType,simInt jointMode,simInt options,simFloat* sizes,simFloat* colorA,simFloat* colorB);$/;"	t
ptrSimCreateMeshShape	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCreateMeshShape)(simInt options,simFloat shadingAngle,simFloat* vertices,simInt verticesSize,simInt* indices,simInt indicesSize,simFloat* reserved);$/;"	t
ptrSimCreatePureShape	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCreatePureShape)(simInt primitiveType,simInt options,const simFloat* sizes,simFloat mass,simInt* precision);$/;"	t
ptrSimCreateUI	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCreateUI)(const simChar* uiName,simInt menuAttributes,simInt* clientSize,simInt* cellSize,simInt* buttonHandles);$/;"	t
ptrSimCreateUIButton	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCreateUIButton)(simInt uiHandle,simInt* position,simInt* size,simInt buttonProperty);$/;"	t
ptrSimCreateUIButtonArray	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimCreateUIButtonArray)(simInt uiHandle,simInt buttonHandle);$/;"	t
ptrSimDeleteSelectedObjects	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimDeleteSelectedObjects)();$/;"	t
ptrSimDeleteUIButtonArray	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimDeleteUIButtonArray)(simInt uiHandle,simInt buttonHandle);$/;"	t
ptrSimDisplayDialog	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimDisplayDialog)(const simChar* titleText,const simChar* mainText,simInt dialogType,const simChar* initialText,const simFloat* titleColors,const simFloat* dialogColors,simInt* elementHandle);$/;"	t
ptrSimDoesFileExist	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimDoesFileExist)(const simChar* filename);$/;"	t
ptrSimEndDialog	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimEndDialog)(simInt genericDialogHandle);$/;"	t
ptrSimExportMesh	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimExportMesh)(simInt fileformat,const simChar* pathAndFilename,simInt options,simFloat scalingFactor,simInt elementCount,simFloat** vertices,simInt* verticesSizes,simInt** indices,simInt* indicesSizes,simFloat** reserved,simChar** names);$/;"	t
ptrSimFloatingViewAdd	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimFloatingViewAdd)(simFloat posX,simFloat posY,simFloat sizeX,simFloat sizeY,simInt options);$/;"	t
ptrSimFloatingViewRemove	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimFloatingViewRemove)(simInt floatingViewHandle);$/;"	t
ptrSimGetArrayParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetArrayParameter)(simInt parameter,simVoid* arrayOfValues);$/;"	t
ptrSimGetBooleanParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetBooleanParameter)(simInt parameter);$/;"	t
ptrSimGetClosestPositionOnPath	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetClosestPositionOnPath)(simInt pathHandle,simFloat* absolutePosition,simFloat* pathPosition);$/;"	t
ptrSimGetCollectionHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetCollectionHandle)(const simChar* collectionName);$/;"	t
ptrSimGetCollectionName	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetCollectionName)(simInt collectionHandle);$/;"	t
ptrSimGetCollisionHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetCollisionHandle)(const simChar* collisionObjectName);$/;"	t
ptrSimGetConfigurationTree	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetConfigurationTree)(simInt objectHandle);$/;"	t
ptrSimGetContactInfo	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetContactInfo)(simInt dynamicPass,simInt objectHandle,simInt index,simInt* objectHandles,simFloat* contactInfo);$/;"	t
ptrSimGetDialogInput	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetDialogInput)(simInt genericDialogHandle);$/;"	t
ptrSimGetDialogResult	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetDialogResult)(simInt genericDialogHandle);$/;"	t
ptrSimGetDistanceHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetDistanceHandle)(const simChar* distanceObjectName);$/;"	t
ptrSimGetEulerAnglesFromMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetEulerAnglesFromMatrix)(simFloat* matrix,simFloat* eulerAngles);$/;"	t
ptrSimGetExplicitHandling	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetExplicitHandling)(simInt generalObjectHandle);$/;"	t
ptrSimGetFloatSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetFloatSignal)(const simChar* signalName,simFloat* signalValue);$/;"	t
ptrSimGetFloatingParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetFloatingParameter)(simInt parameter,simFloat* floatState);$/;"	t
ptrSimGetIkGroupHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetIkGroupHandle)(const simChar* ikGroupName);$/;"	t
ptrSimGetIntegerParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetIntegerParameter)(simInt parameter,simInt* intState);$/;"	t
ptrSimGetIntegerSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetIntegerSignal)(const simChar* signalName,simInt* signalValue);$/;"	t
ptrSimGetJointInterval	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetJointInterval)(simInt objectHandle,simBool* cyclic,simFloat* interval);$/;"	t
ptrSimGetJointMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetJointMatrix)(simInt objectHandle,simFloat* matrix);$/;"	t
ptrSimGetJointPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetJointPosition)(simInt objectHandle,simFloat* position);$/;"	t
ptrSimGetJointType	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetJointType)(simInt objectHandle);$/;"	t
ptrSimGetLastError	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetLastError)();$/;"	t
ptrSimGetLightParameters	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetLightParameters)(simInt objectHandle,simFloat* ambientPart,simFloat* diffusePart,simFloat* specularPart);$/;"	t
ptrSimGetLinkDummy	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetLinkDummy)(simInt dummyHandle);$/;"	t
ptrSimGetMainWindow	include/v_repLib.h	/^typedef simVoid* (__cdecl *ptrSimGetMainWindow)(simInt type);$/;"	t
ptrSimGetMechanismHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetMechanismHandle)(const simChar* mechanismName);$/;"	t
ptrSimGetModelProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetModelProperty)(simInt objectHandle);$/;"	t
ptrSimGetModuleName	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetModuleName)(simInt index,simUChar* moduleVersion);$/;"	t
ptrSimGetNameSuffix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetNameSuffix)(const simChar* name);$/;"	t
ptrSimGetNavigationMode	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetNavigationMode)();$/;"	t
ptrSimGetObjectAssociatedWithScript	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectAssociatedWithScript)(simInt scriptHandle);$/;"	t
ptrSimGetObjectChild	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectChild)(simInt objectHandle,simInt index);$/;"	t
ptrSimGetObjectConfiguration	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetObjectConfiguration)(simInt objectHandle);$/;"	t
ptrSimGetObjectCustomData	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectCustomData)(simInt objectHandle,simInt header,simChar* data);$/;"	t
ptrSimGetObjectCustomDataLength	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectCustomDataLength)(simInt objectHandle,simInt header);$/;"	t
ptrSimGetObjectFloatParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectFloatParameter)(simInt objectHandle,simInt parameterID,simFloat* parameter);$/;"	t
ptrSimGetObjectHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectHandle)(const simChar* objectName);$/;"	t
ptrSimGetObjectIntParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectIntParameter)(simInt objectHandle,simInt parameterID,simInt* parameter);$/;"	t
ptrSimGetObjectLastSelection	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectLastSelection)();$/;"	t
ptrSimGetObjectMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectMatrix)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* matrix);$/;"	t
ptrSimGetObjectName	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetObjectName)(simInt objectHandle);$/;"	t
ptrSimGetObjectOrientation	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectOrientation)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* eulerAngles);$/;"	t
ptrSimGetObjectParent	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectParent)(simInt objectHandle);$/;"	t
ptrSimGetObjectPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectPosition)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* position);$/;"	t
ptrSimGetObjectProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectProperty)(simInt objectHandle);$/;"	t
ptrSimGetObjectQuaternion	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectQuaternion)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* quaternion);$/;"	t
ptrSimGetObjectSelection	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectSelection)(simInt* objectHandles);$/;"	t
ptrSimGetObjectSelectionSize	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectSelectionSize)();$/;"	t
ptrSimGetObjectSizeFactor	include/v_repLib.h	/^typedef simFloat (__cdecl *ptrSimGetObjectSizeFactor)(simInt objectHandle);$/;"	t
ptrSimGetObjectSpecialProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectSpecialProperty)(simInt objectHandle);$/;"	t
ptrSimGetObjectStringParameter	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetObjectStringParameter)(simInt objectHandle,simInt parameterID,simInt* parameterLength);$/;"	t
ptrSimGetObjectType	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectType)(simInt objectHandle);$/;"	t
ptrSimGetObjectUniqueIdentifier	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjectUniqueIdentifier)(simInt objectHandle,simInt* uniqueIdentifier);$/;"	t
ptrSimGetObjects	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetObjects)(simInt index,simInt objectType);$/;"	t
ptrSimGetOrientationOnPath	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetOrientationOnPath)(simInt pathHandle,simFloat relativeDistance,simFloat* eulerAngles);$/;"	t
ptrSimGetPage	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetPage)();$/;"	t
ptrSimGetPathLength	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetPathLength)(simInt objectHandle,simFloat* length);$/;"	t
ptrSimGetPathPlanningHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetPathPlanningHandle)(const simChar* pathPlanningObjectName);$/;"	t
ptrSimGetPathPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetPathPosition)(simInt objectHandle,simFloat* position);$/;"	t
ptrSimGetPositionOnPath	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetPositionOnPath)(simInt pathHandle,simFloat relativeDistance,simFloat* position);$/;"	t
ptrSimGetQuaternionFromMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetQuaternionFromMatrix)(simFloat* matrix,simFloat* quaternion);$/;"	t
ptrSimGetRealTimeSimulation	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetRealTimeSimulation)();$/;"	t
ptrSimGetRotationAxis	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetRotationAxis)(simFloat* matrixStart,simFloat* matrixGoal,simFloat* axis,simFloat* angle);$/;"	t
ptrSimGetSceneCustomData	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetSceneCustomData)(simInt header,simChar* data);$/;"	t
ptrSimGetSceneCustomDataLength	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetSceneCustomDataLength)(simInt header);$/;"	t
ptrSimGetScript	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetScript)(simInt index);$/;"	t
ptrSimGetScriptAssociatedWithObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetScriptAssociatedWithObject)(simInt objectHandle);$/;"	t
ptrSimGetScriptHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetScriptHandle)(const simChar* scriptName);$/;"	t
ptrSimGetScriptName	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetScriptName)(simInt scriptHandle);$/;"	t
ptrSimGetScriptProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetScriptProperty)(simInt scriptHandle,simInt* scriptProperty,simInt* associatedObjectHandle);$/;"	t
ptrSimGetScriptRawBuffer	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetScriptRawBuffer)(simInt scriptHandle,simInt bufferHandle);$/;"	t
ptrSimGetScriptSimulationParameter	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetScriptSimulationParameter)(simInt scriptHandle,const simChar* parameterName,simInt* parameterLength);$/;"	t
ptrSimGetScriptText	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetScriptText)(simInt scriptHandle);$/;"	t
ptrSimGetShapeMesh	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetShapeMesh)(simInt shapeHandle,simFloat** vertices,simInt* verticesSize,simInt** indices,simInt* indicesSize,simFloat** reserved);$/;"	t
ptrSimGetShapeTriangle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetShapeTriangle)(simInt shapeHandle,simInt groupElementIndex,simInt triangleIndex,simInt* vertexIndices,simFloat* triangleNormals);$/;"	t
ptrSimGetShapeVertex	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetShapeVertex)(simInt shapeHandle,simInt groupElementIndex,simInt vertexIndex,simFloat* relativePosition);$/;"	t
ptrSimGetSignalName	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetSignalName)(simInt signalIndex,simInt signalType);$/;"	t
ptrSimGetSimulationPassesPerRenderingPass	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetSimulationPassesPerRenderingPass)();$/;"	t
ptrSimGetSimulationState	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetSimulationState)();$/;"	t
ptrSimGetSimulationTime	include/v_repLib.h	/^typedef simFloat (__cdecl *ptrSimGetSimulationTime)();$/;"	t
ptrSimGetSimulationTimeStep	include/v_repLib.h	/^typedef simFloat (__cdecl *ptrSimGetSimulationTimeStep)();$/;"	t
ptrSimGetSimulatorMessage	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetSimulatorMessage)(simInt* messageID,simInt* auxiliaryData,simInt* returnedDataSize);$/;"	t
ptrSimGetStringParameter	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetStringParameter)(simInt parameter);$/;"	t
ptrSimGetStringSignal	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetStringSignal)(const simChar* signalName,simInt* stringLength);$/;"	t
ptrSimGetSystemTime	include/v_repLib.h	/^typedef simFloat (__cdecl *ptrSimGetSystemTime)();$/;"	t
ptrSimGetSystemTimeInMilliseconds	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetSystemTimeInMilliseconds)();$/;"	t
ptrSimGetUIButtonLabel	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimGetUIButtonLabel)(simInt uiHandle,simInt buttonHandle);$/;"	t
ptrSimGetUIButtonProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetUIButtonProperty)(simInt uiHandle,simInt buttonHandle);$/;"	t
ptrSimGetUIButtonSize	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetUIButtonSize)(simInt uiHandle,simInt buttonHandle,simInt* size);$/;"	t
ptrSimGetUIEventButton	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetUIEventButton)(simInt uiHandle,simInt* auxiliaryValues);$/;"	t
ptrSimGetUIHandle	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetUIHandle)(const simChar* uiName);$/;"	t
ptrSimGetUIPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetUIPosition)(simInt uiHandle,simInt* position);$/;"	t
ptrSimGetUIProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetUIProperty)(simInt uiHandle);$/;"	t
ptrSimGetUISlider	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetUISlider)(simInt uiHandle,simInt buttonHandle);$/;"	t
ptrSimGetVelocity	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetVelocity)(simInt shapeHandle,simFloat* linearVelocity,simFloat* angularVelocity);$/;"	t
ptrSimGetVisionSensorDepthBuffer	include/v_repLib.h	/^typedef simFloat* (__cdecl *ptrSimGetVisionSensorDepthBuffer)(simInt visionSensorHandle);$/;"	t
ptrSimGetVisionSensorImage	include/v_repLib.h	/^typedef simFloat* (__cdecl *ptrSimGetVisionSensorImage)(simInt visionSensorHandle);$/;"	t
ptrSimGetVisionSensorResolution	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimGetVisionSensorResolution)(simInt visionSensorHandle,simInt* resolution);$/;"	t
ptrSimHandleCollision	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleCollision)(simInt collisionObjectHandle);$/;"	t
ptrSimHandleDistance	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleDistance)(simInt distanceObjectHandle,simFloat* smallestDistance);$/;"	t
ptrSimHandleDynamics	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleDynamics)(simFloat deltaTime);$/;"	t
ptrSimHandleGraph	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleGraph)(simInt graphHandle,simFloat simulationTime);$/;"	t
ptrSimHandleIkGroup	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleIkGroup)(simInt ikGroupHandle);$/;"	t
ptrSimHandleJoint	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleJoint)(simInt jointHandle,simFloat deltaTime);$/;"	t
ptrSimHandleMainScript	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleMainScript)();$/;"	t
ptrSimHandleMechanism	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleMechanism)(simInt mechanismHandle);$/;"	t
ptrSimHandleMill	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleMill)(simInt millHandle,simFloat* removedSurfaceAndVolume);$/;"	t
ptrSimHandlePath	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandlePath)(simInt pathHandle,simFloat deltaTime);$/;"	t
ptrSimHandleProximitySensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleProximitySensor)(simInt sensorHandle,simFloat* detectedPoint,simInt* detectedObjectHandle,simFloat* normalVector);$/;"	t
ptrSimHandleVarious	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleVarious)();$/;"	t
ptrSimHandleVisionSensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimHandleVisionSensor)(simInt visionSensorHandle,simFloat** auxValues,simInt** auxValuesCount);$/;"	t
ptrSimImportMesh	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimImportMesh)(simInt fileformat,const simChar* pathAndFilename,simInt options,simFloat identicalVerticeTolerance,simFloat scalingFactor,simFloat*** vertices,simInt** verticesSizes,simInt*** indices,simInt** indicesSizes,simFloat*** reserved,simChar*** names);$/;"	t
ptrSimInitializePathSearch	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimInitializePathSearch)(simInt pathPlanningObjectHandle,simFloat maximumSearchTime,simFloat searchTimeStep);$/;"	t
ptrSimInterpolateMatrices	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimInterpolateMatrices)(simFloat* matrixIn1,simFloat* matrixIn2,simFloat interpolFactor,simFloat* matrixOut);$/;"	t
ptrSimInvertMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimInvertMatrix)(simFloat* matrix);$/;"	t
ptrSimIsHandleValid	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimIsHandleValid)(simInt generalObjectHandle,simInt generalObjectType);$/;"	t
ptrSimIsObjectInSelection	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimIsObjectInSelection)(simInt objectHandle);$/;"	t
ptrSimIsRealTimeSimulationStepNeeded	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimIsRealTimeSimulationStepNeeded)();$/;"	t
ptrSimJointGetForce	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimJointGetForce)(simInt jointHandle,simFloat* forceOrTorque);$/;"	t
ptrSimLoadModel	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimLoadModel)(const simChar* filename);$/;"	t
ptrSimLoadModule	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimLoadModule)(const simChar* filenameAndPath,const simChar* pluginName);$/;"	t
ptrSimLoadScene	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimLoadScene)(const simChar* filename);$/;"	t
ptrSimLoadUI	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimLoadUI)(const simChar* filename,int maxCount,int* uiHandles);$/;"	t
ptrSimLockInterface	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimLockInterface)(simBool locked);$/;"	t
ptrSimMultiplyMatrices	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimMultiplyMatrices)(simFloat* matrixIn1,simFloat* matrixIn2,simFloat* matrixOut);$/;"	t
ptrSimPauseSimulation	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimPauseSimulation)();$/;"	t
ptrSimPerformPathSearchStep	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimPerformPathSearchStep)(simInt temporaryPathSearchObject,simBool abortSearch);$/;"	t
ptrSimPersistentDataRead	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimPersistentDataRead)(const simChar* dataName,simInt* dataLength);$/;"	t
ptrSimPersistentDataWrite	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimPersistentDataWrite)(const simChar* dataName,const simChar* dataValue,simInt dataLength,simInt options);$/;"	t
ptrSimRMLPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRMLPosition)(simInt dofs,simDouble timeStep,simInt flags,const simDouble* currentPosVelAccel,const simDouble* maxVelAccelJerk,const simBool* selection,const simDouble* targetPosVel,simDouble* newPosVelAccel);$/;"	t
ptrSimRMLVelocity	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRMLVelocity)(simInt dofs,simDouble timeStep,simInt flags,const simDouble* currentPosVelAccel,const simDouble* maxAccelJerk,const simBool* selection,const simDouble* targetVel,simDouble* newPosVelAccel);$/;"	t
ptrSimReadCollision	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReadCollision)(simInt collisionObjectHandle);$/;"	t
ptrSimReadDistance	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReadDistance)(simInt distanceObjectHandle,simFloat* smallestDistance);$/;"	t
ptrSimReadForceSensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReadForceSensor)(simInt objectHandle,simFloat* forceVector,simFloat* torqueVector);$/;"	t
ptrSimReadProximitySensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReadProximitySensor)(simInt sensorHandle,simFloat* detectedPoint,simInt* detectedObjectHandle,simFloat* normalVector);$/;"	t
ptrSimReadVisionSensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReadVisionSensor)(simInt visionSensorHandle,simFloat** auxValues,simInt** auxValuesCount);$/;"	t
ptrSimReceiveData	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimReceiveData)(simInt dataHeader,const simChar* dataName,simInt antennaHandle,simInt index,simInt* dataLength,simInt* senderID,simInt* dataHeaderR,simChar** dataNameR);$/;"	t
ptrSimRefreshDialogs	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRefreshDialogs)(simInt refreshDegree);$/;"	t
ptrSimRegisterContactCallback	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRegisterContactCallback)(simInt(*callBack)(simInt,simInt,simInt,simInt*,simFloat*));$/;"	t
ptrSimRegisterCustomLuaFunction	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRegisterCustomLuaFunction)(const simChar* funcName,const simChar* callTips,simInt* inputArgumentTypes,simVoid(*callBack)(struct SLuaCallBack* p));$/;"	t
ptrSimRegisterCustomLuaVariable	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRegisterCustomLuaVariable)(const simChar* varName,const simChar* varValue);$/;"	t
ptrSimReleaseBuffer	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReleaseBuffer)(simChar* buffer);$/;"	t
ptrSimReleaseScriptRawBuffer	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReleaseScriptRawBuffer)(simInt scriptHandle,simInt bufferHandle);$/;"	t
ptrSimRemoveBanner	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveBanner)(simInt bannerID);$/;"	t
ptrSimRemoveCollection	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveCollection)(simInt collectionHandle);$/;"	t
ptrSimRemoveDrawingObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveDrawingObject)(simInt objectHandle);$/;"	t
ptrSimRemoveObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveObject)(simInt objectHandle);$/;"	t
ptrSimRemoveObjectFromSelection	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveObjectFromSelection)(simInt what,simInt objectHandle);$/;"	t
ptrSimRemoveParticleObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveParticleObject)(simInt objectHandle);$/;"	t
ptrSimRemoveScript	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveScript)(simInt scriptHandle);$/;"	t
ptrSimRemoveUI	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRemoveUI)(simInt uiHandle);$/;"	t
ptrSimReservedCommand	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimReservedCommand)(simInt v,simInt w);$/;"	t
ptrSimResetCollision	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetCollision)(simInt collisionObjectHandle);$/;"	t
ptrSimResetDistance	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetDistance)(simInt distanceObjectHandle);$/;"	t
ptrSimResetDynamicObject	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetDynamicObject)(simInt objectHandle);$/;"	t
ptrSimResetGraph	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetGraph)(simInt graphHandle);$/;"	t
ptrSimResetJoint	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetJoint)(simInt jointHandle);$/;"	t
ptrSimResetMill	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetMill)(simInt millHandle);$/;"	t
ptrSimResetMilling	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetMilling)(simInt objectHandle);$/;"	t
ptrSimResetPath	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetPath)(simInt pathHandle);$/;"	t
ptrSimResetProximitySensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetProximitySensor)(simInt sensorHandle);$/;"	t
ptrSimResetScript	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetScript)(simInt scriptHandle);$/;"	t
ptrSimResetVisionSensor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimResetVisionSensor)(simInt visionSensorHandle);$/;"	t
ptrSimRotateAroundAxis	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRotateAroundAxis)(simFloat* matrixIn,simFloat* axis,simFloat* axisPos,simFloat angle,simFloat* matrixOut);$/;"	t
ptrSimRunSimulator	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimRunSimulator)(const simChar* applicationName,simInt options,simVoid(*initCallBack)(),simVoid(*loopCallBack)(),simVoid(*deinitCallBack)());$/;"	t
ptrSimSaveModel	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSaveModel)(int baseOfModelHandle,const simChar* filename);$/;"	t
ptrSimSaveScene	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSaveScene)(const simChar* filename);$/;"	t
ptrSimSaveUI	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSaveUI)(int count,const int* uiHandles,const simChar* filename);$/;"	t
ptrSimScaleSelectedObjects	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimScaleSelectedObjects)(simFloat scalingFactor,simBool scalePositionsToo);$/;"	t
ptrSimSearchPath	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSearchPath)(simInt pathPlanningObjectHandle,simFloat maximumSearchTime);$/;"	t
ptrSimSendData	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSendData)(simInt targetID,simInt dataHeader,const simChar* dataName,const simChar* data,simInt dataLength,simInt antennaHandle,simFloat actionRadius,simFloat emissionAngle1,simFloat emissionAngle2,simFloat persistence);$/;"	t
ptrSimSendModuleMessage	include/v_repLib.h	/^typedef simVoid* (__cdecl *ptrSimSendModuleMessage)(simInt message,simInt* auxiliaryData,simVoid* customData,simInt* replyData);$/;"	t
ptrSimSerialCheck	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialCheck)(simInt portHandle);$/;"	t
ptrSimSerialClose	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialClose)(simInt portHandle);$/;"	t
ptrSimSerialOpen	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialOpen)(const simChar* portString,simInt baudRate,simVoid* reserved1,simVoid* reserved2);$/;"	t
ptrSimSerialPortClose	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialPortClose)(simInt portNumber);$/;"	t
ptrSimSerialPortOpen	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialPortOpen)(simInt portNumber,simInt baudRate,simVoid* reserved1,simVoid* reserved2);$/;"	t
ptrSimSerialPortRead	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialPortRead)(simInt portNumber,simChar* buffer,simInt dataLengthToRead);$/;"	t
ptrSimSerialPortSend	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialPortSend)(simInt portNumber,const simChar* data,simInt dataLength);$/;"	t
ptrSimSerialRead	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialRead)(simInt portHandle,simChar* buffer,simInt dataLengthToRead);$/;"	t
ptrSimSerialSend	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSerialSend)(simInt portHandle,const simChar* data,simInt dataLength);$/;"	t
ptrSimSetArrayParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetArrayParameter)(simInt parameter,simVoid* arrayOfValues);$/;"	t
ptrSimSetBooleanParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetBooleanParameter)(simInt parameter,simBool boolState);$/;"	t
ptrSimSetCollectionName	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetCollectionName)(simInt collectionHandle,const simChar* collectionName);$/;"	t
ptrSimSetConfigurationTree	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetConfigurationTree)(const simChar* data);$/;"	t
ptrSimSetExplicitHandling	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetExplicitHandling)(simInt generalObjectHandle,int explicitFlags);$/;"	t
ptrSimSetFloatSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetFloatSignal)(const simChar* signalName,simFloat signalValue);$/;"	t
ptrSimSetFloatingParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetFloatingParameter)(simInt parameter,simFloat floatState);$/;"	t
ptrSimSetGraphUserData	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetGraphUserData)(simInt graphHandle,const simChar* dataStreamName,simFloat data);$/;"	t
ptrSimSetIkElementProperties	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetIkElementProperties)(simInt ikGroupHandle,simInt tipDummyHandle,simInt constraints,simFloat* precision,simFloat* weight,void* reserved);$/;"	t
ptrSimSetIkGroupProperties	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetIkGroupProperties)(simInt ikGroupHandle,simInt resolutionMethod,simInt maxIterations,simFloat damping,void* reserved);$/;"	t
ptrSimSetIntegerParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetIntegerParameter)(simInt parameter,simInt intState);$/;"	t
ptrSimSetIntegerSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetIntegerSignal)(const simChar* signalName,simInt signalValue);$/;"	t
ptrSimSetJointForce	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetJointForce)(simInt objectHandle,simFloat forceOrTorque);$/;"	t
ptrSimSetJointInterval	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetJointInterval)(simInt objectHandle,simBool cyclic,simFloat* interval);$/;"	t
ptrSimSetJointMode	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetJointMode)(simInt jointHandle,simInt jointMode,simInt options);$/;"	t
ptrSimSetJointPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetJointPosition)(simInt objectHandle,simFloat position);$/;"	t
ptrSimSetJointTargetPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetJointTargetPosition)(simInt objectHandle,simFloat targetPosition);$/;"	t
ptrSimSetJointTargetVelocity	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetJointTargetVelocity)(simInt objectHandle,simFloat targetVelocity);$/;"	t
ptrSimSetLastError	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetLastError)(const simChar* funcName,const simChar* errorMessage);$/;"	t
ptrSimSetLightParameters	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetLightParameters)(simInt objectHandle,simInt state,simFloat* ambientPart,simFloat* diffusePart,simFloat* specularPart);$/;"	t
ptrSimSetLinkDummy	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetLinkDummy)(simInt dummyHandle,simInt linkedDummyHandle);$/;"	t
ptrSimSetModelProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetModelProperty)(simInt objectHandle,simInt modelProperty);$/;"	t
ptrSimSetModuleMenuItemState	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetModuleMenuItemState)(simInt itemHandle,simInt state,const simChar* label);$/;"	t
ptrSimSetNameSuffix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetNameSuffix)(simInt nameSuffixNumber);$/;"	t
ptrSimSetNavigationMode	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetNavigationMode)(simInt navigationMode);$/;"	t
ptrSimSetObjectConfiguration	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectConfiguration)(const simChar* data);$/;"	t
ptrSimSetObjectFloatParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectFloatParameter)(simInt objectHandle,simInt parameterID,simFloat parameter);$/;"	t
ptrSimSetObjectIntParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectIntParameter)(simInt objectHandle,simInt parameterID,simInt parameter);$/;"	t
ptrSimSetObjectMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectMatrix)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* matrix);$/;"	t
ptrSimSetObjectName	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectName)(simInt objectHandle,const simChar* objectName);$/;"	t
ptrSimSetObjectOrientation	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectOrientation)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* eulerAngles);$/;"	t
ptrSimSetObjectParent	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectParent)(simInt objectHandle,simInt parentObjectHandle,simBool keepInPlace);$/;"	t
ptrSimSetObjectPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectPosition)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* position);$/;"	t
ptrSimSetObjectProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectProperty)(simInt objectHandle,simInt prop);$/;"	t
ptrSimSetObjectQuaternion	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectQuaternion)(simInt objectHandle,simInt relativeToObjectHandle,simFloat* quaternion);$/;"	t
ptrSimSetObjectSpecialProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectSpecialProperty)(simInt objectHandle,simInt prop);$/;"	t
ptrSimSetObjectStringParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetObjectStringParameter)(simInt objectHandle,simInt parameterID,simChar* parameter,simInt parameterLength);$/;"	t
ptrSimSetPage	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetPage)(simInt index);$/;"	t
ptrSimSetPathPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetPathPosition)(simInt objectHandle,simFloat position);$/;"	t
ptrSimSetPathTargetNominalVelocity	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetPathTargetNominalVelocity)(simInt objectHandle,simFloat targetNominalVelocity);$/;"	t
ptrSimSetScriptRawBuffer	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetScriptRawBuffer)(simInt scriptHandle,const simChar* buffer,simInt bufferSize);$/;"	t
ptrSimSetScriptSimulationParameter	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetScriptSimulationParameter)(simInt scriptHandle,const simChar* parameterName,const simChar* parameterValue,simInt parameterLength);$/;"	t
ptrSimSetScriptText	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetScriptText)(simInt scriptHandle,const simChar* scriptText);$/;"	t
ptrSimSetShapeColor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetShapeColor)(simInt shapeHandle,const simChar* colorName,simInt colorComponent,const simFloat* rgbData);$/;"	t
ptrSimSetSimulationPassesPerRenderingPass	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetSimulationPassesPerRenderingPass)(simInt p);$/;"	t
ptrSimSetSimulationTimeStep	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetSimulationTimeStep)(simFloat timeStep);$/;"	t
ptrSimSetSphericalJointMatrix	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetSphericalJointMatrix)(simInt objectHandle,simFloat* matrix);$/;"	t
ptrSimSetStringSignal	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetStringSignal)(const simChar* signalName,const simChar* signalValue,simInt stringLength);$/;"	t
ptrSimSetThreadIsFree	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetThreadIsFree)(simBool freeMode);$/;"	t
ptrSimSetUIButtonArrayColor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUIButtonArrayColor)(simInt uiHandle,simInt buttonHandle,simInt* position,simFloat* color);$/;"	t
ptrSimSetUIButtonColor	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUIButtonColor)(simInt uiHandle,simInt buttonHandle,simFloat* upStateColor,simFloat* downStateColor,simFloat* labelColor);$/;"	t
ptrSimSetUIButtonLabel	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUIButtonLabel)(simInt uiHandle,simInt buttonHandle,const simChar* upStateLabel,const simChar* downStateLabel);$/;"	t
ptrSimSetUIButtonProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUIButtonProperty)(simInt uiHandle,simInt buttonHandle,simInt buttonProperty);$/;"	t
ptrSimSetUIButtonTexture	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUIButtonTexture)(simInt uiHandle,simInt buttonHandle,simInt* size,const simChar* textureData);$/;"	t
ptrSimSetUIPosition	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUIPosition)(simInt uiHandle,simInt* position);$/;"	t
ptrSimSetUIProperty	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUIProperty)(simInt uiHandle,simInt elementProperty);$/;"	t
ptrSimSetUISlider	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetUISlider)(simInt uiHandle,simInt buttonHandle,simInt position);$/;"	t
ptrSimSetVisionSensorImage	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimSetVisionSensorImage)(simInt visionSensorHandle,simFloat* image);$/;"	t
ptrSimStartSimulation	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimStartSimulation)();$/;"	t
ptrSimStopSimulation	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimStopSimulation)();$/;"	t
ptrSimTransformVector	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimTransformVector)(simFloat* matrix,simFloat* vect);$/;"	t
ptrSimTubeClose	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimTubeClose)(simInt tubeHandle);$/;"	t
ptrSimTubeOpen	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimTubeOpen)(simInt dataHeader,const simChar* dataName,simInt readBufferSize,simBool notUsedButKeepFalse);$/;"	t
ptrSimTubeRead	include/v_repLib.h	/^typedef simChar* (__cdecl *ptrSimTubeRead)(simInt tubeHandle,simInt* dataLength);$/;"	t
ptrSimTubeStatus	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimTubeStatus)(simInt tubeHandle,simInt* readPacketsCount,simInt* writePacketsCount);$/;"	t
ptrSimTubeWrite	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimTubeWrite)(simInt tubeHandle,const simChar* data,simInt dataLength);$/;"	t
ptrSimUnloadModule	include/v_repLib.h	/^typedef simInt (__cdecl *ptrSimUnloadModule)(simInt pluginhandle);$/;"	t
pubData	include/vrep_plugin/ROS_server.h	/^        static std::map< std::string,boost::shared_ptr<SSpecificPublisherData> > pubData;$/;"	m	class:ROS_server
pubData	src/ROS_server.cpp	/^std::map< std::string,boost::shared_ptr<SSpecificPublisherData> > ROS_server::pubData;$/;"	m	class:ROS_server	file:
publishers	include/vrep_plugin/ROS_server.h	/^		static std::vector<SPublisherData> publishers;$/;"	m	class:ROS_server
publishers	src/ROS_server.cpp	/^std::vector<SPublisherData> ROS_server::publishers;$/;"	m	class:ROS_server	file:
removeAllPublishers	src/ROS_server.cpp	/^void ROS_server::removeAllPublishers()$/;"	f	class:ROS_server
removeAllSubscribers	src/ROS_server.cpp	/^void ROS_server::removeAllSubscribers()$/;"	f	class:ROS_server
removePublisher	src/ROS_server.cpp	/^int ROS_server::removePublisher(const char* topicName,bool ignoreReferenceCounter)$/;"	f	class:ROS_server
removeSubscriber	src/ROS_server.cpp	/^bool ROS_server::removeSubscriber(int subscriberID)$/;"	f	class:ROS_server
setArrayParameterCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setArrayParameterCallback(const geometry_msgs::Point32::ConstPtr& param)$/;"	f	class:CSubscriberData
setBooleanParameterCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setBooleanParameterCallback(const std_msgs::UInt8::ConstPtr& param)$/;"	f	class:CSubscriberData
setFloatSignalCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setFloatSignalCallback(const std_msgs::Float32::ConstPtr& sig)$/;"	f	class:CSubscriberData
setFloatingParameterCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setFloatingParameterCallback(const std_msgs::Float32::ConstPtr& param)$/;"	f	class:CSubscriberData
setIntegerParameterCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setIntegerParameterCallback(const std_msgs::Int32::ConstPtr& param)$/;"	f	class:CSubscriberData
setIntegerSignalCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setIntegerSignalCallback(const std_msgs::Int32::ConstPtr& sig)$/;"	f	class:CSubscriberData
setJointForceCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setJointForceCallback(const std_msgs::Float64::ConstPtr& force)$/;"	f	class:CSubscriberData
setJointPositionCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setJointPositionCallback(const std_msgs::Float64::ConstPtr& pos)$/;"	f	class:CSubscriberData
setJointTargetPositionCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setJointTargetPositionCallback(const std_msgs::Float64::ConstPtr& pos)$/;"	f	class:CSubscriberData
setJointTargetVelocityCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setJointTargetVelocityCallback(const std_msgs::Float64::ConstPtr& vel)$/;"	f	class:CSubscriberData
setObjectFloatParameterCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setObjectFloatParameterCallback(const std_msgs::Float32::ConstPtr& param)$/;"	f	class:CSubscriberData
setObjectIntParameterCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setObjectIntParameterCallback(const std_msgs::Int32::ConstPtr& param)$/;"	f	class:CSubscriberData
setObjectPoseCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setObjectPoseCallback(const geometry_msgs::PoseStamped::ConstPtr& pose)$/;"	f	class:CSubscriberData
setObjectPositionCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setObjectPositionCallback(const geometry_msgs::Point::ConstPtr& pos)$/;"	f	class:CSubscriberData
setObjectQuaternionCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setObjectQuaternionCallback(const geometry_msgs::Quaternion::ConstPtr& quaternion)$/;"	f	class:CSubscriberData
setObjectSelectionCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setObjectSelectionCallback(const std_msgs::Int32MultiArray::ConstPtr& objHandles)$/;"	f	class:CSubscriberData
setStringSignalCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setStringSignalCallback(const std_msgs::String::ConstPtr& sig)$/;"	f	class:CSubscriberData
setSubscriberID	src/vrepSubscriber.cpp	/^void CSubscriberData::setSubscriberID(int id)$/;"	f	class:CSubscriberData
setUIButtonLabelCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setUIButtonLabelCallback(const std_msgs::String::ConstPtr& label)$/;"	f	class:CSubscriberData
setUIButtonPropertyCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setUIButtonPropertyCallback(const std_msgs::Int32::ConstPtr& prop)$/;"	f	class:CSubscriberData
setUISlider	src/vrepSubscriber.cpp	/^void CSubscriberData::setUISlider(const std_msgs::Int32::ConstPtr& pos)$/;"	f	class:CSubscriberData
setVisionSensorImageCallback	src/vrepSubscriber.cpp	/^void CSubscriberData::setVisionSensorImageCallback(const sensor_msgs::Image::ConstPtr& image)$/;"	f	class:CSubscriberData
shutDown	src/ROS_server.cpp	/^void ROS_server::shutDown()$/;"	f	class:ROS_server
shutDownGeneralSubscriber	src/vrepSubscriber.cpp	/^void CSubscriberData::shutDownGeneralSubscriber()$/;"	f	class:CSubscriberData
shutDownImageSubscriber	src/vrepSubscriber.cpp	/^void CSubscriberData::shutDownImageSubscriber()$/;"	f	class:CSubscriberData
shutDownPublisher	src/ROS_server.cpp	/^void ROS_server::shutDownPublisher(SPublisherData& pub)$/;"	f	class:ROS_server
shutDownSubscriber	src/vrepSubscriber.cpp	/^void CSubscriberData::shutDownSubscriber()$/;"	f	class:CSubscriberData
simAddBanner	src/v_repLib.cpp	/^ptrSimAddBanner simAddBanner=0;$/;"	v
simAddDrawingObject	src/v_repLib.cpp	/^ptrSimAddDrawingObject simAddDrawingObject=0;$/;"	v
simAddDrawingObjectItem	src/v_repLib.cpp	/^ptrSimAddDrawingObjectItem simAddDrawingObjectItem=0;$/;"	v
simAddForce	src/v_repLib.cpp	/^ptrSimAddForce simAddForce=0;$/;"	v
simAddForceAndTorque	src/v_repLib.cpp	/^ptrSimAddForceAndTorque simAddForceAndTorque=0;$/;"	v
simAddModuleMenuEntry	src/v_repLib.cpp	/^ptrSimAddModuleMenuEntry simAddModuleMenuEntry=0;$/;"	v
simAddObjectCustomData	src/v_repLib.cpp	/^ptrSimAddObjectCustomData simAddObjectCustomData=0;$/;"	v
simAddObjectToSelection	src/v_repLib.cpp	/^ptrSimAddObjectToSelection simAddObjectToSelection=0;$/;"	v
simAddParticleObject	src/v_repLib.cpp	/^ptrSimAddParticleObject simAddParticleObject=0;$/;"	v
simAddParticleObjectItem	src/v_repLib.cpp	/^ptrSimAddParticleObjectItem simAddParticleObjectItem=0;$/;"	v
simAddSceneCustomData	src/v_repLib.cpp	/^ptrSimAddSceneCustomData simAddSceneCustomData=0;$/;"	v
simAddScript	src/v_repLib.cpp	/^ptrSimAddScript simAddScript=0;$/;"	v
simAddStatusbarMessage	src/v_repLib.cpp	/^ptrSimAddStatusbarMessage simAddStatusbarMessage=0;$/;"	v
simAdjustRealTimeTimer	src/v_repLib.cpp	/^ptrSimAdjustRealTimeTimer simAdjustRealTimeTimer=0;$/;"	v
simAdjustView	src/v_repLib.cpp	/^ptrSimAdjustView simAdjustView=0;$/;"	v
simAdvanceSimulationByOneStep	src/v_repLib.cpp	/^ptrSimAdvanceSimulationByOneStep simAdvanceSimulationByOneStep=0;$/;"	v
simAnnounceSceneContentChange	src/v_repLib.cpp	/^ptrSimAnnounceSceneContentChange simAnnounceSceneContentChange=0;$/;"	v
simApplyMilling	src/v_repLib.cpp	/^ptrSimApplyMilling simApplyMilling=0;$/;"	v
simAssociateScriptWithObject	src/v_repLib.cpp	/^ptrSimAssociateScriptWithObject simAssociateScriptWithObject=0;$/;"	v
simAuxiliaryConsoleClose	src/v_repLib.cpp	/^ptrSimAuxiliaryConsoleClose simAuxiliaryConsoleClose=0;$/;"	v
simAuxiliaryConsoleOpen	src/v_repLib.cpp	/^ptrSimAuxiliaryConsoleOpen simAuxiliaryConsoleOpen=0;$/;"	v
simAuxiliaryConsolePrint	src/v_repLib.cpp	/^ptrSimAuxiliaryConsolePrint simAuxiliaryConsolePrint=0;$/;"	v
simAuxiliaryConsoleShow	src/v_repLib.cpp	/^ptrSimAuxiliaryConsoleShow simAuxiliaryConsoleShow=0;$/;"	v
simBool	include/v_repLib.h	/^typedef unsigned char simBool;$/;"	t
simBreakForceSensor	src/v_repLib.cpp	/^ptrSimBreakForceSensor simBreakForceSensor=0;$/;"	v
simBroadcastMessage	src/v_repLib.cpp	/^ptrSimBroadcastMessage simBroadcastMessage=0;$/;"	v
simBuildIdentityMatrix	src/v_repLib.cpp	/^ptrSimBuildIdentityMatrix simBuildIdentityMatrix=0;$/;"	v
simBuildMatrix	src/v_repLib.cpp	/^ptrSimBuildMatrix simBuildMatrix=0;$/;"	v
simBuildMatrixQ	src/v_repLib.cpp	/^ptrSimBuildMatrixQ simBuildMatrixQ=0;$/;"	v
simCameraFitToView	src/v_repLib.cpp	/^ptrSimCameraFitToView simCameraFitToView=0;$/;"	v
simChar	include/v_repLib.h	/^typedef char simChar;$/;"	t
simCheckCollision	src/v_repLib.cpp	/^ptrSimCheckCollision simCheckCollision=0;$/;"	v
simCheckCollisionEx	src/v_repLib.cpp	/^ptrSimCheckCollisionEx simCheckCollisionEx=0;$/;"	v
simCheckDistance	src/v_repLib.cpp	/^ptrSimCheckDistance simCheckDistance=0;$/;"	v
simCheckProximitySensor	src/v_repLib.cpp	/^ptrSimCheckProximitySensor simCheckProximitySensor=0;$/;"	v
simCheckProximitySensorEx	src/v_repLib.cpp	/^ptrSimCheckProximitySensorEx simCheckProximitySensorEx=0;$/;"	v
simCheckProximitySensorEx2	src/v_repLib.cpp	/^ptrSimCheckProximitySensorEx2 simCheckProximitySensorEx2=0;$/;"	v
simCheckVisionSensor	src/v_repLib.cpp	/^ptrSimCheckVisionSensor simCheckVisionSensor=0;$/;"	v
simCheckVisionSensorEx	src/v_repLib.cpp	/^ptrSimCheckVisionSensorEx simCheckVisionSensorEx=0;$/;"	v
simClearFloatSignal	src/v_repLib.cpp	/^ptrSimClearFloatSignal simClearFloatSignal=0;$/;"	v
simClearIntegerSignal	src/v_repLib.cpp	/^ptrSimClearIntegerSignal simClearIntegerSignal=0;$/;"	v
simClearStringSignal	src/v_repLib.cpp	/^ptrSimClearStringSignal simClearStringSignal=0;$/;"	v
simCloseScene	src/v_repLib.cpp	/^ptrSimCloseScene simCloseScene=0;$/;"	v
simCopyMatrix	src/v_repLib.cpp	/^ptrSimCopyMatrix simCopyMatrix=0;$/;"	v
simCopyPasteSelectedObjects	src/v_repLib.cpp	/^ptrSimCopyPasteSelectedObjects simCopyPasteSelectedObjects=0;$/;"	v
simCreateBuffer	src/v_repLib.cpp	/^ptrSimCreateBuffer simCreateBuffer=0;$/;"	v
simCreateHeightfieldShape	src/v_repLib.cpp	/^ptrSimCreateHeightfieldShape simCreateHeightfieldShape=0;$/;"	v
simCreateJoint	src/v_repLib.cpp	/^ptrSimCreateJoint simCreateJoint=0;$/;"	v
simCreateMeshShape	src/v_repLib.cpp	/^ptrSimCreateMeshShape simCreateMeshShape=0;$/;"	v
simCreatePureShape	src/v_repLib.cpp	/^ptrSimCreatePureShape simCreatePureShape=0;$/;"	v
simCreateUI	src/v_repLib.cpp	/^ptrSimCreateUI simCreateUI=0;$/;"	v
simCreateUIButton	src/v_repLib.cpp	/^ptrSimCreateUIButton simCreateUIButton=0;$/;"	v
simCreateUIButtonArray	src/v_repLib.cpp	/^ptrSimCreateUIButtonArray simCreateUIButtonArray=0;$/;"	v
simDeleteSelectedObjects	src/v_repLib.cpp	/^ptrSimDeleteSelectedObjects simDeleteSelectedObjects=0;$/;"	v
simDeleteUIButtonArray	src/v_repLib.cpp	/^ptrSimDeleteUIButtonArray simDeleteUIButtonArray=0;$/;"	v
simDisplayDialog	src/v_repLib.cpp	/^ptrSimDisplayDialog simDisplayDialog=0;$/;"	v
simDoesFileExist	src/v_repLib.cpp	/^ptrSimDoesFileExist simDoesFileExist=0;$/;"	v
simDouble	include/v_repLib.h	/^typedef double simDouble;$/;"	t
simEndDialog	src/v_repLib.cpp	/^ptrSimEndDialog simEndDialog=0;$/;"	v
simExportMesh	src/v_repLib.cpp	/^ptrSimExportMesh simExportMesh=0;$/;"	v
simFloat	include/v_repLib.h	/^typedef float simFloat;$/;"	t
simFloatingViewAdd	src/v_repLib.cpp	/^ptrSimFloatingViewAdd simFloatingViewAdd=0;$/;"	v
simFloatingViewRemove	src/v_repLib.cpp	/^ptrSimFloatingViewRemove simFloatingViewRemove=0;$/;"	v
simGetArrayParameter	src/v_repLib.cpp	/^ptrSimGetArrayParameter simGetArrayParameter=0;$/;"	v
simGetBooleanParameter	src/v_repLib.cpp	/^ptrSimGetBooleanParameter simGetBooleanParameter=0;$/;"	v
simGetClosestPositionOnPath	src/v_repLib.cpp	/^ptrSimGetClosestPositionOnPath simGetClosestPositionOnPath=0;$/;"	v
simGetCollectionHandle	src/v_repLib.cpp	/^ptrSimGetCollectionHandle simGetCollectionHandle=0;$/;"	v
simGetCollectionName	src/v_repLib.cpp	/^ptrSimGetCollectionName simGetCollectionName=0;$/;"	v
simGetCollisionHandle	src/v_repLib.cpp	/^ptrSimGetCollisionHandle simGetCollisionHandle=0;$/;"	v
simGetConfigurationTree	src/v_repLib.cpp	/^ptrSimGetConfigurationTree simGetConfigurationTree=0;$/;"	v
simGetContactInfo	src/v_repLib.cpp	/^ptrSimGetContactInfo simGetContactInfo=0;$/;"	v
simGetDialogInput	src/v_repLib.cpp	/^ptrSimGetDialogInput simGetDialogInput=0;$/;"	v
simGetDialogResult	src/v_repLib.cpp	/^ptrSimGetDialogResult simGetDialogResult=0;$/;"	v
simGetDistanceHandle	src/v_repLib.cpp	/^ptrSimGetDistanceHandle simGetDistanceHandle=0;$/;"	v
simGetEulerAnglesFromMatrix	src/v_repLib.cpp	/^ptrSimGetEulerAnglesFromMatrix simGetEulerAnglesFromMatrix=0;$/;"	v
simGetExplicitHandling	src/v_repLib.cpp	/^ptrSimGetExplicitHandling simGetExplicitHandling=0;$/;"	v
simGetFloatSignal	src/v_repLib.cpp	/^ptrSimGetFloatSignal simGetFloatSignal=0;$/;"	v
simGetFloatingParameter	src/v_repLib.cpp	/^ptrSimGetFloatingParameter simGetFloatingParameter=0;$/;"	v
simGetIkGroupHandle	src/v_repLib.cpp	/^ptrSimGetIkGroupHandle simGetIkGroupHandle=0;$/;"	v
simGetIntegerParameter	src/v_repLib.cpp	/^ptrSimGetIntegerParameter simGetIntegerParameter=0;$/;"	v
simGetIntegerSignal	src/v_repLib.cpp	/^ptrSimGetIntegerSignal simGetIntegerSignal=0;$/;"	v
simGetJointInterval	src/v_repLib.cpp	/^ptrSimGetJointInterval simGetJointInterval=0;$/;"	v
simGetJointMatrix	src/v_repLib.cpp	/^ptrSimGetJointMatrix simGetJointMatrix=0;$/;"	v
simGetJointPosition	src/v_repLib.cpp	/^ptrSimGetJointPosition simGetJointPosition=0;$/;"	v
simGetJointType	src/v_repLib.cpp	/^ptrSimGetJointType simGetJointType=0;$/;"	v
simGetLastError	src/v_repLib.cpp	/^ptrSimGetLastError simGetLastError=0;$/;"	v
simGetLightParameters	src/v_repLib.cpp	/^ptrSimGetLightParameters simGetLightParameters=0;$/;"	v
simGetLinkDummy	src/v_repLib.cpp	/^ptrSimGetLinkDummy simGetLinkDummy=0;$/;"	v
simGetMainWindow	src/v_repLib.cpp	/^ptrSimGetMainWindow simGetMainWindow=0;$/;"	v
simGetMechanismHandle	src/v_repLib.cpp	/^ptrSimGetMechanismHandle simGetMechanismHandle=0;$/;"	v
simGetModelProperty	src/v_repLib.cpp	/^ptrSimGetModelProperty simGetModelProperty=0;$/;"	v
simGetModuleName	src/v_repLib.cpp	/^ptrSimGetModuleName simGetModuleName=0;$/;"	v
simGetNameSuffix	src/v_repLib.cpp	/^ptrSimGetNameSuffix simGetNameSuffix=0;$/;"	v
simGetNavigationMode	src/v_repLib.cpp	/^ptrSimGetNavigationMode simGetNavigationMode=0;$/;"	v
simGetObjectAssociatedWithScript	src/v_repLib.cpp	/^ptrSimGetObjectAssociatedWithScript simGetObjectAssociatedWithScript=0;$/;"	v
simGetObjectChild	src/v_repLib.cpp	/^ptrSimGetObjectChild simGetObjectChild=0;$/;"	v
simGetObjectConfiguration	src/v_repLib.cpp	/^ptrSimGetObjectConfiguration simGetObjectConfiguration=0;$/;"	v
simGetObjectCustomData	src/v_repLib.cpp	/^ptrSimGetObjectCustomData simGetObjectCustomData=0;$/;"	v
simGetObjectCustomDataLength	src/v_repLib.cpp	/^ptrSimGetObjectCustomDataLength simGetObjectCustomDataLength=0;$/;"	v
simGetObjectFloatParameter	src/v_repLib.cpp	/^ptrSimGetObjectFloatParameter simGetObjectFloatParameter=0;$/;"	v
simGetObjectHandle	src/v_repLib.cpp	/^ptrSimGetObjectHandle simGetObjectHandle=0;$/;"	v
simGetObjectIntParameter	src/v_repLib.cpp	/^ptrSimGetObjectIntParameter simGetObjectIntParameter=0;$/;"	v
simGetObjectLastSelection	src/v_repLib.cpp	/^ptrSimGetObjectLastSelection simGetObjectLastSelection=0;$/;"	v
simGetObjectMatrix	src/v_repLib.cpp	/^ptrSimGetObjectMatrix simGetObjectMatrix=0;$/;"	v
simGetObjectName	src/v_repLib.cpp	/^ptrSimGetObjectName simGetObjectName=0;$/;"	v
simGetObjectOrientation	src/v_repLib.cpp	/^ptrSimGetObjectOrientation simGetObjectOrientation=0;$/;"	v
simGetObjectParent	src/v_repLib.cpp	/^ptrSimGetObjectParent simGetObjectParent=0;$/;"	v
simGetObjectPosition	src/v_repLib.cpp	/^ptrSimGetObjectPosition simGetObjectPosition=0;$/;"	v
simGetObjectProperty	src/v_repLib.cpp	/^ptrSimGetObjectProperty simGetObjectProperty=0;$/;"	v
simGetObjectQuaternion	src/v_repLib.cpp	/^ptrSimGetObjectQuaternion simGetObjectQuaternion=0;$/;"	v
simGetObjectSelection	src/v_repLib.cpp	/^ptrSimGetObjectSelection simGetObjectSelection=0;$/;"	v
simGetObjectSelectionSize	src/v_repLib.cpp	/^ptrSimGetObjectSelectionSize simGetObjectSelectionSize=0;$/;"	v
simGetObjectSizeFactor	src/v_repLib.cpp	/^ptrSimGetObjectSizeFactor simGetObjectSizeFactor=0;$/;"	v
simGetObjectSpecialProperty	src/v_repLib.cpp	/^ptrSimGetObjectSpecialProperty simGetObjectSpecialProperty=0;$/;"	v
simGetObjectStringParameter	src/v_repLib.cpp	/^ptrSimGetObjectStringParameter simGetObjectStringParameter=0;$/;"	v
simGetObjectType	src/v_repLib.cpp	/^ptrSimGetObjectType simGetObjectType=0;$/;"	v
simGetObjectUniqueIdentifier	src/v_repLib.cpp	/^ptrSimGetObjectUniqueIdentifier simGetObjectUniqueIdentifier=0;$/;"	v
simGetObjects	src/v_repLib.cpp	/^ptrSimGetObjects simGetObjects=0;$/;"	v
simGetOrientationOnPath	src/v_repLib.cpp	/^ptrSimGetOrientationOnPath simGetOrientationOnPath=0;$/;"	v
simGetPage	src/v_repLib.cpp	/^ptrSimGetPage simGetPage=0;$/;"	v
simGetPathLength	src/v_repLib.cpp	/^ptrSimGetPathLength simGetPathLength=0;$/;"	v
simGetPathPlanningHandle	src/v_repLib.cpp	/^ptrSimGetPathPlanningHandle simGetPathPlanningHandle=0;$/;"	v
simGetPathPosition	src/v_repLib.cpp	/^ptrSimGetPathPosition simGetPathPosition=0;$/;"	v
simGetPositionOnPath	src/v_repLib.cpp	/^ptrSimGetPositionOnPath simGetPositionOnPath=0;$/;"	v
simGetQuaternionFromMatrix	src/v_repLib.cpp	/^ptrSimGetQuaternionFromMatrix simGetQuaternionFromMatrix=0;$/;"	v
simGetRealTimeSimulation	src/v_repLib.cpp	/^ptrSimGetRealTimeSimulation simGetRealTimeSimulation=0;$/;"	v
simGetRotationAxis	src/v_repLib.cpp	/^ptrSimGetRotationAxis simGetRotationAxis=0;$/;"	v
simGetSceneCustomData	src/v_repLib.cpp	/^ptrSimGetSceneCustomData simGetSceneCustomData=0;$/;"	v
simGetSceneCustomDataLength	src/v_repLib.cpp	/^ptrSimGetSceneCustomDataLength simGetSceneCustomDataLength=0;$/;"	v
simGetScript	src/v_repLib.cpp	/^ptrSimGetScript simGetScript=0;$/;"	v
simGetScriptAssociatedWithObject	src/v_repLib.cpp	/^ptrSimGetScriptAssociatedWithObject simGetScriptAssociatedWithObject=0;$/;"	v
simGetScriptHandle	src/v_repLib.cpp	/^ptrSimGetScriptHandle simGetScriptHandle=0;$/;"	v
simGetScriptName	src/v_repLib.cpp	/^ptrSimGetScriptName simGetScriptName=0;$/;"	v
simGetScriptProperty	src/v_repLib.cpp	/^ptrSimGetScriptProperty simGetScriptProperty=0;$/;"	v
simGetScriptRawBuffer	src/v_repLib.cpp	/^ptrSimGetScriptRawBuffer simGetScriptRawBuffer=0;$/;"	v
simGetScriptSimulationParameter	src/v_repLib.cpp	/^ptrSimGetScriptSimulationParameter simGetScriptSimulationParameter=0;$/;"	v
simGetScriptText	src/v_repLib.cpp	/^ptrSimGetScriptText simGetScriptText=0;$/;"	v
simGetShapeMesh	src/v_repLib.cpp	/^ptrSimGetShapeMesh simGetShapeMesh=0;$/;"	v
simGetShapeTriangle	src/v_repLib.cpp	/^ptrSimGetShapeTriangle simGetShapeTriangle=0;$/;"	v
simGetShapeVertex	src/v_repLib.cpp	/^ptrSimGetShapeVertex simGetShapeVertex=0;$/;"	v
simGetSignalName	src/v_repLib.cpp	/^ptrSimGetSignalName simGetSignalName=0;$/;"	v
simGetSimulationPassesPerRenderingPass	src/v_repLib.cpp	/^ptrSimGetSimulationPassesPerRenderingPass simGetSimulationPassesPerRenderingPass=0;$/;"	v
simGetSimulationState	src/v_repLib.cpp	/^ptrSimGetSimulationState simGetSimulationState=0;$/;"	v
simGetSimulationTime	src/v_repLib.cpp	/^ptrSimGetSimulationTime simGetSimulationTime=0;$/;"	v
simGetSimulationTimeStep	src/v_repLib.cpp	/^ptrSimGetSimulationTimeStep simGetSimulationTimeStep=0;$/;"	v
simGetSimulatorMessage	src/v_repLib.cpp	/^ptrSimGetSimulatorMessage simGetSimulatorMessage=0;$/;"	v
simGetStringParameter	src/v_repLib.cpp	/^ptrSimGetStringParameter simGetStringParameter=0;$/;"	v
simGetStringSignal	src/v_repLib.cpp	/^ptrSimGetStringSignal simGetStringSignal=0;$/;"	v
simGetSystemTime	src/v_repLib.cpp	/^ptrSimGetSystemTime simGetSystemTime=0;$/;"	v
simGetSystemTimeInMilliseconds	src/v_repLib.cpp	/^ptrSimGetSystemTimeInMilliseconds simGetSystemTimeInMilliseconds=0;$/;"	v
simGetUIButtonLabel	src/v_repLib.cpp	/^ptrSimGetUIButtonLabel simGetUIButtonLabel=0;$/;"	v
simGetUIButtonProperty	src/v_repLib.cpp	/^ptrSimGetUIButtonProperty simGetUIButtonProperty=0;$/;"	v
simGetUIButtonSize	src/v_repLib.cpp	/^ptrSimGetUIButtonSize simGetUIButtonSize=0;$/;"	v
simGetUIEventButton	src/v_repLib.cpp	/^ptrSimGetUIEventButton simGetUIEventButton=0;$/;"	v
simGetUIHandle	src/v_repLib.cpp	/^ptrSimGetUIHandle simGetUIHandle=0;$/;"	v
simGetUIPosition	src/v_repLib.cpp	/^ptrSimGetUIPosition simGetUIPosition=0;$/;"	v
simGetUIProperty	src/v_repLib.cpp	/^ptrSimGetUIProperty simGetUIProperty=0;$/;"	v
simGetUISlider	src/v_repLib.cpp	/^ptrSimGetUISlider simGetUISlider=0;$/;"	v
simGetVelocity	src/v_repLib.cpp	/^ptrSimGetVelocity simGetVelocity=0;$/;"	v
simGetVisionSensorDepthBuffer	src/v_repLib.cpp	/^ptrSimGetVisionSensorDepthBuffer simGetVisionSensorDepthBuffer=0;$/;"	v
simGetVisionSensorImage	src/v_repLib.cpp	/^ptrSimGetVisionSensorImage simGetVisionSensorImage=0;$/;"	v
simGetVisionSensorResolution	src/v_repLib.cpp	/^ptrSimGetVisionSensorResolution simGetVisionSensorResolution=0;$/;"	v
simHandleCollision	src/v_repLib.cpp	/^ptrSimHandleCollision simHandleCollision=0;$/;"	v
simHandleDistance	src/v_repLib.cpp	/^ptrSimHandleDistance simHandleDistance=0;$/;"	v
simHandleDynamics	src/v_repLib.cpp	/^ptrSimHandleDynamics simHandleDynamics=0;$/;"	v
simHandleGraph	src/v_repLib.cpp	/^ptrSimHandleGraph simHandleGraph=0;$/;"	v
simHandleIkGroup	src/v_repLib.cpp	/^ptrSimHandleIkGroup simHandleIkGroup=0;$/;"	v
simHandleJoint	src/v_repLib.cpp	/^ptrSimHandleJoint simHandleJoint=0;$/;"	v
simHandleMainScript	src/v_repLib.cpp	/^ptrSimHandleMainScript simHandleMainScript=0;$/;"	v
simHandleMechanism	src/v_repLib.cpp	/^ptrSimHandleMechanism simHandleMechanism=0;$/;"	v
simHandleMill	src/v_repLib.cpp	/^ptrSimHandleMill simHandleMill=0;$/;"	v
simHandlePath	src/v_repLib.cpp	/^ptrSimHandlePath simHandlePath=0;$/;"	v
simHandleProximitySensor	src/v_repLib.cpp	/^ptrSimHandleProximitySensor simHandleProximitySensor=0;$/;"	v
simHandleVarious	src/v_repLib.cpp	/^ptrSimHandleVarious simHandleVarious=0;$/;"	v
simHandleVisionSensor	src/v_repLib.cpp	/^ptrSimHandleVisionSensor simHandleVisionSensor=0;$/;"	v
simImportMesh	src/v_repLib.cpp	/^ptrSimImportMesh simImportMesh=0;$/;"	v
simInitializePathSearch	src/v_repLib.cpp	/^ptrSimInitializePathSearch simInitializePathSearch=0;$/;"	v
simInt	include/v_repLib.h	/^typedef int simInt;$/;"	t
simInterpolateMatrices	src/v_repLib.cpp	/^ptrSimInterpolateMatrices simInterpolateMatrices=0;$/;"	v
simInvertMatrix	src/v_repLib.cpp	/^ptrSimInvertMatrix simInvertMatrix=0;$/;"	v
simIsHandleValid	src/v_repLib.cpp	/^ptrSimIsHandleValid simIsHandleValid=0;$/;"	v
simIsObjectInSelection	src/v_repLib.cpp	/^ptrSimIsObjectInSelection simIsObjectInSelection=0;$/;"	v
simIsRealTimeSimulationStepNeeded	src/v_repLib.cpp	/^ptrSimIsRealTimeSimulationStepNeeded simIsRealTimeSimulationStepNeeded=0;$/;"	v
simJointGetForce	src/v_repLib.cpp	/^ptrSimJointGetForce simJointGetForce=0;$/;"	v
simLoadModel	src/v_repLib.cpp	/^ptrSimLoadModel simLoadModel=0;$/;"	v
simLoadModule	src/v_repLib.cpp	/^ptrSimLoadModule simLoadModule=0;$/;"	v
simLoadScene	src/v_repLib.cpp	/^ptrSimLoadScene simLoadScene=0;$/;"	v
simLoadUI	src/v_repLib.cpp	/^ptrSimLoadUI simLoadUI=0;$/;"	v
simLockInterface	src/v_repLib.cpp	/^ptrSimLockInterface simLockInterface=0;$/;"	v
simMultiplyMatrices	src/v_repLib.cpp	/^ptrSimMultiplyMatrices simMultiplyMatrices=0;$/;"	v
simPauseSimulation	src/v_repLib.cpp	/^ptrSimPauseSimulation simPauseSimulation=0;$/;"	v
simPerformPathSearchStep	src/v_repLib.cpp	/^ptrSimPerformPathSearchStep simPerformPathSearchStep=0;$/;"	v
simPersistentDataRead	src/v_repLib.cpp	/^ptrSimPersistentDataRead simPersistentDataRead=0;$/;"	v
simPersistentDataWrite	src/v_repLib.cpp	/^ptrSimPersistentDataWrite simPersistentDataWrite=0;$/;"	v
simRMLPosition	src/v_repLib.cpp	/^ptrSimRMLPosition simRMLPosition=0;$/;"	v
simRMLVelocity	src/v_repLib.cpp	/^ptrSimRMLVelocity simRMLVelocity=0;$/;"	v
simReadCollision	src/v_repLib.cpp	/^ptrSimReadCollision simReadCollision=0;$/;"	v
simReadDistance	src/v_repLib.cpp	/^ptrSimReadDistance simReadDistance=0;$/;"	v
simReadForceSensor	src/v_repLib.cpp	/^ptrSimReadForceSensor simReadForceSensor=0;$/;"	v
simReadProximitySensor	src/v_repLib.cpp	/^ptrSimReadProximitySensor simReadProximitySensor=0;$/;"	v
simReadVisionSensor	src/v_repLib.cpp	/^ptrSimReadVisionSensor simReadVisionSensor=0;$/;"	v
simReceiveData	src/v_repLib.cpp	/^ptrSimReceiveData simReceiveData=0;$/;"	v
simRefreshDialogs	src/v_repLib.cpp	/^ptrSimRefreshDialogs simRefreshDialogs=0;$/;"	v
simRegisterContactCallback	src/v_repLib.cpp	/^ptrSimRegisterContactCallback simRegisterContactCallback=0;$/;"	v
simRegisterCustomLuaFunction	src/v_repLib.cpp	/^ptrSimRegisterCustomLuaFunction simRegisterCustomLuaFunction=0;$/;"	v
simRegisterCustomLuaVariable	src/v_repLib.cpp	/^ptrSimRegisterCustomLuaVariable simRegisterCustomLuaVariable=0;$/;"	v
simReleaseBuffer	src/v_repLib.cpp	/^ptrSimReleaseBuffer simReleaseBuffer=0;$/;"	v
simReleaseScriptRawBuffer	src/v_repLib.cpp	/^ptrSimReleaseScriptRawBuffer simReleaseScriptRawBuffer=0;$/;"	v
simRemoveBanner	src/v_repLib.cpp	/^ptrSimRemoveBanner simRemoveBanner=0;$/;"	v
simRemoveCollection	src/v_repLib.cpp	/^ptrSimRemoveCollection simRemoveCollection=0;$/;"	v
simRemoveDrawingObject	src/v_repLib.cpp	/^ptrSimRemoveDrawingObject simRemoveDrawingObject=0;$/;"	v
simRemoveObject	src/v_repLib.cpp	/^ptrSimRemoveObject simRemoveObject=0;$/;"	v
simRemoveObjectFromSelection	src/v_repLib.cpp	/^ptrSimRemoveObjectFromSelection simRemoveObjectFromSelection=0;$/;"	v
simRemoveParticleObject	src/v_repLib.cpp	/^ptrSimRemoveParticleObject simRemoveParticleObject=0;$/;"	v
simRemoveScript	src/v_repLib.cpp	/^ptrSimRemoveScript simRemoveScript=0;$/;"	v
simRemoveUI	src/v_repLib.cpp	/^ptrSimRemoveUI simRemoveUI=0;$/;"	v
simReservedCommand	src/v_repLib.cpp	/^ptrSimReservedCommand simReservedCommand=0;$/;"	v
simResetCollision	src/v_repLib.cpp	/^ptrSimResetCollision simResetCollision=0;$/;"	v
simResetDistance	src/v_repLib.cpp	/^ptrSimResetDistance simResetDistance=0;$/;"	v
simResetDynamicObject	src/v_repLib.cpp	/^ptrSimResetDynamicObject simResetDynamicObject=0;$/;"	v
simResetGraph	src/v_repLib.cpp	/^ptrSimResetGraph simResetGraph=0;$/;"	v
simResetJoint	src/v_repLib.cpp	/^ptrSimResetJoint simResetJoint=0;$/;"	v
simResetMill	src/v_repLib.cpp	/^ptrSimResetMill simResetMill=0;$/;"	v
simResetMilling	src/v_repLib.cpp	/^ptrSimResetMilling simResetMilling=0;$/;"	v
simResetPath	src/v_repLib.cpp	/^ptrSimResetPath simResetPath=0;$/;"	v
simResetProximitySensor	src/v_repLib.cpp	/^ptrSimResetProximitySensor simResetProximitySensor=0;$/;"	v
simResetScript	src/v_repLib.cpp	/^ptrSimResetScript simResetScript=0;$/;"	v
simResetVisionSensor	src/v_repLib.cpp	/^ptrSimResetVisionSensor simResetVisionSensor=0;$/;"	v
simRosAddStatusbarMessageServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosAddStatusbarMessageServer;$/;"	m	class:ROS_server
simRosAddStatusbarMessageServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosAddStatusbarMessageServer;$/;"	m	class:ROS_server	file:
simRosAddStatusbarMessageService	src/ROS_server.cpp	/^bool ROS_server::simRosAddStatusbarMessageService(vrep_common::simRosAddStatusbarMessage::Request &req,vrep_common::simRosAddStatusbarMessage::Response &res)$/;"	f	class:ROS_server
simRosAuxiliaryConsoleCloseServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosAuxiliaryConsoleCloseServer;$/;"	m	class:ROS_server
simRosAuxiliaryConsoleCloseServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosAuxiliaryConsoleCloseServer;$/;"	m	class:ROS_server	file:
simRosAuxiliaryConsoleCloseService	src/ROS_server.cpp	/^bool ROS_server::simRosAuxiliaryConsoleCloseService(vrep_common::simRosAuxiliaryConsoleClose::Request &req,vrep_common::simRosAuxiliaryConsoleClose::Response &res)$/;"	f	class:ROS_server
simRosAuxiliaryConsoleOpenServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosAuxiliaryConsoleOpenServer;$/;"	m	class:ROS_server
simRosAuxiliaryConsoleOpenServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosAuxiliaryConsoleOpenServer;$/;"	m	class:ROS_server	file:
simRosAuxiliaryConsoleOpenService	src/ROS_server.cpp	/^bool ROS_server::simRosAuxiliaryConsoleOpenService(vrep_common::simRosAuxiliaryConsoleOpen::Request &req,vrep_common::simRosAuxiliaryConsoleOpen::Response &res)$/;"	f	class:ROS_server
simRosAuxiliaryConsolePrintServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosAuxiliaryConsolePrintServer;$/;"	m	class:ROS_server
simRosAuxiliaryConsolePrintServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosAuxiliaryConsolePrintServer;$/;"	m	class:ROS_server	file:
simRosAuxiliaryConsolePrintService	src/ROS_server.cpp	/^bool ROS_server::simRosAuxiliaryConsolePrintService(vrep_common::simRosAuxiliaryConsolePrint::Request &req,vrep_common::simRosAuxiliaryConsolePrint::Response &res)$/;"	f	class:ROS_server
simRosAuxiliaryConsoleShowServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosAuxiliaryConsoleShowServer;$/;"	m	class:ROS_server
simRosAuxiliaryConsoleShowServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosAuxiliaryConsoleShowServer;$/;"	m	class:ROS_server	file:
simRosAuxiliaryConsoleShowService	src/ROS_server.cpp	/^bool ROS_server::simRosAuxiliaryConsoleShowService(vrep_common::simRosAuxiliaryConsoleShow::Request &req,vrep_common::simRosAuxiliaryConsoleShow::Response &res)$/;"	f	class:ROS_server
simRosBreakForceSensorServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosBreakForceSensorServer;$/;"	m	class:ROS_server
simRosBreakForceSensorServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosBreakForceSensorServer;$/;"	m	class:ROS_server	file:
simRosBreakForceSensorService	src/ROS_server.cpp	/^bool ROS_server::simRosBreakForceSensorService(vrep_common::simRosBreakForceSensor::Request &req,vrep_common::simRosBreakForceSensor::Response &res)$/;"	f	class:ROS_server
simRosClearFloatSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosClearFloatSignalServer;$/;"	m	class:ROS_server
simRosClearFloatSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosClearFloatSignalServer;$/;"	m	class:ROS_server	file:
simRosClearFloatSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosClearFloatSignalService(vrep_common::simRosClearFloatSignal::Request &req,vrep_common::simRosClearFloatSignal::Response &res)$/;"	f	class:ROS_server
simRosClearIntegerSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosClearIntegerSignalServer;$/;"	m	class:ROS_server
simRosClearIntegerSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosClearIntegerSignalServer;$/;"	m	class:ROS_server	file:
simRosClearIntegerSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosClearIntegerSignalService(vrep_common::simRosClearIntegerSignal::Request &req,vrep_common::simRosClearIntegerSignal::Response &res)$/;"	f	class:ROS_server
simRosClearStringSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosClearStringSignalServer;$/;"	m	class:ROS_server
simRosClearStringSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosClearStringSignalServer;$/;"	m	class:ROS_server	file:
simRosClearStringSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosClearStringSignalService(vrep_common::simRosClearStringSignal::Request &req,vrep_common::simRosClearStringSignal::Response &res)$/;"	f	class:ROS_server
simRosCloseSceneServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosCloseSceneServer;$/;"	m	class:ROS_server
simRosCloseSceneServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosCloseSceneServer;$/;"	m	class:ROS_server	file:
simRosCloseSceneService	src/ROS_server.cpp	/^bool ROS_server::simRosCloseSceneService(vrep_common::simRosCloseScene::Request &req,vrep_common::simRosCloseScene::Response &res)$/;"	f	class:ROS_server
simRosCopyPasteObjectsServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosCopyPasteObjectsServer;$/;"	m	class:ROS_server
simRosCopyPasteObjectsServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosCopyPasteObjectsServer;$/;"	m	class:ROS_server	file:
simRosCopyPasteObjectsService	src/ROS_server.cpp	/^bool ROS_server::simRosCopyPasteObjectsService(vrep_common::simRosCopyPasteObjects::Request &req,vrep_common::simRosCopyPasteObjects::Response &res)$/;"	f	class:ROS_server
simRosDisablePublisherServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosDisablePublisherServer;$/;"	m	class:ROS_server
simRosDisablePublisherServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosDisablePublisherServer;$/;"	m	class:ROS_server	file:
simRosDisablePublisherService	src/ROS_server.cpp	/^bool ROS_server::simRosDisablePublisherService(vrep_common::simRosDisablePublisher::Request &req,vrep_common::simRosDisablePublisher::Response &res)$/;"	f	class:ROS_server
simRosDisableSubscriberServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosDisableSubscriberServer;$/;"	m	class:ROS_server
simRosDisableSubscriberServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosDisableSubscriberServer;$/;"	m	class:ROS_server	file:
simRosDisableSubscriberService	src/ROS_server.cpp	/^bool ROS_server::simRosDisableSubscriberService(vrep_common::simRosDisableSubscriber::Request &req,vrep_common::simRosDisableSubscriber::Response &res)$/;"	f	class:ROS_server
simRosDisplayDialogServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosDisplayDialogServer;$/;"	m	class:ROS_server
simRosDisplayDialogServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosDisplayDialogServer;$/;"	m	class:ROS_server	file:
simRosDisplayDialogService	src/ROS_server.cpp	/^bool ROS_server::simRosDisplayDialogService(vrep_common::simRosDisplayDialog::Request &req,vrep_common::simRosDisplayDialog::Response &res)$/;"	f	class:ROS_server
simRosEnablePublisherServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosEnablePublisherServer;$/;"	m	class:ROS_server
simRosEnablePublisherServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosEnablePublisherServer;$/;"	m	class:ROS_server	file:
simRosEnablePublisherService	src/ROS_server.cpp	/^bool ROS_server::simRosEnablePublisherService(vrep_common::simRosEnablePublisher::Request &req,vrep_common::simRosEnablePublisher::Response &res)$/;"	f	class:ROS_server
simRosEnableSubscriberServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosEnableSubscriberServer;$/;"	m	class:ROS_server
simRosEnableSubscriberServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosEnableSubscriberServer;$/;"	m	class:ROS_server	file:
simRosEnableSubscriberService	src/ROS_server.cpp	/^bool ROS_server::simRosEnableSubscriberService(vrep_common::simRosEnableSubscriber::Request &req,vrep_common::simRosEnableSubscriber::Response &res)$/;"	f	class:ROS_server
simRosEndDialogServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosEndDialogServer;$/;"	m	class:ROS_server
simRosEndDialogServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosEndDialogServer;$/;"	m	class:ROS_server	file:
simRosEndDialogService	src/ROS_server.cpp	/^bool ROS_server::simRosEndDialogService(vrep_common::simRosEndDialog::Request &req,vrep_common::simRosEndDialog::Response &res)$/;"	f	class:ROS_server
simRosEraseFileServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosEraseFileServer;$/;"	m	class:ROS_server
simRosEraseFileServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosEraseFileServer;$/;"	m	class:ROS_server	file:
simRosEraseFileService	src/ROS_server.cpp	/^bool ROS_server::simRosEraseFileService(vrep_common::simRosEraseFile::Request &req,vrep_common::simRosEraseFile::Response &res)$/;"	f	class:ROS_server
simRosGetArrayParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetArrayParameterServer;$/;"	m	class:ROS_server
simRosGetArrayParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetArrayParameterServer;$/;"	m	class:ROS_server	file:
simRosGetArrayParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosGetArrayParameterService(vrep_common::simRosGetArrayParameter::Request &req,vrep_common::simRosGetArrayParameter::Response &res)$/;"	f	class:ROS_server
simRosGetBooleanParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetBooleanParameterServer;$/;"	m	class:ROS_server
simRosGetBooleanParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetBooleanParameterServer;$/;"	m	class:ROS_server	file:
simRosGetBooleanParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosGetBooleanParameterService(vrep_common::simRosGetBooleanParameter::Request &req,vrep_common::simRosGetBooleanParameter::Response &res)$/;"	f	class:ROS_server
simRosGetCollisionHandleServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetCollisionHandleServer;$/;"	m	class:ROS_server
simRosGetCollisionHandleServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetCollisionHandleServer;$/;"	m	class:ROS_server	file:
simRosGetCollisionHandleService	src/ROS_server.cpp	/^bool ROS_server::simRosGetCollisionHandleService(vrep_common::simRosGetCollisionHandle::Request &req,vrep_common::simRosGetCollisionHandle::Response &res)$/;"	f	class:ROS_server
simRosGetDialogInputServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetDialogInputServer;$/;"	m	class:ROS_server
simRosGetDialogInputServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetDialogInputServer;$/;"	m	class:ROS_server	file:
simRosGetDialogInputService	src/ROS_server.cpp	/^bool ROS_server::simRosGetDialogInputService(vrep_common::simRosGetDialogInput::Request &req,vrep_common::simRosGetDialogInput::Response &res)$/;"	f	class:ROS_server
simRosGetDialogResultServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetDialogResultServer;$/;"	m	class:ROS_server
simRosGetDialogResultServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetDialogResultServer;$/;"	m	class:ROS_server	file:
simRosGetDialogResultService	src/ROS_server.cpp	/^bool ROS_server::simRosGetDialogResultService(vrep_common::simRosGetDialogResult::Request &req,vrep_common::simRosGetDialogResult::Response &res)$/;"	f	class:ROS_server
simRosGetDistanceHandleServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetDistanceHandleServer;$/;"	m	class:ROS_server
simRosGetDistanceHandleServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetDistanceHandleServer;$/;"	m	class:ROS_server	file:
simRosGetDistanceHandleService	src/ROS_server.cpp	/^bool ROS_server::simRosGetDistanceHandleService(vrep_common::simRosGetDistanceHandle::Request &req,vrep_common::simRosGetDistanceHandle::Response &res)$/;"	f	class:ROS_server
simRosGetFloatSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetFloatSignalServer;$/;"	m	class:ROS_server
simRosGetFloatSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetFloatSignalServer;$/;"	m	class:ROS_server	file:
simRosGetFloatSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosGetFloatSignalService(vrep_common::simRosGetFloatSignal::Request &req,vrep_common::simRosGetFloatSignal::Response &res)$/;"	f	class:ROS_server
simRosGetFloatingParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetFloatingParameterServer;$/;"	m	class:ROS_server
simRosGetFloatingParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetFloatingParameterServer;$/;"	m	class:ROS_server	file:
simRosGetFloatingParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosGetFloatingParameterService(vrep_common::simRosGetFloatingParameter::Request &req,vrep_common::simRosGetFloatingParameter::Response &res)$/;"	f	class:ROS_server
simRosGetInfoServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetInfoServer;$/;"	m	class:ROS_server
simRosGetInfoServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetInfoServer;$/;"	m	class:ROS_server	file:
simRosGetInfoService	src/ROS_server.cpp	/^bool ROS_server::simRosGetInfoService(vrep_common::simRosGetInfo::Request &req,vrep_common::simRosGetInfo::Response &res)$/;"	f	class:ROS_server
simRosGetIntegerParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetIntegerParameterServer;$/;"	m	class:ROS_server
simRosGetIntegerParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetIntegerParameterServer;$/;"	m	class:ROS_server	file:
simRosGetIntegerParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosGetIntegerParameterService(vrep_common::simRosGetIntegerParameter::Request &req,vrep_common::simRosGetIntegerParameter::Response &res)$/;"	f	class:ROS_server
simRosGetIntegerSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetIntegerSignalServer;$/;"	m	class:ROS_server
simRosGetIntegerSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetIntegerSignalServer;$/;"	m	class:ROS_server	file:
simRosGetIntegerSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosGetIntegerSignalService(vrep_common::simRosGetIntegerSignal::Request &req,vrep_common::simRosGetIntegerSignal::Response &res)$/;"	f	class:ROS_server
simRosGetJointMatrixServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetJointMatrixServer;$/;"	m	class:ROS_server
simRosGetJointMatrixServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetJointMatrixServer;$/;"	m	class:ROS_server	file:
simRosGetJointMatrixService	src/ROS_server.cpp	/^bool ROS_server::simRosGetJointMatrixService(vrep_common::simRosGetJointMatrix::Request &req,vrep_common::simRosGetJointMatrix::Response &res)$/;"	f	class:ROS_server
simRosGetJointStateServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetJointStateServer;$/;"	m	class:ROS_server
simRosGetJointStateServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetJointStateServer;$/;"	m	class:ROS_server	file:
simRosGetJointStateService	src/ROS_server.cpp	/^bool ROS_server::simRosGetJointStateService(vrep_common::simRosGetJointState::Request &req,vrep_common::simRosGetJointState::Response &res)$/;"	f	class:ROS_server
simRosGetLastErrorsServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetLastErrorsServer;$/;"	m	class:ROS_server
simRosGetLastErrorsServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetLastErrorsServer;$/;"	m	class:ROS_server	file:
simRosGetLastErrorsService	src/ROS_server.cpp	/^bool ROS_server::simRosGetLastErrorsService(vrep_common::simRosGetLastErrors::Request &req,vrep_common::simRosGetLastErrors::Response &res)$/;"	f	class:ROS_server
simRosGetModelPropertyServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetModelPropertyServer;$/;"	m	class:ROS_server
simRosGetModelPropertyServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetModelPropertyServer;$/;"	m	class:ROS_server	file:
simRosGetModelPropertyService	src/ROS_server.cpp	/^bool ROS_server::simRosGetModelPropertyService(vrep_common::simRosGetModelProperty::Request &req,vrep_common::simRosGetModelProperty::Response &res)$/;"	f	class:ROS_server
simRosGetObjectChildServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectChildServer;$/;"	m	class:ROS_server
simRosGetObjectChildServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectChildServer;$/;"	m	class:ROS_server	file:
simRosGetObjectChildService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectChildService(vrep_common::simRosGetObjectChild::Request &req,vrep_common::simRosGetObjectChild::Response &res)$/;"	f	class:ROS_server
simRosGetObjectFloatParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectFloatParameterServer;$/;"	m	class:ROS_server
simRosGetObjectFloatParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectFloatParameterServer;$/;"	m	class:ROS_server	file:
simRosGetObjectFloatParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectFloatParameterService(vrep_common::simRosGetObjectFloatParameter::Request &req,vrep_common::simRosGetObjectFloatParameter::Response &res)$/;"	f	class:ROS_server
simRosGetObjectHandleServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectHandleServer;$/;"	m	class:ROS_server
simRosGetObjectHandleServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectHandleServer;$/;"	m	class:ROS_server	file:
simRosGetObjectHandleService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectHandleService(vrep_common::simRosGetObjectHandle::Request &req,vrep_common::simRosGetObjectHandle::Response &res)$/;"	f	class:ROS_server
simRosGetObjectIntParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectIntParameterServer;$/;"	m	class:ROS_server
simRosGetObjectIntParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectIntParameterServer;$/;"	m	class:ROS_server	file:
simRosGetObjectIntParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectIntParameterService(vrep_common::simRosGetObjectIntParameter::Request &req,vrep_common::simRosGetObjectIntParameter::Response &res)$/;"	f	class:ROS_server
simRosGetObjectParentServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectParentServer;$/;"	m	class:ROS_server
simRosGetObjectParentServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectParentServer;$/;"	m	class:ROS_server	file:
simRosGetObjectParentService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectParentService(vrep_common::simRosGetObjectParent::Request &req,vrep_common::simRosGetObjectParent::Response &res)$/;"	f	class:ROS_server
simRosGetObjectPoseServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectPoseServer;$/;"	m	class:ROS_server
simRosGetObjectPoseServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectPoseServer;$/;"	m	class:ROS_server	file:
simRosGetObjectPoseService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectPoseService(vrep_common::simRosGetObjectPose::Request &req,vrep_common::simRosGetObjectPose::Response &res)$/;"	f	class:ROS_server
simRosGetObjectSelectionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectSelectionServer;$/;"	m	class:ROS_server
simRosGetObjectSelectionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectSelectionServer;$/;"	m	class:ROS_server	file:
simRosGetObjectSelectionService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectSelectionService(vrep_common::simRosGetObjectSelection::Request &req,vrep_common::simRosGetObjectSelection::Response &res)$/;"	f	class:ROS_server
simRosGetObjectsServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetObjectsServer;$/;"	m	class:ROS_server
simRosGetObjectsServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetObjectsServer;$/;"	m	class:ROS_server	file:
simRosGetObjectsService	src/ROS_server.cpp	/^bool ROS_server::simRosGetObjectsService(vrep_common::simRosGetObjects::Request &req,vrep_common::simRosGetObjects::Response &res)$/;"	f	class:ROS_server
simRosGetStringParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetStringParameterServer;$/;"	m	class:ROS_server
simRosGetStringParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetStringParameterServer;$/;"	m	class:ROS_server	file:
simRosGetStringParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosGetStringParameterService(vrep_common::simRosGetStringParameter::Request &req,vrep_common::simRosGetStringParameter::Response &res)$/;"	f	class:ROS_server
simRosGetStringSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetStringSignalServer;$/;"	m	class:ROS_server
simRosGetStringSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetStringSignalServer;$/;"	m	class:ROS_server	file:
simRosGetStringSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosGetStringSignalService(vrep_common::simRosGetStringSignal::Request &req,vrep_common::simRosGetStringSignal::Response &res)$/;"	f	class:ROS_server
simRosGetUIButtonPropertyServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetUIButtonPropertyServer;$/;"	m	class:ROS_server
simRosGetUIButtonPropertyServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetUIButtonPropertyServer;$/;"	m	class:ROS_server	file:
simRosGetUIButtonPropertyService	src/ROS_server.cpp	/^bool ROS_server::simRosGetUIButtonPropertyService(vrep_common::simRosGetUIButtonProperty::Request &req,vrep_common::simRosGetUIButtonProperty::Response &res)$/;"	f	class:ROS_server
simRosGetUIEventButtonServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetUIEventButtonServer;$/;"	m	class:ROS_server
simRosGetUIEventButtonServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetUIEventButtonServer;$/;"	m	class:ROS_server	file:
simRosGetUIEventButtonService	src/ROS_server.cpp	/^bool ROS_server::simRosGetUIEventButtonService(vrep_common::simRosGetUIEventButton::Request &req,vrep_common::simRosGetUIEventButton::Response &res)$/;"	f	class:ROS_server
simRosGetUIHandleServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetUIHandleServer;$/;"	m	class:ROS_server
simRosGetUIHandleServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetUIHandleServer;$/;"	m	class:ROS_server	file:
simRosGetUIHandleService	src/ROS_server.cpp	/^bool ROS_server::simRosGetUIHandleService(vrep_common::simRosGetUIHandle::Request &req,vrep_common::simRosGetUIHandle::Response &res)$/;"	f	class:ROS_server
simRosGetUISliderServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetUISliderServer;$/;"	m	class:ROS_server
simRosGetUISliderServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetUISliderServer;$/;"	m	class:ROS_server	file:
simRosGetUISliderService	src/ROS_server.cpp	/^bool ROS_server::simRosGetUISliderService(vrep_common::simRosGetUISlider::Request &req,vrep_common::simRosGetUISlider::Response &res)$/;"	f	class:ROS_server
simRosGetVisionSensorDepthBufferServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetVisionSensorDepthBufferServer;$/;"	m	class:ROS_server
simRosGetVisionSensorDepthBufferServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetVisionSensorDepthBufferServer;$/;"	m	class:ROS_server	file:
simRosGetVisionSensorDepthBufferService	src/ROS_server.cpp	/^bool ROS_server::simRosGetVisionSensorDepthBufferService(vrep_common::simRosGetVisionSensorDepthBuffer::Request &req,vrep_common::simRosGetVisionSensorDepthBuffer::Response &res)$/;"	f	class:ROS_server
simRosGetVisionSensorImageServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosGetVisionSensorImageServer;$/;"	m	class:ROS_server
simRosGetVisionSensorImageServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosGetVisionSensorImageServer;$/;"	m	class:ROS_server	file:
simRosGetVisionSensorImageService	src/ROS_server.cpp	/^bool ROS_server::simRosGetVisionSensorImageService(vrep_common::simRosGetVisionSensorImage::Request &req,vrep_common::simRosGetVisionSensorImage::Response &res)$/;"	f	class:ROS_server
simRosLoadModelServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosLoadModelServer;$/;"	m	class:ROS_server
simRosLoadModelServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosLoadModelServer;$/;"	m	class:ROS_server	file:
simRosLoadModelService	src/ROS_server.cpp	/^bool ROS_server::simRosLoadModelService(vrep_common::simRosLoadModel::Request &req,vrep_common::simRosLoadModel::Response &res)$/;"	f	class:ROS_server
simRosLoadSceneServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosLoadSceneServer;$/;"	m	class:ROS_server
simRosLoadSceneServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosLoadSceneServer;$/;"	m	class:ROS_server	file:
simRosLoadSceneService	src/ROS_server.cpp	/^bool ROS_server::simRosLoadSceneService(vrep_common::simRosLoadScene::Request &req,vrep_common::simRosLoadScene::Response &res)$/;"	f	class:ROS_server
simRosLoadUIServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosLoadUIServer;$/;"	m	class:ROS_server
simRosLoadUIServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosLoadUIServer;$/;"	m	class:ROS_server	file:
simRosLoadUIService	src/ROS_server.cpp	/^bool ROS_server::simRosLoadUIService(vrep_common::simRosLoadUI::Request &req,vrep_common::simRosLoadUI::Response &res)$/;"	f	class:ROS_server
simRosPauseSimulationServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosPauseSimulationServer;$/;"	m	class:ROS_server
simRosPauseSimulationServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosPauseSimulationServer;$/;"	m	class:ROS_server	file:
simRosPauseSimulationService	src/ROS_server.cpp	/^bool ROS_server::simRosPauseSimulationService(vrep_common::simRosPauseSimulation::Request &req,vrep_common::simRosPauseSimulation::Response &res)$/;"	f	class:ROS_server
simRosRMLPositionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosRMLPositionServer;$/;"	m	class:ROS_server
simRosRMLPositionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosRMLPositionServer;$/;"	m	class:ROS_server	file:
simRosRMLPositionService	src/ROS_server.cpp	/^bool ROS_server::simRosRMLPositionService(vrep_common::simRosRMLPosition::Request &req,vrep_common::simRosRMLPosition::Response &res)$/;"	f	class:ROS_server
simRosRMLVelocityServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosRMLVelocityServer;$/;"	m	class:ROS_server
simRosRMLVelocityServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosRMLVelocityServer;$/;"	m	class:ROS_server	file:
simRosRMLVelocityService	src/ROS_server.cpp	/^bool ROS_server::simRosRMLVelocityService(vrep_common::simRosRMLVelocity::Request &req,vrep_common::simRosRMLVelocity::Response &res)$/;"	f	class:ROS_server
simRosReadCollisionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosReadCollisionServer;$/;"	m	class:ROS_server
simRosReadCollisionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosReadCollisionServer;$/;"	m	class:ROS_server	file:
simRosReadCollisionService	src/ROS_server.cpp	/^bool ROS_server::simRosReadCollisionService(vrep_common::simRosReadCollision::Request &req,vrep_common::simRosReadCollision::Response &res)$/;"	f	class:ROS_server
simRosReadDistanceServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosReadDistanceServer;$/;"	m	class:ROS_server
simRosReadDistanceServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosReadDistanceServer;$/;"	m	class:ROS_server	file:
simRosReadDistanceService	src/ROS_server.cpp	/^bool ROS_server::simRosReadDistanceService(vrep_common::simRosReadDistance::Request &req,vrep_common::simRosReadDistance::Response &res)$/;"	f	class:ROS_server
simRosReadForceSensorServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosReadForceSensorServer;$/;"	m	class:ROS_server
simRosReadForceSensorServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosReadForceSensorServer;$/;"	m	class:ROS_server	file:
simRosReadForceSensorService	src/ROS_server.cpp	/^bool ROS_server::simRosReadForceSensorService(vrep_common::simRosReadForceSensor::Request &req,vrep_common::simRosReadForceSensor::Response &res)$/;"	f	class:ROS_server
simRosReadProximitySensorServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosReadProximitySensorServer;$/;"	m	class:ROS_server
simRosReadProximitySensorServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosReadProximitySensorServer;$/;"	m	class:ROS_server	file:
simRosReadProximitySensorService	src/ROS_server.cpp	/^bool ROS_server::simRosReadProximitySensorService(vrep_common::simRosReadProximitySensor::Request &req,vrep_common::simRosReadProximitySensor::Response &res)$/;"	f	class:ROS_server
simRosReadVisionSensorServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosReadVisionSensorServer;$/;"	m	class:ROS_server
simRosReadVisionSensorServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosReadVisionSensorServer;$/;"	m	class:ROS_server	file:
simRosReadVisionSensorService	src/ROS_server.cpp	/^bool ROS_server::simRosReadVisionSensorService(vrep_common::simRosReadVisionSensor::Request &req,vrep_common::simRosReadVisionSensor::Response &res)$/;"	f	class:ROS_server
simRosRemoveObjectServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosRemoveObjectServer;$/;"	m	class:ROS_server
simRosRemoveObjectServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosRemoveObjectServer;$/;"	m	class:ROS_server	file:
simRosRemoveObjectService	src/ROS_server.cpp	/^bool ROS_server::simRosRemoveObjectService(vrep_common::simRosRemoveObject::Request &req,vrep_common::simRosRemoveObject::Response &res)$/;"	f	class:ROS_server
simRosRemoveUIServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosRemoveUIServer;$/;"	m	class:ROS_server
simRosRemoveUIServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosRemoveUIServer;$/;"	m	class:ROS_server	file:
simRosRemoveUIService	src/ROS_server.cpp	/^bool ROS_server::simRosRemoveUIService(vrep_common::simRosRemoveUI::Request &req,vrep_common::simRosRemoveUI::Response &res)$/;"	f	class:ROS_server
simRosSetArrayParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetArrayParameterServer;$/;"	m	class:ROS_server
simRosSetArrayParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetArrayParameterServer;$/;"	m	class:ROS_server	file:
simRosSetArrayParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosSetArrayParameterService(vrep_common::simRosSetArrayParameter::Request &req,vrep_common::simRosSetArrayParameter::Response &res)$/;"	f	class:ROS_server
simRosSetBooleanParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetBooleanParameterServer;$/;"	m	class:ROS_server
simRosSetBooleanParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetBooleanParameterServer;$/;"	m	class:ROS_server	file:
simRosSetBooleanParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosSetBooleanParameterService(vrep_common::simRosSetBooleanParameter::Request &req,vrep_common::simRosSetBooleanParameter::Response &res)$/;"	f	class:ROS_server
simRosSetFloatSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetFloatSignalServer;$/;"	m	class:ROS_server
simRosSetFloatSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetFloatSignalServer;$/;"	m	class:ROS_server	file:
simRosSetFloatSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosSetFloatSignalService(vrep_common::simRosSetFloatSignal::Request &req,vrep_common::simRosSetFloatSignal::Response &res)$/;"	f	class:ROS_server
simRosSetFloatingParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetFloatingParameterServer;$/;"	m	class:ROS_server
simRosSetFloatingParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetFloatingParameterServer;$/;"	m	class:ROS_server	file:
simRosSetFloatingParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosSetFloatingParameterService(vrep_common::simRosSetFloatingParameter::Request &req,vrep_common::simRosSetFloatingParameter::Response &res)$/;"	f	class:ROS_server
simRosSetIntegerParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetIntegerParameterServer;$/;"	m	class:ROS_server
simRosSetIntegerParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetIntegerParameterServer;$/;"	m	class:ROS_server	file:
simRosSetIntegerParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosSetIntegerParameterService(vrep_common::simRosSetIntegerParameter::Request &req,vrep_common::simRosSetIntegerParameter::Response &res)$/;"	f	class:ROS_server
simRosSetIntegerSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetIntegerSignalServer;$/;"	m	class:ROS_server
simRosSetIntegerSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetIntegerSignalServer;$/;"	m	class:ROS_server	file:
simRosSetIntegerSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosSetIntegerSignalService(vrep_common::simRosSetIntegerSignal::Request &req,vrep_common::simRosSetIntegerSignal::Response &res)$/;"	f	class:ROS_server
simRosSetJointForceServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetJointForceServer;$/;"	m	class:ROS_server
simRosSetJointForceServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetJointForceServer;$/;"	m	class:ROS_server	file:
simRosSetJointForceService	src/ROS_server.cpp	/^bool ROS_server::simRosSetJointForceService(vrep_common::simRosSetJointForce::Request &req,vrep_common::simRosSetJointForce::Response &res)$/;"	f	class:ROS_server
simRosSetJointPositionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetJointPositionServer;$/;"	m	class:ROS_server
simRosSetJointPositionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetJointPositionServer;$/;"	m	class:ROS_server	file:
simRosSetJointPositionService	src/ROS_server.cpp	/^bool ROS_server::simRosSetJointPositionService(vrep_common::simRosSetJointPosition::Request &req,vrep_common::simRosSetJointPosition::Response &res)$/;"	f	class:ROS_server
simRosSetJointTargetPositionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetJointTargetPositionServer;$/;"	m	class:ROS_server
simRosSetJointTargetPositionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetJointTargetPositionServer;$/;"	m	class:ROS_server	file:
simRosSetJointTargetPositionService	src/ROS_server.cpp	/^bool ROS_server::simRosSetJointTargetPositionService(vrep_common::simRosSetJointTargetPosition::Request &req,vrep_common::simRosSetJointTargetPosition::Response &res)$/;"	f	class:ROS_server
simRosSetJointTargetVelocityServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetJointTargetVelocityServer;$/;"	m	class:ROS_server
simRosSetJointTargetVelocityServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetJointTargetVelocityServer;$/;"	m	class:ROS_server	file:
simRosSetJointTargetVelocityService	src/ROS_server.cpp	/^bool ROS_server::simRosSetJointTargetVelocityService(vrep_common::simRosSetJointTargetVelocity::Request &req,vrep_common::simRosSetJointTargetVelocity::Response &res)$/;"	f	class:ROS_server
simRosSetModelPropertyServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetModelPropertyServer;$/;"	m	class:ROS_server
simRosSetModelPropertyServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetModelPropertyServer;$/;"	m	class:ROS_server	file:
simRosSetModelPropertyService	src/ROS_server.cpp	/^bool ROS_server::simRosSetModelPropertyService(vrep_common::simRosSetModelProperty::Request &req,vrep_common::simRosSetModelProperty::Response &res)$/;"	f	class:ROS_server
simRosSetObjectFloatParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetObjectFloatParameterServer;$/;"	m	class:ROS_server
simRosSetObjectFloatParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetObjectFloatParameterServer;$/;"	m	class:ROS_server	file:
simRosSetObjectFloatParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosSetObjectFloatParameterService(vrep_common::simRosSetObjectFloatParameter::Request &req,vrep_common::simRosSetObjectFloatParameter::Response &res)$/;"	f	class:ROS_server
simRosSetObjectIntParameterServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetObjectIntParameterServer;$/;"	m	class:ROS_server
simRosSetObjectIntParameterServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetObjectIntParameterServer;$/;"	m	class:ROS_server	file:
simRosSetObjectIntParameterService	src/ROS_server.cpp	/^bool ROS_server::simRosSetObjectIntParameterService(vrep_common::simRosSetObjectIntParameter::Request &req,vrep_common::simRosSetObjectIntParameter::Response &res)$/;"	f	class:ROS_server
simRosSetObjectParentServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetObjectParentServer;$/;"	m	class:ROS_server
simRosSetObjectParentServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetObjectParentServer;$/;"	m	class:ROS_server	file:
simRosSetObjectParentService	src/ROS_server.cpp	/^bool ROS_server::simRosSetObjectParentService(vrep_common::simRosSetObjectParent::Request &req,vrep_common::simRosSetObjectParent::Response &res)$/;"	f	class:ROS_server
simRosSetObjectPoseServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetObjectPoseServer;$/;"	m	class:ROS_server
simRosSetObjectPoseServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetObjectPoseServer;$/;"	m	class:ROS_server	file:
simRosSetObjectPoseService	src/ROS_server.cpp	/^bool ROS_server::simRosSetObjectPoseService(vrep_common::simRosSetObjectPose::Request &req,vrep_common::simRosSetObjectPose::Response &res)$/;"	f	class:ROS_server
simRosSetObjectPositionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetObjectPositionServer;$/;"	m	class:ROS_server
simRosSetObjectPositionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetObjectPositionServer;$/;"	m	class:ROS_server	file:
simRosSetObjectPositionService	src/ROS_server.cpp	/^bool ROS_server::simRosSetObjectPositionService(vrep_common::simRosSetObjectPosition::Request &req,vrep_common::simRosSetObjectPosition::Response &res)$/;"	f	class:ROS_server
simRosSetObjectQuaternionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetObjectQuaternionServer;$/;"	m	class:ROS_server
simRosSetObjectQuaternionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetObjectQuaternionServer;$/;"	m	class:ROS_server	file:
simRosSetObjectQuaternionService	src/ROS_server.cpp	/^bool ROS_server::simRosSetObjectQuaternionService(vrep_common::simRosSetObjectQuaternion::Request &req,vrep_common::simRosSetObjectQuaternion::Response &res)$/;"	f	class:ROS_server
simRosSetObjectSelectionServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetObjectSelectionServer;$/;"	m	class:ROS_server
simRosSetObjectSelectionServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetObjectSelectionServer;$/;"	m	class:ROS_server	file:
simRosSetObjectSelectionService	src/ROS_server.cpp	/^bool ROS_server::simRosSetObjectSelectionService(vrep_common::simRosSetObjectSelection::Request &req,vrep_common::simRosSetObjectSelection::Response &res)$/;"	f	class:ROS_server
simRosSetSphericalJointMatrixServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetSphericalJointMatrixServer;$/;"	m	class:ROS_server
simRosSetSphericalJointMatrixServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetSphericalJointMatrixServer;$/;"	m	class:ROS_server	file:
simRosSetSphericalJointMatrixService	src/ROS_server.cpp	/^bool ROS_server::simRosSetSphericalJointMatrixService(vrep_common::simRosSetSphericalJointMatrix::Request &req,vrep_common::simRosSetSphericalJointMatrix::Response &res)$/;"	f	class:ROS_server
simRosSetStringSignalServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetStringSignalServer;$/;"	m	class:ROS_server
simRosSetStringSignalServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetStringSignalServer;$/;"	m	class:ROS_server	file:
simRosSetStringSignalService	src/ROS_server.cpp	/^bool ROS_server::simRosSetStringSignalService(vrep_common::simRosSetStringSignal::Request &req,vrep_common::simRosSetStringSignal::Response &res)$/;"	f	class:ROS_server
simRosSetUIButtonLabelServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetUIButtonLabelServer;$/;"	m	class:ROS_server
simRosSetUIButtonLabelServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetUIButtonLabelServer;$/;"	m	class:ROS_server	file:
simRosSetUIButtonLabelService	src/ROS_server.cpp	/^bool ROS_server::simRosSetUIButtonLabelService(vrep_common::simRosSetUIButtonLabel::Request &req,vrep_common::simRosSetUIButtonLabel::Response &res)$/;"	f	class:ROS_server
simRosSetUIButtonPropertyServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetUIButtonPropertyServer;$/;"	m	class:ROS_server
simRosSetUIButtonPropertyServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetUIButtonPropertyServer;$/;"	m	class:ROS_server	file:
simRosSetUIButtonPropertyService	src/ROS_server.cpp	/^bool ROS_server::simRosSetUIButtonPropertyService(vrep_common::simRosSetUIButtonProperty::Request &req,vrep_common::simRosSetUIButtonProperty::Response &res)$/;"	f	class:ROS_server
simRosSetUISliderServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetUISliderServer;$/;"	m	class:ROS_server
simRosSetUISliderServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetUISliderServer;$/;"	m	class:ROS_server	file:
simRosSetUISliderService	src/ROS_server.cpp	/^bool ROS_server::simRosSetUISliderService(vrep_common::simRosSetUISlider::Request &req,vrep_common::simRosSetUISlider::Response &res)$/;"	f	class:ROS_server
simRosSetVisionSensorImageServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSetVisionSensorImageServer;$/;"	m	class:ROS_server
simRosSetVisionSensorImageServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSetVisionSensorImageServer;$/;"	m	class:ROS_server	file:
simRosSetVisionSensorImageService	src/ROS_server.cpp	/^bool ROS_server::simRosSetVisionSensorImageService(vrep_common::simRosSetVisionSensorImage::Request &req,vrep_common::simRosSetVisionSensorImage::Response &res)$/;"	f	class:ROS_server
simRosStartSimulationServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosStartSimulationServer;$/;"	m	class:ROS_server
simRosStartSimulationServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosStartSimulationServer;$/;"	m	class:ROS_server	file:
simRosStartSimulationService	src/ROS_server.cpp	/^bool ROS_server::simRosStartSimulationService(vrep_common::simRosStartSimulation::Request &req,vrep_common::simRosStartSimulation::Response &res)$/;"	f	class:ROS_server
simRosStopSimulationServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosStopSimulationServer;$/;"	m	class:ROS_server
simRosStopSimulationServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosStopSimulationServer;$/;"	m	class:ROS_server	file:
simRosStopSimulationService	src/ROS_server.cpp	/^bool ROS_server::simRosStopSimulationService(vrep_common::simRosStopSimulation::Request &req,vrep_common::simRosStopSimulation::Response &res)$/;"	f	class:ROS_server
simRosSynchronousServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSynchronousServer;$/;"	m	class:ROS_server
simRosSynchronousServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSynchronousServer;$/;"	m	class:ROS_server	file:
simRosSynchronousService	src/ROS_server.cpp	/^bool ROS_server::simRosSynchronousService(vrep_common::simRosSynchronous::Request &req,vrep_common::simRosSynchronous::Response &res)$/;"	f	class:ROS_server
simRosSynchronousTriggerServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosSynchronousTriggerServer;$/;"	m	class:ROS_server
simRosSynchronousTriggerServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosSynchronousTriggerServer;$/;"	m	class:ROS_server	file:
simRosSynchronousTriggerService	src/ROS_server.cpp	/^bool ROS_server::simRosSynchronousTriggerService(vrep_common::simRosSynchronousTrigger::Request &req,vrep_common::simRosSynchronousTrigger::Response &res)$/;"	f	class:ROS_server
simRosTransferFileServer	include/vrep_plugin/ROS_server.h	/^		static ros::ServiceServer simRosTransferFileServer;$/;"	m	class:ROS_server
simRosTransferFileServer	src/ROS_server.cpp	/^ros::ServiceServer ROS_server::simRosTransferFileServer;$/;"	m	class:ROS_server	file:
simRosTransferFileService	src/ROS_server.cpp	/^bool ROS_server::simRosTransferFileService(vrep_common::simRosTransferFile::Request &req,vrep_common::simRosTransferFile::Response &res)$/;"	f	class:ROS_server
simRotateAroundAxis	src/v_repLib.cpp	/^ptrSimRotateAroundAxis simRotateAroundAxis=0;$/;"	v
simRunSimulator	src/v_repLib.cpp	/^ptrSimRunSimulator simRunSimulator=0;$/;"	v
simSaveModel	src/v_repLib.cpp	/^ptrSimSaveModel simSaveModel=0;$/;"	v
simSaveScene	src/v_repLib.cpp	/^ptrSimSaveScene simSaveScene=0;$/;"	v
simSaveUI	src/v_repLib.cpp	/^ptrSimSaveUI simSaveUI=0;$/;"	v
simScaleSelectedObjects	src/v_repLib.cpp	/^ptrSimScaleSelectedObjects simScaleSelectedObjects=0;$/;"	v
simSearchPath	src/v_repLib.cpp	/^ptrSimSearchPath simSearchPath=0;$/;"	v
simSendData	src/v_repLib.cpp	/^ptrSimSendData simSendData=0;$/;"	v
simSendModuleMessage	src/v_repLib.cpp	/^ptrSimSendModuleMessage simSendModuleMessage=0;$/;"	v
simSerialCheck	src/v_repLib.cpp	/^ptrSimSerialCheck simSerialCheck=0;$/;"	v
simSerialClose	src/v_repLib.cpp	/^ptrSimSerialClose simSerialClose=0;$/;"	v
simSerialOpen	src/v_repLib.cpp	/^ptrSimSerialOpen simSerialOpen=0;$/;"	v
simSerialPortClose	src/v_repLib.cpp	/^ptrSimSerialPortClose simSerialPortClose=0;$/;"	v
simSerialPortOpen	src/v_repLib.cpp	/^ptrSimSerialPortOpen simSerialPortOpen=0;$/;"	v
simSerialPortRead	src/v_repLib.cpp	/^ptrSimSerialPortRead simSerialPortRead=0;$/;"	v
simSerialPortSend	src/v_repLib.cpp	/^ptrSimSerialPortSend simSerialPortSend=0;$/;"	v
simSerialRead	src/v_repLib.cpp	/^ptrSimSerialRead simSerialRead=0;$/;"	v
simSerialSend	src/v_repLib.cpp	/^ptrSimSerialSend simSerialSend=0;$/;"	v
simSetArrayParameter	src/v_repLib.cpp	/^ptrSimSetArrayParameter simSetArrayParameter=0;$/;"	v
simSetBooleanParameter	src/v_repLib.cpp	/^ptrSimSetBooleanParameter simSetBooleanParameter=0;$/;"	v
simSetCollectionName	src/v_repLib.cpp	/^ptrSimSetCollectionName simSetCollectionName=0;$/;"	v
simSetConfigurationTree	src/v_repLib.cpp	/^ptrSimSetConfigurationTree simSetConfigurationTree=0;$/;"	v
simSetExplicitHandling	src/v_repLib.cpp	/^ptrSimSetExplicitHandling simSetExplicitHandling=0;$/;"	v
simSetFloatSignal	src/v_repLib.cpp	/^ptrSimSetFloatSignal simSetFloatSignal=0;$/;"	v
simSetFloatingParameter	src/v_repLib.cpp	/^ptrSimSetFloatingParameter simSetFloatingParameter=0;$/;"	v
simSetGraphUserData	src/v_repLib.cpp	/^ptrSimSetGraphUserData simSetGraphUserData=0;$/;"	v
simSetIkElementProperties	src/v_repLib.cpp	/^ptrSimSetIkElementProperties simSetIkElementProperties=0;$/;"	v
simSetIkGroupProperties	src/v_repLib.cpp	/^ptrSimSetIkGroupProperties simSetIkGroupProperties=0;$/;"	v
simSetIntegerParameter	src/v_repLib.cpp	/^ptrSimSetIntegerParameter simSetIntegerParameter=0;$/;"	v
simSetIntegerSignal	src/v_repLib.cpp	/^ptrSimSetIntegerSignal simSetIntegerSignal=0;$/;"	v
simSetJointForce	src/v_repLib.cpp	/^ptrSimSetJointForce simSetJointForce=0;$/;"	v
simSetJointInterval	src/v_repLib.cpp	/^ptrSimSetJointInterval simSetJointInterval=0;$/;"	v
simSetJointMode	src/v_repLib.cpp	/^ptrSimSetJointMode simSetJointMode=0;$/;"	v
simSetJointPosition	src/v_repLib.cpp	/^ptrSimSetJointPosition simSetJointPosition=0;$/;"	v
simSetJointTargetPosition	src/v_repLib.cpp	/^ptrSimSetJointTargetPosition simSetJointTargetPosition=0;$/;"	v
simSetJointTargetVelocity	src/v_repLib.cpp	/^ptrSimSetJointTargetVelocity simSetJointTargetVelocity=0;$/;"	v
simSetLastError	src/v_repLib.cpp	/^ptrSimSetLastError simSetLastError=0;$/;"	v
simSetLightParameters	src/v_repLib.cpp	/^ptrSimSetLightParameters simSetLightParameters=0;$/;"	v
simSetLinkDummy	src/v_repLib.cpp	/^ptrSimSetLinkDummy simSetLinkDummy=0;$/;"	v
simSetModelProperty	src/v_repLib.cpp	/^ptrSimSetModelProperty simSetModelProperty=0;$/;"	v
simSetModuleMenuItemState	src/v_repLib.cpp	/^ptrSimSetModuleMenuItemState simSetModuleMenuItemState=0;$/;"	v
simSetNameSuffix	src/v_repLib.cpp	/^ptrSimSetNameSuffix simSetNameSuffix=0;$/;"	v
simSetNavigationMode	src/v_repLib.cpp	/^ptrSimSetNavigationMode simSetNavigationMode=0;$/;"	v
simSetObjectConfiguration	src/v_repLib.cpp	/^ptrSimSetObjectConfiguration simSetObjectConfiguration=0;$/;"	v
simSetObjectFloatParameter	src/v_repLib.cpp	/^ptrSimSetObjectFloatParameter simSetObjectFloatParameter=0;$/;"	v
simSetObjectIntParameter	src/v_repLib.cpp	/^ptrSimSetObjectIntParameter simSetObjectIntParameter=0;$/;"	v
simSetObjectMatrix	src/v_repLib.cpp	/^ptrSimSetObjectMatrix simSetObjectMatrix=0;$/;"	v
simSetObjectName	src/v_repLib.cpp	/^ptrSimSetObjectName simSetObjectName=0;$/;"	v
simSetObjectOrientation	src/v_repLib.cpp	/^ptrSimSetObjectOrientation simSetObjectOrientation=0;$/;"	v
simSetObjectParent	src/v_repLib.cpp	/^ptrSimSetObjectParent simSetObjectParent=0;$/;"	v
simSetObjectPosition	src/v_repLib.cpp	/^ptrSimSetObjectPosition simSetObjectPosition=0;$/;"	v
simSetObjectProperty	src/v_repLib.cpp	/^ptrSimSetObjectProperty simSetObjectProperty=0;$/;"	v
simSetObjectQuaternion	src/v_repLib.cpp	/^ptrSimSetObjectQuaternion simSetObjectQuaternion=0;$/;"	v
simSetObjectSpecialProperty	src/v_repLib.cpp	/^ptrSimSetObjectSpecialProperty simSetObjectSpecialProperty=0;$/;"	v
simSetObjectStringParameter	src/v_repLib.cpp	/^ptrSimSetObjectStringParameter simSetObjectStringParameter=0;$/;"	v
simSetPage	src/v_repLib.cpp	/^ptrSimSetPage simSetPage=0;$/;"	v
simSetPathPosition	src/v_repLib.cpp	/^ptrSimSetPathPosition simSetPathPosition=0;$/;"	v
simSetPathTargetNominalVelocity	src/v_repLib.cpp	/^ptrSimSetPathTargetNominalVelocity simSetPathTargetNominalVelocity=0;$/;"	v
simSetScriptRawBuffer	src/v_repLib.cpp	/^ptrSimSetScriptRawBuffer simSetScriptRawBuffer=0;$/;"	v
simSetScriptSimulationParameter	src/v_repLib.cpp	/^ptrSimSetScriptSimulationParameter simSetScriptSimulationParameter=0;$/;"	v
simSetScriptText	src/v_repLib.cpp	/^ptrSimSetScriptText simSetScriptText=0;$/;"	v
simSetShapeColor	src/v_repLib.cpp	/^ptrSimSetShapeColor simSetShapeColor=0;$/;"	v
simSetSimulationPassesPerRenderingPass	src/v_repLib.cpp	/^ptrSimSetSimulationPassesPerRenderingPass simSetSimulationPassesPerRenderingPass=0;$/;"	v
simSetSimulationTimeStep	src/v_repLib.cpp	/^ptrSimSetSimulationTimeStep simSetSimulationTimeStep=0;$/;"	v
simSetSphericalJointMatrix	src/v_repLib.cpp	/^ptrSimSetSphericalJointMatrix simSetSphericalJointMatrix=0;$/;"	v
simSetStringSignal	src/v_repLib.cpp	/^ptrSimSetStringSignal simSetStringSignal=0;$/;"	v
simSetThreadIsFree	src/v_repLib.cpp	/^ptrSimSetThreadIsFree simSetThreadIsFree=0;$/;"	v
simSetUIButtonArrayColor	src/v_repLib.cpp	/^ptrSimSetUIButtonArrayColor simSetUIButtonArrayColor=0;$/;"	v
simSetUIButtonColor	src/v_repLib.cpp	/^ptrSimSetUIButtonColor simSetUIButtonColor=0;$/;"	v
simSetUIButtonLabel	src/v_repLib.cpp	/^ptrSimSetUIButtonLabel simSetUIButtonLabel=0;$/;"	v
simSetUIButtonProperty	src/v_repLib.cpp	/^ptrSimSetUIButtonProperty simSetUIButtonProperty=0;$/;"	v
simSetUIButtonTexture	src/v_repLib.cpp	/^ptrSimSetUIButtonTexture simSetUIButtonTexture=0;$/;"	v
simSetUIPosition	src/v_repLib.cpp	/^ptrSimSetUIPosition simSetUIPosition=0;$/;"	v
simSetUIProperty	src/v_repLib.cpp	/^ptrSimSetUIProperty simSetUIProperty=0;$/;"	v
simSetUISlider	src/v_repLib.cpp	/^ptrSimSetUISlider simSetUISlider=0;$/;"	v
simSetVisionSensorImage	src/v_repLib.cpp	/^ptrSimSetVisionSensorImage simSetVisionSensorImage=0;$/;"	v
simStartSimulation	src/v_repLib.cpp	/^ptrSimStartSimulation simStartSimulation=0;$/;"	v
simStopSimulation	src/v_repLib.cpp	/^ptrSimStopSimulation simStopSimulation=0;$/;"	v
simTransformVector	src/v_repLib.cpp	/^ptrSimTransformVector simTransformVector=0;$/;"	v
simTubeClose	src/v_repLib.cpp	/^ptrSimTubeClose simTubeClose=0;$/;"	v
simTubeOpen	src/v_repLib.cpp	/^ptrSimTubeOpen simTubeOpen=0;$/;"	v
simTubeRead	src/v_repLib.cpp	/^ptrSimTubeRead simTubeRead=0;$/;"	v
simTubeStatus	src/v_repLib.cpp	/^ptrSimTubeStatus simTubeStatus=0;$/;"	v
simTubeWrite	src/v_repLib.cpp	/^ptrSimTubeWrite simTubeWrite=0;$/;"	v
simUChar	include/v_repLib.h	/^typedef unsigned char simUChar;$/;"	t
simUnloadModule	src/v_repLib.cpp	/^ptrSimUnloadModule simUnloadModule=0;$/;"	v
simVoid	include/v_repLib.h	/^typedef void simVoid;$/;"	t
sim_api_errormessage_ignore	include/v_repConst.h	/^	sim_api_errormessage_ignore	=0,	\/* does not memorize nor output errors *\/$/;"	e	enum:__anon17
sim_api_errormessage_output	include/v_repConst.h	/^	sim_api_errormessage_output	=2  \/* memorizes and outputs errors (default for Lua-API calls) *\/$/;"	e	enum:__anon17
sim_api_errormessage_report	include/v_repConst.h	/^	sim_api_errormessage_report	=1,	\/* memorizes errors (default for C-API calls) *\/$/;"	e	enum:__anon17
sim_appobj_RESERVED_type	include/v_repConst.h	/^	sim_appobj_RESERVED_type,$/;"	e	enum:__anon2
sim_appobj_collection_type	include/v_repConst.h	/^	sim_appobj_collection_type,$/;"	e	enum:__anon2
sim_appobj_collision_type	include/v_repConst.h	/^	sim_appobj_collision_type,$/;"	e	enum:__anon2
sim_appobj_constraintsolver_type	include/v_repConst.h	/^	sim_appobj_constraintsolver_type,$/;"	e	enum:__anon2
sim_appobj_distance_type	include/v_repConst.h	/^	sim_appobj_distance_type,$/;"	e	enum:__anon2
sim_appobj_ik_type	include/v_repConst.h	/^	sim_appobj_ik_type,$/;"	e	enum:__anon2
sim_appobj_object_type	include/v_repConst.h	/^	sim_appobj_object_type=sim_object_type_end+1,$/;"	e	enum:__anon2
sim_appobj_pathplanning_type	include/v_repConst.h	/^	sim_appobj_pathplanning_type,$/;"	e	enum:__anon2
sim_appobj_script_type	include/v_repConst.h	/^	sim_appobj_script_type,$/;"	e	enum:__anon2
sim_appobj_simulation_type	include/v_repConst.h	/^	sim_appobj_simulation_type,$/;"	e	enum:__anon2
sim_appobj_texture_type	include/v_repConst.h	/^	sim_appobj_texture_type$/;"	e	enum:__anon2
sim_appobj_ui_type	include/v_repConst.h	/^	sim_appobj_ui_type,$/;"	e	enum:__anon2
sim_arrayparam_ambient_light	include/v_repConst.h	/^	sim_arrayparam_ambient_light$/;"	e	enum:__anon31
sim_arrayparam_background_color1	include/v_repConst.h	/^	sim_arrayparam_background_color1,$/;"	e	enum:__anon31
sim_arrayparam_background_color2	include/v_repConst.h	/^	sim_arrayparam_background_color2,$/;"	e	enum:__anon31
sim_arrayparam_fog	include/v_repConst.h	/^	sim_arrayparam_fog,$/;"	e	enum:__anon31
sim_arrayparam_fog_color	include/v_repConst.h	/^	sim_arrayparam_fog_color,$/;"	e	enum:__anon31
sim_arrayparam_gravity	include/v_repConst.h	/^	sim_arrayparam_gravity=0,$/;"	e	enum:__anon31
sim_banner_backfaceculling	include/v_repConst.h	/^	sim_banner_backfaceculling			=0x00200, \/* If specified, the banner will only be visible from one side *\/$/;"	e	enum:__anon24
sim_banner_bitmapfont	include/v_repConst.h	/^	sim_banner_bitmapfont				=0x00800 \/* If specified, a fixed-size bitmap font is used. The text will also always fully face the camera and be right to the specified position. Bitmap fonts are not clickable *\/$/;"	e	enum:__anon24
sim_banner_clickselectsparent	include/v_repConst.h	/^	sim_banner_clickselectsparent		=0x00020, \/* if the object is associated with a scene object, then clicking the banner will select the scene object *\/$/;"	e	enum:__anon24
sim_banner_clicktriggersevent	include/v_repConst.h	/^	sim_banner_clicktriggersevent		=0x00040, \/* if the banner is clicked, an event is triggered (sim_message_eventcallback_bannerclicked and sim_message_bannerclicked are generated) *\/$/;"	e	enum:__anon24
sim_banner_facingcamera	include/v_repConst.h	/^	sim_banner_facingcamera				=0x00080, \/* If specified, the banner will always face the camera by rotating around the banner's vertical axis (y-axis) *\/$/;"	e	enum:__anon24
sim_banner_followparentvisibility	include/v_repConst.h	/^	sim_banner_followparentvisibility	=0x00010, \/* if the object is associated with a scene object, then it follows that visibility, otherwise it is always visible *\/$/;"	e	enum:__anon24
sim_banner_fullyfacingcamera	include/v_repConst.h	/^	sim_banner_fullyfacingcamera		=0x00100, \/* If specified, the banner will always fully face the camera (the banner's orientation is same as the camera looking at it) *\/$/;"	e	enum:__anon24
sim_banner_keepsamesize	include/v_repConst.h	/^	sim_banner_keepsamesize				=0x00400, \/* If specified, the banner will always appear in the same size. In that case size represents the character height in pixels *\/$/;"	e	enum:__anon24
sim_banner_left	include/v_repConst.h	/^	sim_banner_left						=0x00001, \/* Banners display on the left of the specified point *\/$/;"	e	enum:__anon24
sim_banner_nobackground	include/v_repConst.h	/^	sim_banner_nobackground				=0x00004, \/* Banners have no background rectangle *\/$/;"	e	enum:__anon24
sim_banner_overlay	include/v_repConst.h	/^	sim_banner_overlay					=0x00008, \/* When specified, banners are always drawn on top of "regular objects" *\/$/;"	e	enum:__anon24
sim_banner_right	include/v_repConst.h	/^	sim_banner_right					=0x00002, \/* Banners display on the right of the specified point *\/$/;"	e	enum:__anon24
sim_boolparam_browser_visible	include/v_repConst.h	/^	sim_boolparam_browser_visible,$/;"	e	enum:__anon27
sim_boolparam_collision_handling_enabled	include/v_repConst.h	/^	sim_boolparam_collision_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_console_visible	include/v_repConst.h	/^	sim_boolparam_console_visible,$/;"	e	enum:__anon27
sim_boolparam_display_enabled	include/v_repConst.h	/^	sim_boolparam_display_enabled,$/;"	e	enum:__anon27
sim_boolparam_distance_handling_enabled	include/v_repConst.h	/^	sim_boolparam_distance_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_dynamics_handling_enabled	include/v_repConst.h	/^	sim_boolparam_dynamics_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_fog_enabled	include/v_repConst.h	/^	sim_boolparam_fog_enabled,$/;"	e	enum:__anon27
sim_boolparam_gcs_handling_enabled	include/v_repConst.h	/^	sim_boolparam_gcs_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_hierarchy_visible	include/v_repConst.h	/^	sim_boolparam_hierarchy_visible=0,$/;"	e	enum:__anon27
sim_boolparam_ik_handling_enabled	include/v_repConst.h	/^	sim_boolparam_ik_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_infotext_visible	include/v_repConst.h	/^	sim_boolparam_infotext_visible,$/;"	e	enum:__anon27
sim_boolparam_joint_motion_handling_enabled	include/v_repConst.h	/^	sim_boolparam_joint_motion_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_mill_handling_enabled	include/v_repConst.h	/^	sim_boolparam_mill_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_path_motion_handling_enabled	include/v_repConst.h	/^	sim_boolparam_path_motion_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_proximity_sensor_handling_enabled	include/v_repConst.h	/^	sim_boolparam_proximity_sensor_handling_enabled,$/;"	e	enum:__anon27
sim_boolparam_rml2_available	include/v_repConst.h	/^	sim_boolparam_rml2_available,$/;"	e	enum:__anon27
sim_boolparam_rml4_available	include/v_repConst.h	/^	sim_boolparam_rml4_available$/;"	e	enum:__anon27
sim_boolparam_scene_and_model_load_messages	include/v_repConst.h	/^	sim_boolparam_scene_and_model_load_messages,$/;"	e	enum:__anon27
sim_boolparam_shape_textures_are_visible	include/v_repConst.h	/^	sim_boolparam_shape_textures_are_visible,$/;"	e	enum:__anon27
sim_boolparam_statustext_open	include/v_repConst.h	/^	sim_boolparam_statustext_open,$/;"	e	enum:__anon27
sim_boolparam_vision_sensor_handling_enabled	include/v_repConst.h	/^	sim_boolparam_vision_sensor_handling_enabled,$/;"	e	enum:__anon27
sim_buttonproperty_borderless	include/v_repConst.h	/^	sim_buttonproperty_borderless			=0x0020,$/;"	e	enum:__anon13
sim_buttonproperty_button	include/v_repConst.h	/^	sim_buttonproperty_button				=0x0000,$/;"	e	enum:__anon13
sim_buttonproperty_closeaction	include/v_repConst.h	/^	sim_buttonproperty_closeaction			=0x1000,$/;"	e	enum:__anon13
sim_buttonproperty_downupevent	include/v_repConst.h	/^	sim_buttonproperty_downupevent			=0x4000$/;"	e	enum:__anon13
sim_buttonproperty_editbox	include/v_repConst.h	/^	sim_buttonproperty_editbox				=0x0003,$/;"	e	enum:__anon13
sim_buttonproperty_enabled	include/v_repConst.h	/^	sim_buttonproperty_enabled				=0x0010,$/;"	e	enum:__anon13
sim_buttonproperty_horizontallycentered	include/v_repConst.h	/^	sim_buttonproperty_horizontallycentered	=0x0040,$/;"	e	enum:__anon13
sim_buttonproperty_ignoremouse	include/v_repConst.h	/^	sim_buttonproperty_ignoremouse			=0x0080,$/;"	e	enum:__anon13
sim_buttonproperty_isdown	include/v_repConst.h	/^	sim_buttonproperty_isdown				=0x0100,$/;"	e	enum:__anon13
sim_buttonproperty_label	include/v_repConst.h	/^	sim_buttonproperty_label				=0x0001,$/;"	e	enum:__anon13
sim_buttonproperty_nobackgroundcolor	include/v_repConst.h	/^	sim_buttonproperty_nobackgroundcolor	=0x0400,$/;"	e	enum:__anon13
sim_buttonproperty_rollupaction	include/v_repConst.h	/^	sim_buttonproperty_rollupaction			=0x0800,$/;"	e	enum:__anon13
sim_buttonproperty_slider	include/v_repConst.h	/^	sim_buttonproperty_slider				=0x0002,$/;"	e	enum:__anon13
sim_buttonproperty_staydown	include/v_repConst.h	/^	sim_buttonproperty_staydown				=0x0008,$/;"	e	enum:__anon13
sim_buttonproperty_transparent	include/v_repConst.h	/^	sim_buttonproperty_transparent			=0x0200,$/;"	e	enum:__anon13
sim_buttonproperty_verticallycentered	include/v_repConst.h	/^	sim_buttonproperty_verticallycentered	=0x2000,$/;"	e	enum:__anon13
sim_distcalcmethod_dac	include/v_repConst.h	/^	sim_distcalcmethod_dac,$/;"	e	enum:__anon19
sim_distcalcmethod_dac_if_nonzero	include/v_repConst.h	/^	sim_distcalcmethod_dac_if_nonzero$/;"	e	enum:__anon19
sim_distcalcmethod_dl	include/v_repConst.h	/^	sim_distcalcmethod_dl=0,$/;"	e	enum:__anon19
sim_distcalcmethod_dl_and_dac	include/v_repConst.h	/^	sim_distcalcmethod_dl_and_dac,$/;"	e	enum:__anon19
sim_distcalcmethod_dl_if_nonzero	include/v_repConst.h	/^	sim_distcalcmethod_dl_if_nonzero,$/;"	e	enum:__anon19
sim_distcalcmethod_max_dl_dac	include/v_repConst.h	/^	sim_distcalcmethod_max_dl_dac,$/;"	e	enum:__anon19
sim_distcalcmethod_sqrt_dl2_and_dac2	include/v_repConst.h	/^	sim_distcalcmethod_sqrt_dl2_and_dac2,$/;"	e	enum:__anon19
sim_dlgret_cancel	include/v_repConst.h	/^	sim_dlgret_cancel,$/;"	e	enum:__anon21
sim_dlgret_no	include/v_repConst.h	/^	sim_dlgret_no$/;"	e	enum:__anon21
sim_dlgret_ok	include/v_repConst.h	/^	sim_dlgret_ok,$/;"	e	enum:__anon21
sim_dlgret_still_open	include/v_repConst.h	/^	sim_dlgret_still_open=0,$/;"	e	enum:__anon21
sim_dlgret_yes	include/v_repConst.h	/^	sim_dlgret_yes,$/;"	e	enum:__anon21
sim_dlgstyle_dont_center	include/v_repConst.h	/^	sim_dlgstyle_dont_center	=32 \/* can be combined with one of above values. Only with this flag can the position of the related UI be set just after dialog creation  *\/$/;"	e	enum:__anon20
sim_dlgstyle_input	include/v_repConst.h	/^	sim_dlgstyle_input,$/;"	e	enum:__anon20
sim_dlgstyle_message	include/v_repConst.h	/^	sim_dlgstyle_message		=0,$/;"	e	enum:__anon20
sim_dlgstyle_ok	include/v_repConst.h	/^	sim_dlgstyle_ok,$/;"	e	enum:__anon20
sim_dlgstyle_ok_cancel	include/v_repConst.h	/^	sim_dlgstyle_ok_cancel,$/;"	e	enum:__anon20
sim_dlgstyle_yes_no	include/v_repConst.h	/^	sim_dlgstyle_yes_no,$/;"	e	enum:__anon20
sim_drawing_12percenttransparency	include/v_repConst.h	/^	sim_drawing_12percenttransparency	=0x08000, \/* the drawing object will be 12.5% transparent *\/$/;"	e	enum:__anon23
sim_drawing_25percenttransparency	include/v_repConst.h	/^	sim_drawing_25percenttransparency	=0x04000, \/* the drawing object will be 25% transparent *\/$/;"	e	enum:__anon23
sim_drawing_50percenttransparency	include/v_repConst.h	/^	sim_drawing_50percenttransparency	=0x02000, \/* the drawing object will be 50% transparent *\/$/;"	e	enum:__anon23
sim_drawing_backfaceculling	include/v_repConst.h	/^	sim_drawing_backfaceculling			=0x00100, \/* back faces are not displayed for all items *\/$/;"	e	enum:__anon23
sim_drawing_cubepoints	include/v_repConst.h	/^	sim_drawing_cubepoints,			\/* 6 values per point (3 for cube position, 3 for cube normal vector) (cube size in meters) *\/$/;"	e	enum:__anon23
sim_drawing_cyclic	include/v_repConst.h	/^	sim_drawing_cyclic					=0x01000, \/* if the max item count was reached, then the first items are overwritten. *\/$/;"	e	enum:__anon23
sim_drawing_discpoints	include/v_repConst.h	/^	sim_drawing_discpoints,			\/* 6 values per point (3 for disc position, 3 for disc normal vector) (disc size in meters) *\/$/;"	e	enum:__anon23
sim_drawing_emissioncolor	include/v_repConst.h	/^	sim_drawing_emissioncolor			=0x10000, \/* When used in combination with sim_drawing_itemcolors or sim_drawing_vertexcolors, then the specified colors will be for the emissive component *\/$/;"	e	enum:__anon23
sim_drawing_facingcamera	include/v_repConst.h	/^	sim_drawing_facingcamera			=0x20000, \/* Only for trianglepoints, quadpoints, discpoints and cubepoints. If specified, the normal verctor is calculated to face the camera (each item data requires 3 values less) *\/$/;"	e	enum:__anon23
sim_drawing_followparentvisibility	include/v_repConst.h	/^	sim_drawing_followparentvisibility	=0x00800, \/* if the object is associated with a scene object, then it follows that visibility, otherwise it is always visible *\/$/;"	e	enum:__anon23
sim_drawing_itemcolors	include/v_repConst.h	/^	sim_drawing_itemcolors				=0x00020, \/* +3 values per item (each item has its own ambient color (r,g,b values)). Mutually exclusive with sim_drawing_vertexcolors *\/$/;"	e	enum:__anon23
sim_drawing_itemsizes	include/v_repConst.h	/^	sim_drawing_itemsizes				=0x00080, \/* +1 value per item (each item has its own size). Not for sim_drawing_triangles *\/$/;"	e	enum:__anon23
sim_drawing_itemtransparency	include/v_repConst.h	/^	sim_drawing_itemtransparency		=0x80000  \/* +1 value per item (each item has its own transparency value (0-1)). Not compatible with sim_drawing_vertexcolors *\/$/;"	e	enum:__anon23
sim_drawing_lines	include/v_repConst.h	/^	sim_drawing_lines,				\/* 6 values per line (line size in pixels) *\/$/;"	e	enum:__anon23
sim_drawing_overlay	include/v_repConst.h	/^	sim_drawing_overlay					=0x40000, \/* When specified, objects are always drawn on top of "regular objects" *\/$/;"	e	enum:__anon23
sim_drawing_painttag	include/v_repConst.h	/^	sim_drawing_painttag				=0x00400, \/* all items are tagged as paint (for additinal processing at a later stage) *\/$/;"	e	enum:__anon23
sim_drawing_points	include/v_repConst.h	/^	sim_drawing_points=0,			\/* 3 values per point (point size in pixels) *\/$/;"	e	enum:__anon23
sim_drawing_quadpoints	include/v_repConst.h	/^	sim_drawing_quadpoints,			\/* 6 values per point (3 for quad position, 3 for quad normal vector) (quad size in meters) *\/$/;"	e	enum:__anon23
sim_drawing_spherepoints	include/v_repConst.h	/^	sim_drawing_spherepoints,			\/* 3 values per point (sphere size in meters) *\/$/;"	e	enum:__anon23
sim_drawing_trianglepoints	include/v_repConst.h	/^	sim_drawing_trianglepoints,		\/* 6 values per point (3 for triangle position, 3 for triangle normal vector) (triangle size in meters) *\/$/;"	e	enum:__anon23
sim_drawing_triangles	include/v_repConst.h	/^	sim_drawing_triangles,			\/* 9 values per triangle *\/$/;"	e	enum:__anon23
sim_drawing_vertexcolors	include/v_repConst.h	/^	sim_drawing_vertexcolors			=0x00040, \/* +3 values per vertex (each vertex has its own ambient color (r,g,b values). Only for sim_drawing_lines (+6) and for sim_drawing_triangles(+9)). Mutually exclusive with sim_drawing_itemcolors *\/$/;"	e	enum:__anon23
sim_drawing_wireframe	include/v_repConst.h	/^	sim_drawing_wireframe				=0x00200, \/* all items displayed in wireframe *\/$/;"	e	enum:__anon23
sim_floatparam_rand	include/v_repConst.h	/^	sim_floatparam_rand=0 \/* random value (0.0-1.0) *\/$/;"	e	enum:__anon29
sim_gui_all	include/v_repConst.h	/^	sim_gui_all							=0xffff$/;"	e	enum:__anon32
sim_gui_browser	include/v_repConst.h	/^	sim_gui_browser						=0x0400,$/;"	e	enum:__anon32
sim_gui_dialogs	include/v_repConst.h	/^	sim_gui_dialogs						=0x0200,$/;"	e	enum:__anon32
sim_gui_hierarchy	include/v_repConst.h	/^	sim_gui_hierarchy					=0x0010,$/;"	e	enum:__anon32
sim_gui_infobar	include/v_repConst.h	/^	sim_gui_infobar						=0x0020,$/;"	e	enum:__anon32
sim_gui_menubar	include/v_repConst.h	/^	sim_gui_menubar						=0x0001,$/;"	e	enum:__anon32
sim_gui_popups	include/v_repConst.h	/^	sim_gui_popups						=0x0002,$/;"	e	enum:__anon32
sim_gui_scripteditor	include/v_repConst.h	/^	sim_gui_scripteditor				=0x0080,$/;"	e	enum:__anon32
sim_gui_scriptsimulationparameters	include/v_repConst.h	/^	sim_gui_scriptsimulationparameters	=0x0100,$/;"	e	enum:__anon32
sim_gui_statusbar	include/v_repConst.h	/^	sim_gui_statusbar					=0x0040,$/;"	e	enum:__anon32
sim_gui_toolbar1	include/v_repConst.h	/^	sim_gui_toolbar1					=0x0004,$/;"	e	enum:__anon32
sim_gui_toolbar2	include/v_repConst.h	/^	sim_gui_toolbar2					=0x0008,$/;"	e	enum:__anon32
sim_handle_all	include/v_repConst.h	/^	sim_handle_all						=-2,$/;"	e	enum:__anon18
sim_handle_all_except_explicit	include/v_repConst.h	/^	sim_handle_all_except_explicit		=-3,$/;"	e	enum:__anon18
sim_handle_all_except_self	include/v_repConst.h	/^	sim_handle_all_except_self			=-10,$/;"	e	enum:__anon18
sim_handle_chain	include/v_repConst.h	/^	sim_handle_chain					=-7,$/;"	e	enum:__anon18
sim_handle_default	include/v_repConst.h	/^	sim_handle_default					=-9,$/;"	e	enum:__anon18
sim_handle_main_script	include/v_repConst.h	/^	sim_handle_main_script				=-5,$/;"	e	enum:__anon18
sim_handle_parent	include/v_repConst.h	/^	sim_handle_parent					=-11$/;"	e	enum:__anon18
sim_handle_self	include/v_repConst.h	/^	sim_handle_self						=-4,$/;"	e	enum:__anon18
sim_handle_single	include/v_repConst.h	/^	sim_handle_single					=-8,$/;"	e	enum:__anon18
sim_handle_tree	include/v_repConst.h	/^	sim_handle_tree						=-6,$/;"	e	enum:__anon18
sim_ik_alpha_beta_constraint	include/v_repConst.h	/^		sim_ik_alpha_beta_constraint=8,$/;"	e	enum:__anon4
sim_ik_avoidance_constraint	include/v_repConst.h	/^		sim_ik_avoidance_constraint=64$/;"	e	enum:__anon4
sim_ik_damped_least_squares_method	include/v_repConst.h	/^		sim_ik_damped_least_squares_method,$/;"	e	enum:__anon3
sim_ik_gamma_constraint	include/v_repConst.h	/^		sim_ik_gamma_constraint=16,$/;"	e	enum:__anon4
sim_ik_jacobian_transpose_method	include/v_repConst.h	/^		sim_ik_jacobian_transpose_method$/;"	e	enum:__anon3
sim_ik_pseudo_inverse_method	include/v_repConst.h	/^		sim_ik_pseudo_inverse_method=0,$/;"	e	enum:__anon3
sim_ik_x_constraint	include/v_repConst.h	/^		sim_ik_x_constraint=1,$/;"	e	enum:__anon4
sim_ik_y_constraint	include/v_repConst.h	/^		sim_ik_y_constraint=2,$/;"	e	enum:__anon4
sim_ik_z_constraint	include/v_repConst.h	/^		sim_ik_z_constraint=4,$/;"	e	enum:__anon4
sim_ikresult_fail	include/v_repConst.h	/^	sim_ikresult_fail$/;"	e	enum:__anon5
sim_ikresult_not_performed	include/v_repConst.h	/^	sim_ikresult_not_performed=0,$/;"	e	enum:__anon5
sim_ikresult_success	include/v_repConst.h	/^	sim_ikresult_success,$/;"	e	enum:__anon5
sim_intparam_compilation_version	include/v_repConst.h	/^	sim_intparam_compilation_version, \/* 0=evaluation version, 1=full version, 2=player version. Can only be read *\/$/;"	e	enum:__anon28
sim_intparam_current_page	include/v_repConst.h	/^	sim_intparam_current_page,$/;"	e	enum:__anon28
sim_intparam_custom_cmd_start_id	include/v_repConst.h	/^	sim_intparam_custom_cmd_start_id, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_dynamic_engine	include/v_repConst.h	/^	sim_intparam_dynamic_engine, \/* 0=Bullet, 1=ODE. Can only be read *\/$/;"	e	enum:__anon28
sim_intparam_dynamic_step_divider	include/v_repConst.h	/^	sim_intparam_dynamic_step_divider, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_edit_mode_type	include/v_repConst.h	/^	sim_intparam_edit_mode_type, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_error_report_mode	include/v_repConst.h	/^	sim_intparam_error_report_mode=0, \/* Check sim_api_errormessage_... constants above for valid values *\/$/;"	e	enum:__anon28
sim_intparam_event_flags_read	include/v_repConst.h	/^	sim_intparam_event_flags_read, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_event_flags_read_clear	include/v_repConst.h	/^	sim_intparam_event_flags_read_clear, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_flymode_camera_handle	include/v_repConst.h	/^	sim_intparam_flymode_camera_handle, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_infotext_style	include/v_repConst.h	/^	sim_intparam_infotext_style,$/;"	e	enum:__anon28
sim_intparam_instance_count	include/v_repConst.h	/^	sim_intparam_instance_count,	\/* do not use anymore (always returns 1 since V-REP 2.5.11) *\/$/;"	e	enum:__anon28
sim_intparam_platform	include/v_repConst.h	/^	sim_intparam_platform, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_program_version	include/v_repConst.h	/^	sim_intparam_program_version,		\/* e.g Version 2.1.4 --> 20104. Can only be read *\/$/;"	e	enum:__anon28
sim_intparam_qt_version	include/v_repConst.h	/^	sim_intparam_qt_version, \/* version of the used Qt framework *\/$/;"	e	enum:__anon28
sim_intparam_scene_unique_id	include/v_repConst.h	/^	sim_intparam_scene_unique_id \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_server_port_next	include/v_repConst.h	/^	sim_intparam_server_port_next, \/* is initialized at sim_intparam_server_port_start *\/$/;"	e	enum:__anon28
sim_intparam_server_port_range	include/v_repConst.h	/^	sim_intparam_server_port_range, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_server_port_start	include/v_repConst.h	/^	sim_intparam_server_port_start, \/* can only be read *\/$/;"	e	enum:__anon28
sim_intparam_settings	include/v_repConst.h	/^	sim_intparam_settings,$/;"	e	enum:__anon28
sim_intparam_visible_layers	include/v_repConst.h	/^	sim_intparam_visible_layers,$/;"	e	enum:__anon28
sim_joint_prismatic_subtype	include/v_repConst.h	/^		sim_joint_prismatic_subtype,$/;"	e	enum:__anon6
sim_joint_revolute_subtype	include/v_repConst.h	/^		sim_joint_revolute_subtype=10,$/;"	e	enum:__anon6
sim_joint_spherical_subtype	include/v_repConst.h	/^		sim_joint_spherical_subtype,$/;"	e	enum:__anon6
sim_jointmode_dependent	include/v_repConst.h	/^	sim_jointmode_dependent,$/;"	e	enum:__anon33
sim_jointmode_force	include/v_repConst.h	/^	sim_jointmode_force$/;"	e	enum:__anon33
sim_jointmode_ik	include/v_repConst.h	/^	sim_jointmode_ik,$/;"	e	enum:__anon33
sim_jointmode_ikdependent	include/v_repConst.h	/^	sim_jointmode_ikdependent,$/;"	e	enum:__anon33
sim_jointmode_motion	include/v_repConst.h	/^	sim_jointmode_motion,$/;"	e	enum:__anon33
sim_jointmode_passive	include/v_repConst.h	/^	sim_jointmode_passive=0,$/;"	e	enum:__anon33
sim_light_directional_subtype	include/v_repConst.h	/^		sim_light_directional_subtype,$/;"	e	enum:__anon6
sim_light_omnidirectional_subtype	include/v_repConst.h	/^		sim_light_omnidirectional_subtype=1,$/;"	e	enum:__anon6
sim_light_spot_subtype	include/v_repConst.h	/^		sim_light_spot_subtype,$/;"	e	enum:__anon6
sim_lua_arg_bool	include/v_repConst.h	/^	sim_lua_arg_bool,		$/;"	e	enum:__anon11
sim_lua_arg_float	include/v_repConst.h	/^	sim_lua_arg_float,$/;"	e	enum:__anon11
sim_lua_arg_int	include/v_repConst.h	/^	sim_lua_arg_int,$/;"	e	enum:__anon11
sim_lua_arg_invalid	include/v_repConst.h	/^	sim_lua_arg_invalid,$/;"	e	enum:__anon11
sim_lua_arg_nil	include/v_repConst.h	/^	sim_lua_arg_nil=0,			$/;"	e	enum:__anon11
sim_lua_arg_string	include/v_repConst.h	/^	sim_lua_arg_string,$/;"	e	enum:__anon11
sim_lua_arg_table	include/v_repConst.h	/^	sim_lua_arg_table=8$/;"	e	enum:__anon11
sim_message_bannerclicked	include/v_repConst.h	/^		sim_message_bannerclicked,				\/* a banner was clicked (aux[0]=banner ID) *\/$/;"	e	enum:__anon9
sim_message_eventcallback_abouttoredo	include/v_repConst.h	/^		sim_message_eventcallback_abouttoredo,		\/* the redo button was hit and a future state is about to be restored  *\/$/;"	e	enum:__anon9
sim_message_eventcallback_abouttoundo	include/v_repConst.h	/^		sim_message_eventcallback_abouttoundo,		\/* the undo button was hit and a previous state is about to be restored *\/$/;"	e	enum:__anon9
sim_message_eventcallback_bannerclicked	include/v_repConst.h	/^		sim_message_eventcallback_bannerclicked, \/* called when a banner was clicked (aux[0]=banner ID) *\/$/;"	e	enum:__anon9
sim_message_eventcallback_broadcast	include/v_repConst.h	/^		sim_message_eventcallback_broadcast,$/;"	e	enum:__anon9
sim_message_eventcallback_guipass	include/v_repConst.h	/^		sim_message_eventcallback_guipass,$/;"	e	enum:__anon9
sim_message_eventcallback_imagefilter_adjustparams	include/v_repConst.h	/^		sim_message_eventcallback_imagefilter_adjustparams,$/;"	e	enum:__anon9
sim_message_eventcallback_imagefilter_enumerate	include/v_repConst.h	/^		sim_message_eventcallback_imagefilter_enumerate,$/;"	e	enum:__anon9
sim_message_eventcallback_imagefilter_enumreset	include/v_repConst.h	/^		sim_message_eventcallback_imagefilter_enumreset,$/;"	e	enum:__anon9
sim_message_eventcallback_imagefilter_process	include/v_repConst.h	/^		sim_message_eventcallback_imagefilter_process,$/;"	e	enum:__anon9
sim_message_eventcallback_imagefilter_reserved	include/v_repConst.h	/^		sim_message_eventcallback_imagefilter_reserved,$/;"	e	enum:__anon9
sim_message_eventcallback_instancepass	include/v_repConst.h	/^		sim_message_eventcallback_instancepass,				\/* Called once every main application loop pass. auxiliaryData[0] contains event flags of events that happened since last time: *\/$/;"	e	enum:__anon9
sim_message_eventcallback_instanceswitch	include/v_repConst.h	/^		sim_message_eventcallback_instanceswitch,$/;"	e	enum:__anon9
sim_message_eventcallback_keypress	include/v_repConst.h	/^		sim_message_eventcallback_keypress,			\/* a key was pressed while the focus was on a page (aux[0]=key, aux[1]=ctrl and shift key state) *\/$/;"	e	enum:__anon9
sim_message_eventcallback_mainscriptabouttobecalled	include/v_repConst.h	/^		sim_message_eventcallback_mainscriptabouttobecalled,$/;"	e	enum:__anon9
sim_message_eventcallback_menuitemselected	include/v_repConst.h	/^		sim_message_eventcallback_menuitemselected, \/* auxiliaryData[0] indicates the handle of the item, auxiliaryData[1] indicates the state of the item *\/$/;"	e	enum:__anon9
sim_message_eventcallback_modelloaded	include/v_repConst.h	/^		sim_message_eventcallback_modelloaded,$/;"	e	enum:__anon9
sim_message_eventcallback_modelsave	include/v_repConst.h	/^		sim_message_eventcallback_modelsave,				\/* about to save a model (current selection will be saved) *\/$/;"	e	enum:__anon9
sim_message_eventcallback_moduleclose	include/v_repConst.h	/^		sim_message_eventcallback_moduleclose,				\/* called when simCloseModule in Lua is called *\/$/;"	e	enum:__anon9
sim_message_eventcallback_modulehandle	include/v_repConst.h	/^		sim_message_eventcallback_modulehandle,				\/* called when simHandleModule in Lua is called with argument false *\/$/;"	e	enum:__anon9
sim_message_eventcallback_modulehandleinsensingpart	include/v_repConst.h	/^		sim_message_eventcallback_modulehandleinsensingpart, \/* called when simHandleModule in Lua is called with argument true *\/$/;"	e	enum:__anon9
sim_message_eventcallback_moduleopen	include/v_repConst.h	/^		sim_message_eventcallback_moduleopen,				\/* called when simOpenModule in Lua is called *\/$/;"	e	enum:__anon9
sim_message_eventcallback_redoperformed	include/v_repConst.h	/^		sim_message_eventcallback_redoperformed,	\/* the redo button was hit and a future state restored  *\/$/;"	e	enum:__anon9
sim_message_eventcallback_refreshdialogs	include/v_repConst.h	/^		sim_message_eventcallback_refreshdialogs, \/* aux[0]=refresh degree (0=light, 1=medium, 2=full) *\/$/;"	e	enum:__anon9
sim_message_eventcallback_renderingpass	include/v_repConst.h	/^		sim_message_eventcallback_renderingpass, \/* called just before the scene is rendered *\/$/;"	e	enum:__anon9
sim_message_eventcallback_reserved1	include/v_repConst.h	/^		sim_message_eventcallback_reserved1, \/* do not use *\/$/;"	e	enum:__anon9
sim_message_eventcallback_reserved2	include/v_repConst.h	/^		sim_message_eventcallback_reserved2, \/* do not use *\/$/;"	e	enum:__anon9
sim_message_eventcallback_reserved3	include/v_repConst.h	/^		sim_message_eventcallback_reserved3, \/* do not use *\/$/;"	e	enum:__anon9
sim_message_eventcallback_reserved4	include/v_repConst.h	/^		sim_message_eventcallback_reserved4, \/* do not use *\/$/;"	e	enum:__anon9
sim_message_eventcallback_reserved5	include/v_repConst.h	/^		sim_message_eventcallback_reserved5,			\/* do not use *\/$/;"	e	enum:__anon9
sim_message_eventcallback_rmlposition	include/v_repConst.h	/^		sim_message_eventcallback_rmlposition, \/\/ the command simRMLPosition was called. The appropriate plugin should handle the call$/;"	e	enum:__anon9
sim_message_eventcallback_rmlvelocity	include/v_repConst.h	/^		sim_message_eventcallback_rmlvelocity, \/\/ the command simRMLVelocity was called. The appropriate plugin should handle the call$/;"	e	enum:__anon9
sim_message_eventcallback_sceneloaded	include/v_repConst.h	/^		sim_message_eventcallback_sceneloaded,$/;"	e	enum:__anon9
sim_message_eventcallback_scenesave	include/v_repConst.h	/^		sim_message_eventcallback_scenesave,				\/* about to save a scene *\/$/;"	e	enum:__anon9
sim_message_eventcallback_scripticondblclick	include/v_repConst.h	/^		sim_message_eventcallback_scripticondblclick, \/* scipt icon was double clicked.  (aux[0]=object handle associated with script, set replyData[0] to 1 if script should not be opened)  *\/$/;"	e	enum:__anon9
sim_message_eventcallback_simulationabouttostart	include/v_repConst.h	/^		sim_message_eventcallback_simulationabouttostart,$/;"	e	enum:__anon9
sim_message_eventcallback_simulationended	include/v_repConst.h	/^		sim_message_eventcallback_simulationended,$/;"	e	enum:__anon9
sim_message_eventcallback_undoperformed	include/v_repConst.h	/^		sim_message_eventcallback_undoperformed,	\/* the undo button was hit and a previous state restored *\/$/;"	e	enum:__anon9
sim_message_for_c_api_only_start	include/v_repConst.h	/^		sim_message_for_c_api_only_start=0x0100,			\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_keypress	include/v_repConst.h	/^		sim_message_keypress,					\/* a key was pressed while the focus was on a page (aux[0]=key, aux[1]=ctrl and shift key state) *\/$/;"	e	enum:__anon9
sim_message_model_loaded	include/v_repConst.h	/^		sim_message_model_loaded,$/;"	e	enum:__anon9
sim_message_object_selection_changed	include/v_repConst.h	/^		sim_message_object_selection_changed,$/;"	e	enum:__anon9
sim_message_reserved1	include/v_repConst.h	/^		sim_message_reserved1,								\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_reserved10	include/v_repConst.h	/^		sim_message_reserved10,					\/* do not use *\/$/;"	e	enum:__anon9
sim_message_reserved11	include/v_repConst.h	/^		sim_message_reserved11,					\/* do not use *\/$/;"	e	enum:__anon9
sim_message_reserved2	include/v_repConst.h	/^		sim_message_reserved2,								\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_reserved3	include/v_repConst.h	/^		sim_message_reserved3,								\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_reserved4	include/v_repConst.h	/^		sim_message_reserved4,								\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_reserved5	include/v_repConst.h	/^		sim_message_reserved5,								\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_reserved6	include/v_repConst.h	/^		sim_message_reserved6,								\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_reserved7	include/v_repConst.h	/^		sim_message_reserved7,								\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_reserved9	include/v_repConst.h	/^		sim_message_reserved9,					\/* Do not use *\/$/;"	e	enum:__anon9
sim_message_simulation_pause_request	include/v_repConst.h	/^		sim_message_simulation_pause_request,$/;"	e	enum:__anon9
sim_message_simulation_start_resume_request	include/v_repConst.h	/^		sim_message_simulation_start_resume_request=0x1000,$/;"	e	enum:__anon9
sim_message_simulation_stop_request	include/v_repConst.h	/^		sim_message_simulation_stop_request$/;"	e	enum:__anon9
sim_message_ui_button_state_change	include/v_repConst.h	/^		sim_message_ui_button_state_change=0,	\/* a UI button, slider, etc. changed (due to a user's action). aux[0]=UI handle, aux[1]=button handle, aux[2]=button attributes, aux[3]=slider position (if slider) *\/$/;"	e	enum:__anon9
sim_mill_cone_subtype	include/v_repConst.h	/^		sim_mill_cone_subtype,$/;"	e	enum:__anon6
sim_mill_cylinder_subtype	include/v_repConst.h	/^		sim_mill_cylinder_subtype,$/;"	e	enum:__anon6
sim_mill_disc_subtype	include/v_repConst.h	/^		sim_mill_disc_subtype,$/;"	e	enum:__anon6
sim_mill_pyramid_subtype	include/v_repConst.h	/^		sim_mill_pyramid_subtype=40,$/;"	e	enum:__anon6
sim_modelproperty_not_collidable	include/v_repConst.h	/^		sim_modelproperty_not_collidable				=0x0001,$/;"	e	enum:__anon8
sim_modelproperty_not_cuttable	include/v_repConst.h	/^		sim_modelproperty_not_cuttable					=0x0010,$/;"	e	enum:__anon8
sim_modelproperty_not_detectable	include/v_repConst.h	/^		sim_modelproperty_not_detectable				=0x0008,$/;"	e	enum:__anon8
sim_modelproperty_not_dynamic	include/v_repConst.h	/^		sim_modelproperty_not_dynamic					=0x0020,$/;"	e	enum:__anon8
sim_modelproperty_not_measurable	include/v_repConst.h	/^		sim_modelproperty_not_measurable				=0x0002,$/;"	e	enum:__anon8
sim_modelproperty_not_model	include/v_repConst.h	/^		sim_modelproperty_not_model						=0xf000  \/* object is not a model *\/$/;"	e	enum:__anon8
sim_modelproperty_not_renderable	include/v_repConst.h	/^		sim_modelproperty_not_renderable				=0x0004,$/;"	e	enum:__anon8
sim_modelproperty_not_reset	include/v_repConst.h	/^		sim_modelproperty_not_reset						=0x0080, \/* Model is not reset at simulation end. This flag is cleared at simulation end *\/$/;"	e	enum:__anon8
sim_modelproperty_not_respondable	include/v_repConst.h	/^		sim_modelproperty_not_respondable				=0x0040, \/* cannot be selected if sim_modelproperty_not_dynamic is not selected *\/$/;"	e	enum:__anon8
sim_modelproperty_not_visible	include/v_repConst.h	/^		sim_modelproperty_not_visible					=0x0100, \/* Whole model is invisible, independent of local visibility settings *\/$/;"	e	enum:__anon8
sim_navigation_cameraangle	include/v_repConst.h	/^	sim_navigation_cameraangle				=0x0005,$/;"	e	enum:__anon34
sim_navigation_camerafly	include/v_repConst.h	/^	sim_navigation_camerafly				=0x0006,$/;"	e	enum:__anon34
sim_navigation_camerarotate	include/v_repConst.h	/^	sim_navigation_camerarotate				=0x0002,$/;"	e	enum:__anon34
sim_navigation_camerarotaterightbutton	include/v_repConst.h	/^	sim_navigation_camerarotaterightbutton	=0x2000$/;"	e	enum:__anon34
sim_navigation_camerashift	include/v_repConst.h	/^	sim_navigation_camerashift				=0x0001,$/;"	e	enum:__anon34
sim_navigation_cameratilt	include/v_repConst.h	/^	sim_navigation_cameratilt				=0x0004,$/;"	e	enum:__anon34
sim_navigation_camerazoom	include/v_repConst.h	/^	sim_navigation_camerazoom				=0x0003,$/;"	e	enum:__anon34
sim_navigation_camerazoomwheel	include/v_repConst.h	/^	sim_navigation_camerazoomwheel			=0x1000,$/;"	e	enum:__anon34
sim_navigation_clickselection	include/v_repConst.h	/^	sim_navigation_clickselection			=0x0200,$/;"	e	enum:__anon34
sim_navigation_ctrlselection	include/v_repConst.h	/^	sim_navigation_ctrlselection			=0x0400,$/;"	e	enum:__anon34
sim_navigation_ikmanip	include/v_repConst.h	/^	sim_navigation_ikmanip					=0x000C,$/;"	e	enum:__anon34
sim_navigation_jointpathtest	include/v_repConst.h	/^	sim_navigation_jointpathtest			=0x000B,$/;"	e	enum:__anon34
sim_navigation_objectmultipleselection	include/v_repConst.h	/^	sim_navigation_objectmultipleselection	=0x000D,$/;"	e	enum:__anon34
sim_navigation_objectrotate	include/v_repConst.h	/^	sim_navigation_objectrotate				=0x0008,$/;"	e	enum:__anon34
sim_navigation_objectshift	include/v_repConst.h	/^	sim_navigation_objectshift				=0x0007,$/;"	e	enum:__anon34
sim_navigation_passive	include/v_repConst.h	/^	sim_navigation_passive					=0x0000,$/;"	e	enum:__anon34
sim_navigation_reserved2	include/v_repConst.h	/^	sim_navigation_reserved2				=0x0009,$/;"	e	enum:__anon34
sim_navigation_reserved3	include/v_repConst.h	/^	sim_navigation_reserved3				=0x000A,$/;"	e	enum:__anon34
sim_navigation_reserved4	include/v_repConst.h	/^	sim_navigation_reserved4				=0x0100,$/;"	e	enum:__anon34
sim_navigation_shiftselection	include/v_repConst.h	/^	sim_navigation_shiftselection			=0x0800,$/;"	e	enum:__anon34
sim_object_camera_type	include/v_repConst.h	/^		sim_object_camera_type,$/;"	e	enum:__anon1
sim_object_dummy_type	include/v_repConst.h	/^		sim_object_dummy_type,$/;"	e	enum:__anon1
sim_object_forcesensor_type	include/v_repConst.h	/^		sim_object_forcesensor_type,$/;"	e	enum:__anon1
sim_object_graph_type	include/v_repConst.h	/^		sim_object_graph_type,$/;"	e	enum:__anon1
sim_object_joint_type	include/v_repConst.h	/^		sim_object_joint_type,$/;"	e	enum:__anon1
sim_object_light_type	include/v_repConst.h	/^		sim_object_light_type,$/;"	e	enum:__anon1
sim_object_mill_type	include/v_repConst.h	/^		sim_object_mill_type,$/;"	e	enum:__anon1
sim_object_no_subtype	include/v_repConst.h	/^		sim_object_no_subtype=200$/;"	e	enum:__anon6
sim_object_path_type	include/v_repConst.h	/^		sim_object_path_type,$/;"	e	enum:__anon1
sim_object_proximitysensor_type	include/v_repConst.h	/^		sim_object_proximitysensor_type,$/;"	e	enum:__anon1
sim_object_reserved1	include/v_repConst.h	/^		sim_object_reserved1,$/;"	e	enum:__anon1
sim_object_reserved2	include/v_repConst.h	/^		sim_object_reserved2,$/;"	e	enum:__anon1
sim_object_shape_type	include/v_repConst.h	/^		sim_object_shape_type=0,$/;"	e	enum:__anon1
sim_object_type_end	include/v_repConst.h	/^		sim_object_type_end=sim_object_path_type+100$/;"	e	enum:__anon1
sim_object_visionsensor_type	include/v_repConst.h	/^		sim_object_visionsensor_type,$/;"	e	enum:__anon1
sim_object_volume_type	include/v_repConst.h	/^		sim_object_volume_type,$/;"	e	enum:__anon1
sim_objectproperty_collapsed	include/v_repConst.h	/^	sim_objectproperty_collapsed				=0x0010,$/;"	e	enum:__anon10
sim_objectproperty_dontshowasinsidemodel	include/v_repConst.h	/^	sim_objectproperty_dontshowasinsidemodel	=0x0100$/;"	e	enum:__anon10
sim_objectproperty_reserved1	include/v_repConst.h	/^	sim_objectproperty_reserved1	=0x0000,$/;"	e	enum:__anon10
sim_objectproperty_reserved2	include/v_repConst.h	/^	sim_objectproperty_reserved2	=0x0001,$/;"	e	enum:__anon10
sim_objectproperty_reserved3	include/v_repConst.h	/^	sim_objectproperty_reserved3	=0x0002,$/;"	e	enum:__anon10
sim_objectproperty_reserved4	include/v_repConst.h	/^	sim_objectproperty_reserved4	=0x0003,$/;"	e	enum:__anon10
sim_objectproperty_reserved5	include/v_repConst.h	/^	sim_objectproperty_reserved5	=0x0004, \/* formely sim_objectproperty_visible *\/$/;"	e	enum:__anon10
sim_objectproperty_reserved6	include/v_repConst.h	/^	sim_objectproperty_reserved6	=0x0008, \/* formely sim_objectproperty_wireframe *\/$/;"	e	enum:__anon10
sim_objectproperty_reserved7	include/v_repConst.h	/^	sim_objectproperty_reserved7				=0x0040,$/;"	e	enum:__anon10
sim_objectproperty_selectable	include/v_repConst.h	/^	sim_objectproperty_selectable				=0x0020,$/;"	e	enum:__anon10
sim_objectproperty_selectmodelbaseinstead	include/v_repConst.h	/^	sim_objectproperty_selectmodelbaseinstead	=0x0080,$/;"	e	enum:__anon10
sim_objectspecialproperty_collidable	include/v_repConst.h	/^		sim_objectspecialproperty_collidable					=0x0001,$/;"	e	enum:__anon7
sim_objectspecialproperty_cuttable	include/v_repConst.h	/^		sim_objectspecialproperty_cuttable						=0x0400,$/;"	e	enum:__anon7
sim_objectspecialproperty_detectable_all	include/v_repConst.h	/^		sim_objectspecialproperty_detectable_all				=sim_objectspecialproperty_detectable_ultrasonic|sim_objectspecialproperty_detectable_infrared|sim_objectspecialproperty_detectable_laser|sim_objectspecialproperty_detectable_inductive|sim_objectspecialproperty_detectable_capacitive,$/;"	e	enum:__anon7
sim_objectspecialproperty_detectable_capacitive	include/v_repConst.h	/^		sim_objectspecialproperty_detectable_capacitive			=0x0100,$/;"	e	enum:__anon7
sim_objectspecialproperty_detectable_inductive	include/v_repConst.h	/^		sim_objectspecialproperty_detectable_inductive			=0x0080,$/;"	e	enum:__anon7
sim_objectspecialproperty_detectable_infrared	include/v_repConst.h	/^		sim_objectspecialproperty_detectable_infrared			=0x0020,$/;"	e	enum:__anon7
sim_objectspecialproperty_detectable_laser	include/v_repConst.h	/^		sim_objectspecialproperty_detectable_laser				=0x0040,$/;"	e	enum:__anon7
sim_objectspecialproperty_detectable_ultrasonic	include/v_repConst.h	/^		sim_objectspecialproperty_detectable_ultrasonic			=0x0010,$/;"	e	enum:__anon7
sim_objectspecialproperty_measurable	include/v_repConst.h	/^		sim_objectspecialproperty_measurable					=0x0002,$/;"	e	enum:__anon7
sim_objectspecialproperty_pathplanning_ignored	include/v_repConst.h	/^		sim_objectspecialproperty_pathplanning_ignored			=0x0800$/;"	e	enum:__anon7
sim_objectspecialproperty_renderable	include/v_repConst.h	/^		sim_objectspecialproperty_renderable					=0x0200,$/;"	e	enum:__anon7
sim_particle_cyclic	include/v_repConst.h	/^	sim_particle_cyclic					=0x2000, \/* if the max item count was reached, then the first items are overwritten. *\/$/;"	e	enum:__anon25
sim_particle_emissioncolor	include/v_repConst.h	/^	sim_particle_emissioncolor			=0x4000, \/* When used in combination with sim_particle_itemcolors, then the specified colors will be for the emissive component *\/$/;"	e	enum:__anon25
sim_particle_ignoresgravity	include/v_repConst.h	/^	sim_particle_ignoresgravity			=0x0100, \/* the particles ignore the effect of gravity. Not compatible with sim_particle_water *\/$/;"	e	enum:__anon25
sim_particle_invisible	include/v_repConst.h	/^	sim_particle_invisible				=0x0200, \/* the particles are invisible *\/$/;"	e	enum:__anon25
sim_particle_itemcolors	include/v_repConst.h	/^	sim_particle_itemcolors				=0x1000, \/* +3 values per particle (each particle can have a different color) *\/$/;"	e	enum:__anon25
sim_particle_itemdensities	include/v_repConst.h	/^	sim_particle_itemdensities			=0x0800, \/* +1 value per particle (each particle can have a different density) *\/$/;"	e	enum:__anon25
sim_particle_itemsizes	include/v_repConst.h	/^	sim_particle_itemsizes				=0x0400, \/* +1 value per particle (each particle can have a different size) *\/$/;"	e	enum:__anon25
sim_particle_painttag	include/v_repConst.h	/^	sim_particle_painttag				=0x10000 \/* The particles can be seen by vision sensors (sim_particle_invisible must not be set) *\/$/;"	e	enum:__anon25
sim_particle_particlerespondable	include/v_repConst.h	/^	sim_particle_particlerespondable	=0x0080, \/* the particles are respondable against each other *\/$/;"	e	enum:__anon25
sim_particle_points1	include/v_repConst.h	/^	sim_particle_points1=0,			\/* 6 values per point (pt1 and pt2. Pt1 is start position, pt2-pt1 is the initial velocity vector). Point is 1 pixel big. Only appearance is a point, internally handled as a perfect sphere *\/$/;"	e	enum:__anon25
sim_particle_points2	include/v_repConst.h	/^	sim_particle_points2,			\/* 6 values per point. Point is 2 pixel big. Only appearance is a point, internally handled as a perfect sphere *\/$/;"	e	enum:__anon25
sim_particle_points4	include/v_repConst.h	/^	sim_particle_points4,			\/* 6 values per point. Point is 4 pixel big. Only appearance is a point, internally handled as a perfect sphere *\/$/;"	e	enum:__anon25
sim_particle_respondable1to4	include/v_repConst.h	/^	sim_particle_respondable1to4		=0x0020, \/* the particles are respondable against shapes (against all objects that have at least one bit 1-4 activated in the global respondable mask) *\/$/;"	e	enum:__anon25
sim_particle_respondable5to8	include/v_repConst.h	/^	sim_particle_respondable5to8		=0x0040, \/* the particles are respondable against shapes (against all objects that have at least one bit 5-8 activated in the global respondable mask) *\/$/;"	e	enum:__anon25
sim_particle_roughspheres	include/v_repConst.h	/^	sim_particle_roughspheres,		\/* 6 values per sphere. Only appearance is rough. Internally a perfect sphere *\/$/;"	e	enum:__anon25
sim_particle_spheres	include/v_repConst.h	/^	sim_particle_spheres,			\/* 6 values per sphere. Internally a perfect sphere *\/$/;"	e	enum:__anon25
sim_particle_water	include/v_repConst.h	/^	sim_particle_water					=0x8000, \/* the particles are water particles (no weight in the water (i.e. when z<0)). Not compatible with sim_particle_ignoresgravity *\/$/;"	e	enum:__anon25
sim_pathproperty_auto_velocity_profile_rotation	include/v_repConst.h	/^	sim_pathproperty_auto_velocity_profile_rotation		=0x0200,$/;"	e	enum:__anon22
sim_pathproperty_auto_velocity_profile_translation	include/v_repConst.h	/^	sim_pathproperty_auto_velocity_profile_translation	=0x0100,$/;"	e	enum:__anon22
sim_pathproperty_automatic_orientation	include/v_repConst.h	/^	sim_pathproperty_automatic_orientation	=0x0008,$/;"	e	enum:__anon22
sim_pathproperty_closed_path	include/v_repConst.h	/^	sim_pathproperty_closed_path			=0x0004,$/;"	e	enum:__anon22
sim_pathproperty_endpoints_at_zero	include/v_repConst.h	/^	sim_pathproperty_endpoints_at_zero					=0x0400,$/;"	e	enum:__anon22
sim_pathproperty_flat_path	include/v_repConst.h	/^	sim_pathproperty_flat_path				=0x0040,$/;"	e	enum:__anon22
sim_pathproperty_infinite_acceleration	include/v_repConst.h	/^	sim_pathproperty_infinite_acceleration	=0x0020,$/;"	e	enum:__anon22
sim_pathproperty_invert_velocity	include/v_repConst.h	/^	sim_pathproperty_invert_velocity		=0x0010,$/;"	e	enum:__anon22
sim_pathproperty_keep_x_up	include/v_repConst.h	/^	sim_pathproperty_keep_x_up							=0x0800$/;"	e	enum:__anon22
sim_pathproperty_show_line	include/v_repConst.h	/^	sim_pathproperty_show_line				=0x0001,$/;"	e	enum:__anon22
sim_pathproperty_show_orientation	include/v_repConst.h	/^	sim_pathproperty_show_orientation		=0x0002,$/;"	e	enum:__anon22
sim_pathproperty_show_position	include/v_repConst.h	/^	sim_pathproperty_show_position			=0x0080,$/;"	e	enum:__anon22
sim_proximitysensor_cone_subtype	include/v_repConst.h	/^		sim_proximitysensor_cone_subtype,$/;"	e	enum:__anon6
sim_proximitysensor_cylinder_subtype	include/v_repConst.h	/^		sim_proximitysensor_cylinder_subtype,$/;"	e	enum:__anon6
sim_proximitysensor_disc_subtype	include/v_repConst.h	/^		sim_proximitysensor_disc_subtype,$/;"	e	enum:__anon6
sim_proximitysensor_pyramid_subtype	include/v_repConst.h	/^		sim_proximitysensor_pyramid_subtype=30,$/;"	e	enum:__anon6
sim_proximitysensor_ray_subtype	include/v_repConst.h	/^		sim_proximitysensor_ray_subtype,$/;"	e	enum:__anon6
sim_reserved0	include/v_repConst.h	/^	sim_reserved0,$/;"	e	enum:__anon27
sim_script_call_error	include/v_repConst.h	/^	sim_script_call_error				=16$/;"	e	enum:__anon15
sim_script_lua_error	include/v_repConst.h	/^	sim_script_lua_error				=8,$/;"	e	enum:__anon15
sim_script_main_script_nonexistent	include/v_repConst.h	/^	sim_script_main_script_nonexistent	=1,$/;"	e	enum:__anon15
sim_script_main_script_not_called	include/v_repConst.h	/^	sim_script_main_script_not_called	=2,$/;"	e	enum:__anon15
sim_script_no_error	include/v_repConst.h	/^	sim_script_no_error					=0,$/;"	e	enum:__anon15
sim_script_reentrance_error	include/v_repConst.h	/^	sim_script_reentrance_error			=4,$/;"	e	enum:__anon15
sim_scripttype_childscript	include/v_repConst.h	/^	sim_scripttype_childscript,$/;"	e	enum:__anon16
sim_scripttype_mainscript	include/v_repConst.h	/^	sim_scripttype_mainscript=0,$/;"	e	enum:__anon16
sim_scripttype_pluginscript	include/v_repConst.h	/^	sim_scripttype_pluginscript,$/;"	e	enum:__anon16
sim_scripttype_threaded	include/v_repConst.h	/^	sim_scripttype_threaded=0x00f0			\/* Combine with one of above's type values *\/$/;"	e	enum:__anon16
sim_shape_multishape_subtype	include/v_repConst.h	/^		sim_shape_multishape_subtype,$/;"	e	enum:__anon6
sim_shape_simpleshape_subtype	include/v_repConst.h	/^		sim_shape_simpleshape_subtype=20,$/;"	e	enum:__anon6
sim_simulation_advancing	include/v_repConst.h	/^	sim_simulation_advancing					=0x10,								\/* Simulation is advancing *\/$/;"	e	enum:__anon14
sim_simulation_advancing_abouttostop	include/v_repConst.h	/^	sim_simulation_advancing_abouttostop		=sim_simulation_advancing|0x05,		\/* "Trying to stop" simulation pass (>=1x) *\/$/;"	e	enum:__anon14
sim_simulation_advancing_firstafterpause	include/v_repConst.h	/^	sim_simulation_advancing_firstafterpause	=sim_simulation_advancing|0x04,		\/* First simulation pass after pause (1x) *\/$/;"	e	enum:__anon14
sim_simulation_advancing_firstafterstop	include/v_repConst.h	/^	sim_simulation_advancing_firstafterstop		=sim_simulation_advancing|0x00,		\/* First simulation pass (1x) *\/$/;"	e	enum:__anon14
sim_simulation_advancing_lastbeforepause	include/v_repConst.h	/^	sim_simulation_advancing_lastbeforepause	=sim_simulation_advancing|0x03,		\/* Last simulation pass before pause (1x) *\/$/;"	e	enum:__anon14
sim_simulation_advancing_lastbeforestop	include/v_repConst.h	/^	sim_simulation_advancing_lastbeforestop		=sim_simulation_advancing|0x06		\/* Last simulation pass (1x) *\/$/;"	e	enum:__anon14
sim_simulation_advancing_running	include/v_repConst.h	/^	sim_simulation_advancing_running			=sim_simulation_advancing|0x01,		\/* Normal simulation pass (>=1x) *\/$/;"	e	enum:__anon14
sim_simulation_paused	include/v_repConst.h	/^	sim_simulation_paused						=0x08,								\/* Simulation is paused *\/$/;"	e	enum:__anon14
sim_simulation_stopped	include/v_repConst.h	/^	sim_simulation_stopped						=0x00,								\/* Simulation is stopped *\/$/;"	e	enum:__anon14
sim_stringparam_application_path	include/v_repConst.h	/^	sim_stringparam_application_path=0 \/* path of V-REP's executable *\/$/;"	e	enum:__anon30
sim_ui_menu_close	include/v_repConst.h	/^	sim_ui_menu_close		=4,$/;"	e	enum:__anon26
sim_ui_menu_minimize	include/v_repConst.h	/^	sim_ui_menu_minimize	=2,$/;"	e	enum:__anon26
sim_ui_menu_systemblock	include/v_repConst.h	/^	sim_ui_menu_systemblock =8$/;"	e	enum:__anon26
sim_ui_menu_title	include/v_repConst.h	/^	sim_ui_menu_title		=1,$/;"	e	enum:__anon26
sim_ui_property_fixedwidthfont	include/v_repConst.h	/^	sim_ui_property_fixedwidthfont				=0x0020,$/;"	e	enum:__anon12
sim_ui_property_moveable	include/v_repConst.h	/^	sim_ui_property_moveable					=0x0004,$/;"	e	enum:__anon12
sim_ui_property_relativetoleftborder	include/v_repConst.h	/^	sim_ui_property_relativetoleftborder		=0x0008,$/;"	e	enum:__anon12
sim_ui_property_relativetotopborder	include/v_repConst.h	/^	sim_ui_property_relativetotopborder			=0x0010,$/;"	e	enum:__anon12
sim_ui_property_rolledup	include/v_repConst.h	/^	sim_ui_property_rolledup					=0x0100,$/;"	e	enum:__anon12
sim_ui_property_selectassociatedobject	include/v_repConst.h	/^	sim_ui_property_selectassociatedobject		=0x0200,$/;"	e	enum:__anon12
sim_ui_property_settocenter	include/v_repConst.h	/^	sim_ui_property_settocenter					=0x0080,$/;"	e	enum:__anon12
sim_ui_property_systemblock	include/v_repConst.h	/^	sim_ui_property_systemblock					=0x0040,$/;"	e	enum:__anon12
sim_ui_property_visible	include/v_repConst.h	/^	sim_ui_property_visible						=0x0001,$/;"	e	enum:__anon12
sim_ui_property_visibleduringsimulationonly	include/v_repConst.h	/^	sim_ui_property_visibleduringsimulationonly	=0x0002,$/;"	e	enum:__anon12
sim_ui_property_visiblewhenobjectselected	include/v_repConst.h	/^	sim_ui_property_visiblewhenobjectselected	=0x0400$/;"	e	enum:__anon12
simrml_disable_extremum_motion_states_calc	include/v_repConst.h	/^	simrml_disable_extremum_motion_states_calc		=0x0008,$/;"	e	enum:__anon35
simrml_keep_current_vel_if_fallback_strategy	include/v_repConst.h	/^	simrml_keep_current_vel_if_fallback_strategy	=0x0010$/;"	e	enum:__anon35
simrml_keep_target_vel	include/v_repConst.h	/^	simrml_keep_target_vel							=0x0000,	$/;"	e	enum:__anon35
simrml_no_sync	include/v_repConst.h	/^	simrml_no_sync									=0x0003,$/;"	e	enum:__anon35
simrml_only_phase_sync	include/v_repConst.h	/^	simrml_only_phase_sync							=0x0002,	$/;"	e	enum:__anon35
simrml_only_time_sync	include/v_repConst.h	/^	simrml_only_time_sync							=0x0001,	$/;"	e	enum:__anon35
simrml_phase_sync_if_possible	include/v_repConst.h	/^	simrml_phase_sync_if_possible					=0x0000,	$/;"	e	enum:__anon35
simrml_recompute_trajectory	include/v_repConst.h	/^	simrml_recompute_trajectory						=0x0004,	$/;"	e	enum:__anon35
simros_strmcmd_add_status_bar_message	include/v_repConst.h	/^		simros_strmcmd_add_status_bar_message,$/;"	e	enum:__anon38
simros_strmcmd_auxiliary_console_print	include/v_repConst.h	/^		simros_strmcmd_auxiliary_console_print,$/;"	e	enum:__anon38
simros_strmcmd_clear_float_signal	include/v_repConst.h	/^		simros_strmcmd_clear_float_signal,$/;"	e	enum:__anon38
simros_strmcmd_clear_integer_signal	include/v_repConst.h	/^		simros_strmcmd_clear_integer_signal,$/;"	e	enum:__anon38
simros_strmcmd_clear_string_signal	include/v_repConst.h	/^		simros_strmcmd_clear_string_signal,$/;"	e	enum:__anon38
simros_strmcmd_get_array_parameter	include/v_repConst.h	/^		simros_strmcmd_get_array_parameter,$/;"	e	enum:__anon38
simros_strmcmd_get_boolean_parameter	include/v_repConst.h	/^		simros_strmcmd_get_boolean_parameter,$/;"	e	enum:__anon38
simros_strmcmd_get_dialog_result	include/v_repConst.h	/^		simros_strmcmd_get_dialog_result,$/;"	e	enum:__anon38
simros_strmcmd_get_float_signal	include/v_repConst.h	/^		simros_strmcmd_get_float_signal,$/;"	e	enum:__anon38
simros_strmcmd_get_floating_parameter	include/v_repConst.h	/^		simros_strmcmd_get_floating_parameter,$/;"	e	enum:__anon38
simros_strmcmd_get_info	include/v_repConst.h	/^		simros_strmcmd_get_info, \/\/ do not use. Is streamed anyway with topic name "info"$/;"	e	enum:__anon38
simros_strmcmd_get_integer_parameter	include/v_repConst.h	/^		simros_strmcmd_get_integer_parameter,$/;"	e	enum:__anon38
simros_strmcmd_get_integer_signal	include/v_repConst.h	/^		simros_strmcmd_get_integer_signal,$/;"	e	enum:__anon38
simros_strmcmd_get_joint_state	include/v_repConst.h	/^		simros_strmcmd_get_joint_state,$/;"	e	enum:__anon38
simros_strmcmd_get_object_float_parameter	include/v_repConst.h	/^		simros_strmcmd_get_object_float_parameter,$/;"	e	enum:__anon38
simros_strmcmd_get_object_int_parameter	include/v_repConst.h	/^		simros_strmcmd_get_object_int_parameter,$/;"	e	enum:__anon38
simros_strmcmd_get_object_parent	include/v_repConst.h	/^		simros_strmcmd_get_object_parent,$/;"	e	enum:__anon38
simros_strmcmd_get_object_pose	include/v_repConst.h	/^		simros_strmcmd_get_object_pose,$/;"	e	enum:__anon38
simros_strmcmd_get_object_selection	include/v_repConst.h	/^		simros_strmcmd_get_object_selection,$/;"	e	enum:__anon38
simros_strmcmd_get_objects	include/v_repConst.h	/^		simros_strmcmd_get_objects,$/;"	e	enum:__anon38
simros_strmcmd_get_range_finder_data	include/v_repConst.h	/^		simros_strmcmd_get_range_finder_data,$/;"	e	enum:__anon38
simros_strmcmd_get_string_parameter	include/v_repConst.h	/^		simros_strmcmd_get_string_parameter,$/;"	e	enum:__anon38
simros_strmcmd_get_string_signal	include/v_repConst.h	/^		simros_strmcmd_get_string_signal,$/;"	e	enum:__anon38
simros_strmcmd_get_transform	include/v_repConst.h	/^		simros_strmcmd_get_transform,$/;"	e	enum:__anon38
simros_strmcmd_get_ui_button_property	include/v_repConst.h	/^		simros_strmcmd_get_ui_button_property,$/;"	e	enum:__anon38
simros_strmcmd_get_ui_event_button	include/v_repConst.h	/^		simros_strmcmd_get_ui_event_button,$/;"	e	enum:__anon38
simros_strmcmd_get_ui_slider	include/v_repConst.h	/^		simros_strmcmd_get_ui_slider,$/;"	e	enum:__anon38
simros_strmcmd_get_vision_sensor_depth_buffer	include/v_repConst.h	/^		simros_strmcmd_get_vision_sensor_depth_buffer,$/;"	e	enum:__anon38
simros_strmcmd_get_vision_sensor_image	include/v_repConst.h	/^		simros_strmcmd_get_vision_sensor_image,$/;"	e	enum:__anon38
simros_strmcmd_get_vision_sensor_info	include/v_repConst.h	/^		simros_strmcmd_get_vision_sensor_info,$/;"	e	enum:__anon38
simros_strmcmd_read_collision	include/v_repConst.h	/^		simros_strmcmd_read_collision,$/;"	e	enum:__anon38
simros_strmcmd_read_distance	include/v_repConst.h	/^		simros_strmcmd_read_distance,$/;"	e	enum:__anon38
simros_strmcmd_read_force_sensor	include/v_repConst.h	/^		simros_strmcmd_read_force_sensor,$/;"	e	enum:__anon38
simros_strmcmd_read_proximity_sensor	include/v_repConst.h	/^		simros_strmcmd_read_proximity_sensor,$/;"	e	enum:__anon38
simros_strmcmd_read_vision_sensor	include/v_repConst.h	/^		simros_strmcmd_read_vision_sensor,$/;"	e	enum:__anon38
simros_strmcmd_set_array_parameter	include/v_repConst.h	/^		simros_strmcmd_set_array_parameter,$/;"	e	enum:__anon38
simros_strmcmd_set_boolean_parameter	include/v_repConst.h	/^		simros_strmcmd_set_boolean_parameter,$/;"	e	enum:__anon38
simros_strmcmd_set_float_signal	include/v_repConst.h	/^		simros_strmcmd_set_float_signal,$/;"	e	enum:__anon38
simros_strmcmd_set_floating_parameter	include/v_repConst.h	/^		simros_strmcmd_set_floating_parameter,$/;"	e	enum:__anon38
simros_strmcmd_set_integer_parameter	include/v_repConst.h	/^		simros_strmcmd_set_integer_parameter,$/;"	e	enum:__anon38
simros_strmcmd_set_integer_signal	include/v_repConst.h	/^		simros_strmcmd_set_integer_signal,$/;"	e	enum:__anon38
simros_strmcmd_set_joint_force	include/v_repConst.h	/^		simros_strmcmd_set_joint_force,$/;"	e	enum:__anon38
simros_strmcmd_set_joint_position	include/v_repConst.h	/^		simros_strmcmd_set_joint_position,$/;"	e	enum:__anon38
simros_strmcmd_set_joint_target_position	include/v_repConst.h	/^		simros_strmcmd_set_joint_target_position,$/;"	e	enum:__anon38
simros_strmcmd_set_joint_target_velocity	include/v_repConst.h	/^		simros_strmcmd_set_joint_target_velocity,$/;"	e	enum:__anon38
simros_strmcmd_set_object_float_parameter	include/v_repConst.h	/^		simros_strmcmd_set_object_float_parameter,$/;"	e	enum:__anon38
simros_strmcmd_set_object_int_parameter	include/v_repConst.h	/^		simros_strmcmd_set_object_int_parameter,$/;"	e	enum:__anon38
simros_strmcmd_set_object_pose	include/v_repConst.h	/^		simros_strmcmd_set_object_pose,$/;"	e	enum:__anon38
simros_strmcmd_set_object_position	include/v_repConst.h	/^		simros_strmcmd_set_object_position,$/;"	e	enum:__anon38
simros_strmcmd_set_object_quaternion	include/v_repConst.h	/^		simros_strmcmd_set_object_quaternion,$/;"	e	enum:__anon38
simros_strmcmd_set_object_selection	include/v_repConst.h	/^		simros_strmcmd_set_object_selection,$/;"	e	enum:__anon38
simros_strmcmd_set_string_signal	include/v_repConst.h	/^		simros_strmcmd_set_string_signal,$/;"	e	enum:__anon38
simros_strmcmd_set_ui_button_label	include/v_repConst.h	/^		simros_strmcmd_set_ui_button_label,$/;"	e	enum:__anon38
simros_strmcmd_set_ui_button_property	include/v_repConst.h	/^		simros_strmcmd_set_ui_button_property,$/;"	e	enum:__anon38
simros_strmcmd_set_ui_slider	include/v_repConst.h	/^		simros_strmcmd_set_ui_slider,$/;"	e	enum:__anon38
simros_strmcmd_set_vision_sensor_image	include/v_repConst.h	/^		simros_strmcmd_set_vision_sensor_image,$/;"	e	enum:__anon38
simros_strmcmdint_start	include/v_repConst.h	/^		simros_strmcmdint_start			=0x001000, $/;"	e	enum:__anon38
simros_strmcmdint_subscriber_start	include/v_repConst.h	/^		simros_strmcmdint_subscriber_start			=0x001800, $/;"	e	enum:__anon38
simros_strmcmdintint_start	include/v_repConst.h	/^		simros_strmcmdintint_start			=0x002000, $/;"	e	enum:__anon38
simros_strmcmdintint_subscriber_start	include/v_repConst.h	/^		simros_strmcmdintint_subscriber_start			=0x002800, $/;"	e	enum:__anon38
simros_strmcmdnull_start	include/v_repConst.h	/^enum {	simros_strmcmdnull_start				=0,$/;"	e	enum:__anon38
simros_strmcmdnull_subscriber_start	include/v_repConst.h	/^		simros_strmcmdnull_subscriber_start			=0x000800, $/;"	e	enum:__anon38
simros_strmcmdreserved_start	include/v_repConst.h	/^		simros_strmcmdreserved_start			=0x004000,$/;"	e	enum:__anon38
simros_strmcmdstring_start	include/v_repConst.h	/^		simros_strmcmdstring_start			=0x003000,$/;"	e	enum:__anon38
simros_strmcmdstring_subscriber_start	include/v_repConst.h	/^		simros_strmcmdstring_subscriber_start			=0x003800, $/;"	e	enum:__anon38
simulationAboutToStart	src/ROS_server.cpp	/^void ROS_server::simulationAboutToStart()$/;"	f	class:ROS_server
simulationEnded	src/ROS_server.cpp	/^void ROS_server::simulationEnded()$/;"	f	class:ROS_server
simx_cmd1string_custom_start	include/v_repConst.h	/^		simx_cmd1string_custom_start	=0x003800,$/;"	e	enum:__anon36
simx_cmd1string_start	include/v_repConst.h	/^		simx_cmd1string_start			=0x003000,$/;"	e	enum:__anon36
simx_cmd4bytes_custom_start	include/v_repConst.h	/^		simx_cmd4bytes_custom_start	=0x001800,$/;"	e	enum:__anon36
simx_cmd4bytes_start	include/v_repConst.h	/^		simx_cmd4bytes_start			=0x001000, $/;"	e	enum:__anon36
simx_cmd8bytes_custom_start	include/v_repConst.h	/^		simx_cmd8bytes_custom_start		=0x002800,$/;"	e	enum:__anon36
simx_cmd8bytes_start	include/v_repConst.h	/^		simx_cmd8bytes_start			=0x002000, $/;"	e	enum:__anon36
simx_cmd_add_statusbar_message	include/v_repConst.h	/^		simx_cmd_add_statusbar_message,$/;"	e	enum:__anon36
simx_cmd_aux_console_close	include/v_repConst.h	/^		simx_cmd_aux_console_close,$/;"	e	enum:__anon36
simx_cmd_aux_console_open	include/v_repConst.h	/^		simx_cmd_aux_console_open,$/;"	e	enum:__anon36
simx_cmd_aux_console_print	include/v_repConst.h	/^		simx_cmd_aux_console_print,$/;"	e	enum:__anon36
simx_cmd_aux_console_show	include/v_repConst.h	/^		simx_cmd_aux_console_show,$/;"	e	enum:__anon36
simx_cmd_break_force_sensor	include/v_repConst.h	/^		simx_cmd_break_force_sensor,$/;"	e	enum:__anon36
simx_cmd_clear_float_signal	include/v_repConst.h	/^		simx_cmd_clear_float_signal,$/;"	e	enum:__anon36
simx_cmd_clear_integer_signal	include/v_repConst.h	/^		simx_cmd_clear_integer_signal,$/;"	e	enum:__anon36
simx_cmd_clear_string_signal	include/v_repConst.h	/^		simx_cmd_clear_string_signal,$/;"	e	enum:__anon36
simx_cmd_close_scene	include/v_repConst.h	/^		simx_cmd_close_scene,$/;"	e	enum:__anon36
simx_cmd_copy_paste_objects	include/v_repConst.h	/^		simx_cmd_copy_paste_objects,$/;"	e	enum:__anon36
simx_cmd_display_dialog	include/v_repConst.h	/^		simx_cmd_display_dialog,$/;"	e	enum:__anon36
simx_cmd_end_dialog	include/v_repConst.h	/^		simx_cmd_end_dialog,$/;"	e	enum:__anon36
simx_cmd_erase_file	include/v_repConst.h	/^		simx_cmd_erase_file,$/;"	e	enum:__anon36
simx_cmd_get_array_parameter	include/v_repConst.h	/^		simx_cmd_get_array_parameter,$/;"	e	enum:__anon36
simx_cmd_get_boolean_parameter	include/v_repConst.h	/^		simx_cmd_get_boolean_parameter,$/;"	e	enum:__anon36
simx_cmd_get_collision_handle	include/v_repConst.h	/^		simx_cmd_get_collision_handle,$/;"	e	enum:__anon36
simx_cmd_get_dialog_input	include/v_repConst.h	/^		simx_cmd_get_dialog_input,$/;"	e	enum:__anon36
simx_cmd_get_dialog_result	include/v_repConst.h	/^		simx_cmd_get_dialog_result,$/;"	e	enum:__anon36
simx_cmd_get_distance_handle	include/v_repConst.h	/^		simx_cmd_get_distance_handle,$/;"	e	enum:__anon36
simx_cmd_get_float_signal	include/v_repConst.h	/^		simx_cmd_get_float_signal,$/;"	e	enum:__anon36
simx_cmd_get_floating_parameter	include/v_repConst.h	/^		simx_cmd_get_floating_parameter,$/;"	e	enum:__anon36
simx_cmd_get_integer_parameter	include/v_repConst.h	/^		simx_cmd_get_integer_parameter,$/;"	e	enum:__anon36
simx_cmd_get_integer_signal	include/v_repConst.h	/^		simx_cmd_get_integer_signal,$/;"	e	enum:__anon36
simx_cmd_get_joint_force	include/v_repConst.h	/^		simx_cmd_get_joint_force,$/;"	e	enum:__anon36
simx_cmd_get_joint_matrix	include/v_repConst.h	/^		simx_cmd_get_joint_matrix,$/;"	e	enum:__anon36
simx_cmd_get_joint_position	include/v_repConst.h	/^		simx_cmd_get_joint_position,$/;"	e	enum:__anon36
simx_cmd_get_last_errors	include/v_repConst.h	/^		simx_cmd_get_last_errors,$/;"	e	enum:__anon36
simx_cmd_get_model_property	include/v_repConst.h	/^		simx_cmd_get_model_property,$/;"	e	enum:__anon36
simx_cmd_get_object_child	include/v_repConst.h	/^		simx_cmd_get_object_child,$/;"	e	enum:__anon36
simx_cmd_get_object_float_parameter	include/v_repConst.h	/^		simx_cmd_get_object_float_parameter,$/;"	e	enum:__anon36
simx_cmd_get_object_handle	include/v_repConst.h	/^		simx_cmd_get_object_handle,$/;"	e	enum:__anon36
simx_cmd_get_object_int_parameter	include/v_repConst.h	/^		simx_cmd_get_object_int_parameter,$/;"	e	enum:__anon36
simx_cmd_get_object_orientation	include/v_repConst.h	/^		simx_cmd_get_object_orientation,$/;"	e	enum:__anon36
simx_cmd_get_object_parent	include/v_repConst.h	/^		simx_cmd_get_object_parent,$/;"	e	enum:__anon36
simx_cmd_get_object_position	include/v_repConst.h	/^		simx_cmd_get_object_position,$/;"	e	enum:__anon36
simx_cmd_get_object_selection	include/v_repConst.h	/^		simx_cmd_get_object_selection,$/;"	e	enum:__anon36
simx_cmd_get_objects	include/v_repConst.h	/^		simx_cmd_get_objects,$/;"	e	enum:__anon36
simx_cmd_get_string_parameter	include/v_repConst.h	/^		simx_cmd_get_string_parameter,$/;"	e	enum:__anon36
simx_cmd_get_string_signal	include/v_repConst.h	/^		simx_cmd_get_string_signal,$/;"	e	enum:__anon36
simx_cmd_get_ui_button_property	include/v_repConst.h	/^		simx_cmd_get_ui_button_property,$/;"	e	enum:__anon36
simx_cmd_get_ui_event_button	include/v_repConst.h	/^		simx_cmd_get_ui_event_button,$/;"	e	enum:__anon36
simx_cmd_get_ui_handle	include/v_repConst.h	/^		simx_cmd_get_ui_handle,$/;"	e	enum:__anon36
simx_cmd_get_ui_slider	include/v_repConst.h	/^		simx_cmd_get_ui_slider,$/;"	e	enum:__anon36
simx_cmd_get_vision_sensor_depth_buffer	include/v_repConst.h	/^		simx_cmd_get_vision_sensor_depth_buffer,$/;"	e	enum:__anon36
simx_cmd_get_vision_sensor_image_bw	include/v_repConst.h	/^		simx_cmd_get_vision_sensor_image_bw,$/;"	e	enum:__anon36
simx_cmd_get_vision_sensor_image_rgb	include/v_repConst.h	/^		simx_cmd_get_vision_sensor_image_rgb,$/;"	e	enum:__anon36
simx_cmd_load_model	include/v_repConst.h	/^		simx_cmd_load_model,$/;"	e	enum:__anon36
simx_cmd_load_scene	include/v_repConst.h	/^		simx_cmd_load_scene,$/;"	e	enum:__anon36
simx_cmd_load_ui	include/v_repConst.h	/^		simx_cmd_load_ui,$/;"	e	enum:__anon36
simx_cmd_read_collision	include/v_repConst.h	/^		simx_cmd_read_collision,$/;"	e	enum:__anon36
simx_cmd_read_distance	include/v_repConst.h	/^		simx_cmd_read_distance,$/;"	e	enum:__anon36
simx_cmd_read_force_sensor	include/v_repConst.h	/^		simx_cmd_read_force_sensor,$/;"	e	enum:__anon36
simx_cmd_read_proximity_sensor	include/v_repConst.h	/^		simx_cmd_read_proximity_sensor,$/;"	e	enum:__anon36
simx_cmd_read_vision_sensor	include/v_repConst.h	/^		simx_cmd_read_vision_sensor,$/;"	e	enum:__anon36
simx_cmd_remove_object	include/v_repConst.h	/^		simx_cmd_remove_object,$/;"	e	enum:__anon36
simx_cmd_remove_ui	include/v_repConst.h	/^		simx_cmd_remove_ui,$/;"	e	enum:__anon36
simx_cmd_rml_position	include/v_repConst.h	/^		simx_cmd_rml_position,$/;"	e	enum:__anon36
simx_cmd_rml_velocity	include/v_repConst.h	/^		simx_cmd_rml_velocity,$/;"	e	enum:__anon36
simx_cmd_set_array_parameter	include/v_repConst.h	/^		simx_cmd_set_array_parameter,$/;"	e	enum:__anon36
simx_cmd_set_boolean_parameter	include/v_repConst.h	/^		simx_cmd_set_boolean_parameter,$/;"	e	enum:__anon36
simx_cmd_set_float_signal	include/v_repConst.h	/^		simx_cmd_set_float_signal,$/;"	e	enum:__anon36
simx_cmd_set_floating_parameter	include/v_repConst.h	/^		simx_cmd_set_floating_parameter,$/;"	e	enum:__anon36
simx_cmd_set_integer_parameter	include/v_repConst.h	/^		simx_cmd_set_integer_parameter,$/;"	e	enum:__anon36
simx_cmd_set_integer_signal	include/v_repConst.h	/^		simx_cmd_set_integer_signal,$/;"	e	enum:__anon36
simx_cmd_set_joint_force	include/v_repConst.h	/^		simx_cmd_set_joint_force,$/;"	e	enum:__anon36
simx_cmd_set_joint_position	include/v_repConst.h	/^		simx_cmd_set_joint_position,$/;"	e	enum:__anon36
simx_cmd_set_joint_target_position	include/v_repConst.h	/^		simx_cmd_set_joint_target_position,$/;"	e	enum:__anon36
simx_cmd_set_joint_target_velocity	include/v_repConst.h	/^		simx_cmd_set_joint_target_velocity,$/;"	e	enum:__anon36
simx_cmd_set_model_property	include/v_repConst.h	/^		simx_cmd_set_model_property,$/;"	e	enum:__anon36
simx_cmd_set_object_float_parameter	include/v_repConst.h	/^		simx_cmd_set_object_float_parameter,$/;"	e	enum:__anon36
simx_cmd_set_object_int_parameter	include/v_repConst.h	/^		simx_cmd_set_object_int_parameter,$/;"	e	enum:__anon36
simx_cmd_set_object_orientation	include/v_repConst.h	/^		simx_cmd_set_object_orientation,$/;"	e	enum:__anon36
simx_cmd_set_object_parent	include/v_repConst.h	/^		simx_cmd_set_object_parent,$/;"	e	enum:__anon36
simx_cmd_set_object_position	include/v_repConst.h	/^		simx_cmd_set_object_position,$/;"	e	enum:__anon36
simx_cmd_set_object_selection	include/v_repConst.h	/^		simx_cmd_set_object_selection,$/;"	e	enum:__anon36
simx_cmd_set_spherical_joint_matrix	include/v_repConst.h	/^		simx_cmd_set_spherical_joint_matrix,$/;"	e	enum:__anon36
simx_cmd_set_string_signal	include/v_repConst.h	/^		simx_cmd_set_string_signal,$/;"	e	enum:__anon36
simx_cmd_set_ui_button_label	include/v_repConst.h	/^		simx_cmd_set_ui_button_label,$/;"	e	enum:__anon36
simx_cmd_set_ui_button_property	include/v_repConst.h	/^		simx_cmd_set_ui_button_property,$/;"	e	enum:__anon36
simx_cmd_set_ui_slider	include/v_repConst.h	/^		simx_cmd_set_ui_slider,$/;"	e	enum:__anon36
simx_cmd_set_vision_sensor_image_bw	include/v_repConst.h	/^		simx_cmd_set_vision_sensor_image_bw,$/;"	e	enum:__anon36
simx_cmd_set_vision_sensor_image_rgb	include/v_repConst.h	/^		simx_cmd_set_vision_sensor_image_rgb,$/;"	e	enum:__anon36
simx_cmd_spotcanbeused1	include/v_repConst.h	/^		simx_cmd_spotcanbeused1,$/;"	e	enum:__anon36
simx_cmd_spotcanbeused2	include/v_repConst.h	/^		simx_cmd_spotcanbeused2,$/;"	e	enum:__anon36
simx_cmd_spotcanbeused3	include/v_repConst.h	/^		simx_cmd_spotcanbeused3,$/;"	e	enum:__anon36
simx_cmd_spotcanbeused4	include/v_repConst.h	/^		simx_cmd_spotcanbeused4,$/;"	e	enum:__anon36
simx_cmd_spotcanbeused5	include/v_repConst.h	/^		simx_cmd_spotcanbeused5,$/;"	e	enum:__anon36
simx_cmd_start_pause_stop_simulation	include/v_repConst.h	/^		simx_cmd_start_pause_stop_simulation,$/;"	e	enum:__anon36
simx_cmd_synchronous_disable	include/v_repConst.h	/^		simx_cmd_synchronous_disable,$/;"	e	enum:__anon36
simx_cmd_synchronous_enable	include/v_repConst.h	/^		simx_cmd_synchronous_enable,$/;"	e	enum:__anon36
simx_cmd_synchronous_next	include/v_repConst.h	/^		simx_cmd_synchronous_next,$/;"	e	enum:__anon36
simx_cmd_transfer_file	include/v_repConst.h	/^		simx_cmd_transfer_file,$/;"	e	enum:__anon36
simx_cmdheaderoffset_cmd	include/v_repConst.h	604;"	d
simx_cmdheaderoffset_delay_or_split	include/v_repConst.h	605;"	d
simx_cmdheaderoffset_full_mem_size	include/v_repConst.h	601;"	d
simx_cmdheaderoffset_mem_size	include/v_repConst.h	600;"	d
simx_cmdheaderoffset_pdata_offset0	include/v_repConst.h	602;"	d
simx_cmdheaderoffset_pdata_offset1	include/v_repConst.h	603;"	d
simx_cmdheaderoffset_reserved	include/v_repConst.h	608;"	d
simx_cmdheaderoffset_sim_time	include/v_repConst.h	606;"	d
simx_cmdheaderoffset_status	include/v_repConst.h	607;"	d
simx_cmdmask	include/v_repConst.h	/^		simx_cmdmask					=0x00ffff,$/;"	e	enum:__anon36
simx_cmdnull_custom_start	include/v_repConst.h	/^		simx_cmdnull_custom_start		=0x000800,$/;"	e	enum:__anon36
simx_cmdnull_start	include/v_repConst.h	/^enum {	simx_cmdnull_start				=0,$/;"	e	enum:__anon36
simx_cmdreserved_start	include/v_repConst.h	/^		simx_cmdreserved_start			=0x004000,$/;"	e	enum:__anon36
simx_error_illegal_opmode_flag	include/v_repConst.h	/^		simx_error_illegal_opmode_flag		=0x000004,		\/* command doesn't support the specified operation mode *\/$/;"	e	enum:__anon37
simx_error_initialize_error_flag	include/v_repConst.h	/^		simx_error_initialize_error_flag	=0x000040		\/* simxStart was not yet called *\/$/;"	e	enum:__anon37
simx_error_local_error_flag	include/v_repConst.h	/^		simx_error_local_error_flag			=0x000020,		\/* command caused an error on the client side *\/$/;"	e	enum:__anon37
simx_error_noerror	include/v_repConst.h	/^enum {	simx_error_noerror					=0x000000,$/;"	e	enum:__anon37
simx_error_novalue_flag	include/v_repConst.h	/^		simx_error_novalue_flag				=0x000001,		\/* input buffer doesn't contain the specified command *\/$/;"	e	enum:__anon37
simx_error_remote_error_flag	include/v_repConst.h	/^		simx_error_remote_error_flag		=0x000008,		\/* command caused an error on the server side *\/$/;"	e	enum:__anon37
simx_error_split_progress_flag	include/v_repConst.h	/^		simx_error_split_progress_flag		=0x000010,		\/* previous similar command not yet fully processed (applies to simx_opmode_oneshot_split operation modes) *\/$/;"	e	enum:__anon37
simx_error_timeout_flag	include/v_repConst.h	/^		simx_error_timeout_flag				=0x000002,		\/* command reply not received in time for simx_opmode_oneshot_wait operation mode *\/$/;"	e	enum:__anon37
simx_headeroffset_client_time	include/v_repConst.h	593;"	d
simx_headeroffset_crc	include/v_repConst.h	590;"	d
simx_headeroffset_message_id	include/v_repConst.h	592;"	d
simx_headeroffset_scene_id	include/v_repConst.h	595;"	d
simx_headeroffset_server_state	include/v_repConst.h	596;"	d
simx_headeroffset_server_time	include/v_repConst.h	594;"	d
simx_headeroffset_version	include/v_repConst.h	591;"	d
simx_opmode_buffer	include/v_repConst.h	/^		simx_opmode_buffer				=0x060000,		\/* doesn't send anything, but checks if a reply for the given command is available in the input buffer (i.e. previously received from the server) *\/$/;"	e	enum:__anon36
simx_opmode_continuous	include/v_repConst.h	/^		simx_opmode_continuous			=0x020000,		\/* same as simx_opmode_streaming *\/$/;"	e	enum:__anon36
simx_opmode_continuous_split	include/v_repConst.h	/^		simx_opmode_continuous_split	=0x040000,		\/* same as simx_opmode_streaming_split *\/$/;"	e	enum:__anon36
simx_opmode_discontinue	include/v_repConst.h	/^		simx_opmode_discontinue			=0x050000,		\/* removes and cancels all commands of the given type stored on the client or server side (also streaming commands) *\/$/;"	e	enum:__anon36
simx_opmode_oneshot	include/v_repConst.h	/^		simx_opmode_oneshot				=0x000000,		\/* sends command as one chunk. Reply will also come as one chunk. Doesn't wait for the reply. *\/$/;"	e	enum:__anon36
simx_opmode_oneshot_split	include/v_repConst.h	/^		simx_opmode_oneshot_split		=0x030000,		\/* sends command as several chunks (max chunk size is x bytes, where x can be _MIN_SPLIT_AMOUNT_IN_BYTES-65535. Just add x to simx_opmode_oneshot_split). Reply will also come as several chunks. Doesn't wait for the reply. *\/	 $/;"	e	enum:__anon36
simx_opmode_oneshot_wait	include/v_repConst.h	/^		simx_opmode_oneshot_wait		=0x010000,		\/* sends command as one chunk. Reply will also come as one chunk. Waits for the reply (_REPLY_WAIT_TIMEOUT_IN_MS is the timeout). *\/$/;"	e	enum:__anon36
simx_opmode_remove	include/v_repConst.h	/^		simx_opmode_remove				=0x070000		\/* doesn't send anything and doesn't return any specific value. It just erases a similar command reply in the inbox (to free some memory) *\/$/;"	e	enum:__anon36
simx_opmode_streaming	include/v_repConst.h	/^		simx_opmode_streaming			=0x020000,		\/* sends command as one chunk. Command will be stored on the server and always executed (every x ms (as far as possible), where x can be 0-65535. just add x to simx_opmode_streaming). A reply will be sent continuously, each time as one chunk. Doesn't wait for the reply. *\/$/;"	e	enum:__anon36
simx_opmode_streaming_split	include/v_repConst.h	/^		simx_opmode_streaming_split		=0x040000,		\/* sends command as several chunks (max chunk size is x bytes, where x can be _MIN_SPLIT_AMOUNT_IN_BYTES-65535. Just add x to simx_opmode_streaming_split). Command will be stored on the server and always executed. A reply will be sent continuously, each time as several chunks. Doesn't wait for the reply. *\/$/;"	e	enum:__anon36
spinOnce	src/ROS_server.cpp	/^void ROS_server::spinOnce()$/;"	f	class:ROS_server
streamAllData	src/ROS_server.cpp	/^void ROS_server::streamAllData()$/;"	f	class:ROS_server
streamLaserScan	src/ROS_server.cpp	/^bool ROS_server::streamLaserScan(SPublisherData& pub, const ros::Time & now)$/;"	f	class:ROS_server
streamVisionSensorImage	src/ROS_server.cpp	/^bool ROS_server::streamVisionSensorImage(SPublisherData& pub, const ros::Time & now)$/;"	f	class:ROS_server
subscriberID	include/vrep_plugin/vrepSubscriber.h	/^	int subscriberID;$/;"	m	class:CSubscriberData
subscribers	include/vrep_plugin/ROS_server.h	/^		static std::vector<CSubscriberData*> subscribers;$/;"	m	class:ROS_server
subscribers	src/ROS_server.cpp	/^std::vector<CSubscriberData*> ROS_server::subscribers;$/;"	m	class:ROS_server	file:
tf_broadcaster	include/vrep_plugin/ROS_server.h	/^        static tf::TransformBroadcaster *tf_broadcaster;$/;"	m	class:ROS_server
tf_broadcaster	src/ROS_server.cpp	/^tf::TransformBroadcaster* ROS_server::tf_broadcaster = NULL;$/;"	m	class:ROS_server	file:
topicName	include/vrep_plugin/ROS_server.h	/^	std::string topicName;$/;"	m	struct:SPublisherData
topicName	include/vrep_plugin/vrepSubscriber.h	/^	std::string topicName;$/;"	m	class:CSubscriberData
unloadVrepLibrary	src/v_repLib.cpp	/^void unloadVrepLibrary(LIBRARY lib)$/;"	f
v_repEnd	src/vrep_plugin.cpp	/^VREP_DLLEXPORT void v_repEnd()$/;"	f
v_repMessage	src/vrep_plugin.cpp	/^VREP_DLLEXPORT void* v_repMessage(int message,int* auxiliaryData,void* customData,int* replyData)$/;"	f
v_repStart	src/vrep_plugin.cpp	/^VREP_DLLEXPORT unsigned char v_repStart(void* reservedPointer,int reservedInt)$/;"	f
vrepLib	src/vrep_plugin.cpp	/^LIBRARY vrepLib; \/\/ the V-REP library that we will dynamically load and bind$/;"	v
waitUntilZero	include/v_repLib.h	/^	simChar waitUntilZero;$/;"	m	struct:SLuaCallBack
~CSubscriberData	src/vrepSubscriber.cpp	/^CSubscriberData::~CSubscriberData()$/;"	f	class:CSubscriberData
~SSpecificPublisherData	src/ROS_server.cpp	/^SSpecificPublisherData::~SSpecificPublisherData() {}$/;"	f	class:SSpecificPublisherData
